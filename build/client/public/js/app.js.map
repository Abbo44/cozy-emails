{"version":3,"file":"public/js/app.js","sources":["app/actions/account_action_creator.coffee","app/actions/contact_action_creator.coffee","app/actions/conversation_action_creator.coffee","app/actions/layout_action_creator.coffee","app/actions/message_action_creator.coffee","app/actions/search_action_creator.coffee","app/actions/settings_action_creator.coffee","app/app_dispatcher.coffee","app/components/account-config.coffee","app/components/account_picker.coffee","app/components/alert.coffee","app/components/application.coffee","app/components/compose.coffee","app/components/contact-form.coffee","app/components/conversation.coffee","app/components/file_picker.coffee","app/components/mailbox-list.coffee","app/components/mails_input.coffee","app/components/menu.coffee","app/components/message-list.coffee","app/components/message.coffee","app/components/modal.coffee","app/components/participant.coffee","app/components/search-form.coffee","app/components/settings.coffee","app/components/thin_progress.coffee","app/components/toast.coffee","app/components/toolbox_actions.coffee","app/components/toolbox_move.coffee","app/components/topbar.coffee","app/constants/app_constants.coffee","app/initialize.coffee","app/libs/flux/dispatcher/Dispatcher.coffee","app/libs/flux/dispatcher/dispatcher.coffee","app/libs/flux/invariant.js","app/libs/flux/store/Store.coffee","app/libs/flux/store/store.coffee","app/libs/panel_router.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/mixins/router_mixin.coffee","app/mixins/store_watch_mixin.coffee","app/router.coffee","app/stores/account_store.coffee","app/stores/contact_store.coffee","app/stores/layout_store.coffee","app/stores/message_store.coffee","app/stores/refreshes_store.coffee","app/stores/search_store.coffee","app/stores/settings_store.coffee","app/utils/activity_utils.coffee","app/utils/api_utils.coffee","app/utils/message_utils.coffee","app/utils/plugin_utils.coffee","app/utils/socketio_utils.coffee","app/utils/translators/account_translator.coffee","app/utils/xhr_utils.coffee"],"names":[],"mappings":"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","sourcesContent":["XHRUtils = require '../utils/xhr_utils'\nAppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nAccountStore = require '../stores/account_store'\nLayoutActionCreator = null\n\nmodule.exports = AccountActionCreator =\n\n    create: (inputValues, afterCreation) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        XHRUtils.createAccount inputValues, (error, account) ->\n            if error? or not account?\n                AccountActionCreator._setNewAccountError error\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.ADD_ACCOUNT\n                    value: account\n\n                afterCreation(AccountStore.getByID account.id)\n\n\n    edit: (inputValues, accountID) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        account = AccountStore.getByID accountID\n        newAccount = account.mergeDeep inputValues\n\n        XHRUtils.editAccount newAccount, (error, rawAccount) ->\n            if error?\n                AccountActionCreator._setNewAccountError error\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.EDIT_ACCOUNT\n                    value: rawAccount\n                LayoutActionCreator = require '../actions/layout_action_creator'\n                LayoutActionCreator.notify t('account updated'), autoclose: true\n\n    remove: (accountID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REMOVE_ACCOUNT\n            value: accountID\n        XHRUtils.removeAccount accountID\n        window.router.navigate '', true\n\n    _setNewAccountWaitingStatus: (status) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_WAITING\n            value: status\n\n    _setNewAccountError: (errorMessage) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_ERROR\n            value: errorMessage\n\n    selectAccount: (accountID, mailboxID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SELECT_ACCOUNT\n            value:\n                accountID: accountID\n                mailboxID: mailboxID\n\n    discover: (domain, callback) ->\n        XHRUtils.accountDiscover domain, (err, infos) ->\n            if not infos?\n                infos = []\n            callback err, infos\n\n    mailboxCreate: (inputValues, callback) ->\n        XHRUtils.mailboxCreate inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_CREATE\n                    value: account\n            if callback?\n                callback error\n\n    mailboxUpdate: (inputValues, callback) ->\n        XHRUtils.mailboxUpdate inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_UPDATE\n                    value: account\n            if callback?\n                callback error\n\n\n    mailboxDelete: (inputValues, callback) ->\n        XHRUtils.mailboxDelete inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_DELETE\n                    value: account\n            if callback?\n                callback error\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nActivity      = require '../utils/activity_utils'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = ContactActionCreator =\n\n    searchContact: (query) ->\n        options =\n            name: 'search'\n            data:\n                type: 'contact'\n                query: query\n\n        activity = new Activity options\n        activity.onsuccess = ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_CONTACT_RESULTS\n                value: @result\n        activity.onerror = ->\n            console.log \"KO\", @error, @name\n\n    searchContactLocal: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CONTACT_LOCAL_SEARCH\n            value: query\n\n    createContact: (contact) ->\n        options =\n            name: 'create'\n            data:\n                type: 'contact'\n                contact: contact\n\n        activity = new Activity options\n        activity.onsuccess = ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_CONTACT_RESULTS\n                value: @result\n            msg = t('contact create success', {contact: contact.name or contact.address})\n            LayoutActionCreator.notify msg, autoclose: true\n        activity.onerror = ->\n            msg = t('contact create error', {error: @name})\n            LayoutActionCreator.notify msg, autoclose: true\n\n","AppDispatcher  = require '../app_dispatcher'\n{ActionTypes}  = require '../constants/app_constants'\nXHRUtils       = require '../utils/xhr_utils'\n{MessageFlags} = require '../constants/app_constants'\n\nmodule.exports =\n\n    delete: (conversationId, callback) ->\n        XHRUtils.conversationDelete conversationId, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            if callback?\n                callback error\n\n    move: (conversationId, to, callback) ->\n        conversation =\n            mailboxIDs: []\n        observer = jsonpatch.observe conversation\n        conversation.mailboxIDs.push to\n        patches = jsonpatch.generate observer\n        XHRUtils.conversationPatch conversationId, patches, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            if callback?\n                callback error\n\n    seen: (conversationId, flags, callback) ->\n        conversation =\n            flags: []\n        observer = jsonpatch.observe conversation\n        conversation.flags.push(MessageFlags.SEEN)\n        patches = jsonpatch.generate observer\n        XHRUtils.conversationPatch conversationId, patches, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            if callback?\n                callback error\n\n    unseen: (conversationId, flags, callback) ->\n        conversation =\n            flags: [MessageFlags.SEEN]\n        observer = jsonpatch.observe conversation\n        conversation.flags = []\n        patches = jsonpatch.generate observer\n        XHRUtils.conversationPatch conversationId, patches, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            if callback?\n                callback error\n","XHRUtils = require '../utils/xhr_utils'\nSocketUtils = require '../utils/socketio_utils'\n\nAccountStore  = require '../stores/account_store'\nLayoutStore   = require '../stores/layout_store'\nMessageStore  = require '../stores/message_store'\n\nAppDispatcher = require '../app_dispatcher'\n\n{ActionTypes, AlertLevel} = require '../constants/app_constants'\n\nAccountActionCreator = require './account_action_creator'\nMessageActionCreator = require './message_action_creator'\nSearchActionCreator = require './search_action_creator'\n\n_cachedQuery = {}\n\nmodule.exports = LayoutActionCreator =\n\n    showReponsiveMenu: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SHOW_MENU_RESPONSIVE\n            value: null\n\n    hideReponsiveMenu: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.HIDE_MENU_RESPONSIVE\n            value: null\n\n    alert: (level, message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DISPLAY_ALERT\n            value:\n                level: level\n                message: message\n\n    alertHide: (level, message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.HIDE_ALERT\n\n    refresh: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REFRESH\n            value: null\n\n    alertSuccess: (message) ->\n        LayoutActionCreator.alert AlertLevel.SUCCESS, message\n    alertInfo:    (message) ->\n        LayoutActionCreator.alert AlertLevel.INFO, message\n    alertWarning: (message) ->\n        LayoutActionCreator.alert AlertLevel.WARNING, message\n    alertError:   (message) ->\n        LayoutActionCreator.alert AlertLevel.ERROR, message\n    notify: (message, options) ->\n        task =\n            id: Date.now()\n            finished: true\n            message: message\n        if options?\n            task.autoclose = options.autoclose\n            task.errors    = options.errors\n            task.finished  = options.finished\n            task.actions   = options.actions\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_TASK_UPDATE\n            value: task\n\n    filterMessages: (filter) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_FILTER\n            value: filter\n\n    quickFilterMessages: (filter) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_QUICK_FILTER\n            value: filter\n\n    sortMessages: (sort) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_SORT\n            value: sort\n\n    getDefaultRoute: ->\n        # if there is no account, we display the configAccount\n        if AccountStore.getAll().length is 0 then 'account.new'\n        # else go directly to first account\n        else 'account.mailbox.messages'\n\n    showMessageList: (panelInfo) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n        {accountID, mailboxID} = panelInfo.parameters\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount? or selectedAccount.get('id') isnt accountID\n            AccountActionCreator.selectAccount accountID, mailboxID\n\n        cached = _cachedQuery.mailboxID is mailboxID\n        query = {}\n        ['sort', 'after', 'before', 'flag', 'pageAfter'].forEach (param) ->\n            value = panelInfo.parameters[param]\n            if value? and value isnt ''\n                query[param] = value\n                if _cachedQuery[param] isnt value\n                    _cachedQuery[param] = value\n                    cached = false\n        _cachedQuery.mailboxID = mailboxID\n\n        if not cached\n            XHRUtils.fetchMessagesByFolder mailboxID, query, (err, rawMessages) ->\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessages rawMessages\n\n    showMessage: (panelInfo, direction) ->\n        onMessage = (msg) ->\n            # if there isn't a selected account (page loaded directly),\n            # select the message's account\n            selectedAccount = AccountStore.getSelected()\n            if  not selectedAccount? and msg?.accountID\n                AccountActionCreator.selectAccount msg.accountID\n        LayoutActionCreator.hideReponsiveMenu()\n        messageID = panelInfo.parameters.messageID\n        message = MessageStore.getByID messageID\n        if message?\n            onMessage message\n        else\n            XHRUtils.fetchMessage messageID, (err, rawMessage) ->\n\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessage rawMessage\n                    onMessage rawMessage\n\n    showConversation: (panelInfo, direction) ->\n        onMessage = (msg) ->\n            # if there isn't a selected account (page loaded directly),\n            # select the message's account\n            selectedAccount = AccountStore.getSelected()\n            if  not selectedAccount? and msg?.accountID\n                AccountActionCreator.selectAccount msg.accountID\n        LayoutActionCreator.hideReponsiveMenu()\n        messageID      = panelInfo.parameters.messageID\n        message        = MessageStore.getByID messageID\n        if message?\n            onMessage message\n            conversationID = message.get 'conversationID'\n            XHRUtils.fetchConversation conversationID, (err, rawMessages) ->\n\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessages rawMessages\n                    onMessage rawMessages[0]\n        else\n            XHRUtils.fetchMessage messageID, (err, rawMessage) ->\n\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessage rawMessage\n                    onMessage rawMessage\n\n\n    showComposeNewMessage: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    # Edit draft\n    showComposeMessage: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    showCreateAccount: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n        AccountActionCreator.selectAccount null\n\n    showConfigAccount: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n        AccountActionCreator.selectAccount panelInfo.parameters.accountID\n\n    showSearch: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount null\n\n        {query, page} = panelInfo.parameters\n\n        SearchActionCreator.setQuery query\n\n        XHRUtils.search query, page, (err, results) ->\n            if err?\n                console.log err\n            else\n                SearchActionCreator.receiveRawSearchResults results\n\n    showSettings: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n\n    refreshMessages: ->\n        XHRUtils.refresh (results) ->\n            if results is \"done\"\n                MessageActionCreator.receiveRawMessages null\n                LayoutActionCreator.notify t('account refreshed'),\n                    autoclose: true\n\n    toastsShow: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.TOASTS_SHOW\n\n    toastsHide: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.TOASTS_HIDE\n\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nXHRUtils      = require '../utils/xhr_utils'\nAccountStore  = require \"../stores/account_store\"\nMessageStore  = require '../stores/message_store'\n\nmodule.exports =\n\n    receiveRawMessages: (messages) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\n            value: messages\n\n    receiveRawMessage: (message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGE\n            value: message\n\n    send: (message, callback) ->\n        XHRUtils.messageSend message, (error, message) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_SEND\n                    value: message\n            if callback?\n                callback error, message\n\n    delete: (message, callback) ->\n        if typeof message is \"string\"\n            message = MessageStore.getByID message\n        LayoutActionCreator = require './layout_action_creator'\n        # Move message to Trash folder\n        account = AccountStore.getByID(message.get 'accountID')\n        if not account?\n            console.log \"No account with id #{message.get 'accountID'} for message #{message.get 'id'}\"\n            LayoutActionCreator.alertError t 'app error'\n            return\n        trash = account.get 'trashMailbox'\n        if not trash? or trash is ''\n            LayoutActionCreator.alertError t 'message delete no trash'\n        else\n            msg = message.toJSON()\n            AppDispatcher.handleViewAction\n                type: ActionTypes.MESSAGE_ACTION\n                value:\n                    id: message.get 'id'\n                    from: Object.keys(msg.mailboxIDs)\n                    to: trash\n            observer = jsonpatch.observe msg\n            delete msg.mailboxIDs[id] for id of msg.mailboxIDs\n            msg.mailboxIDs[trash] = -1\n            patches = jsonpatch.generate observer\n            XHRUtils.messagePatch message.get('id'), patches, (err, message) =>\n                if not err?\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.MESSAGE_DELETE\n                        value: msg\n                options =\n                    autoclose: true,\n                    actions: [\n                        label: t 'message undelete'\n                        onClick: => @undelete()\n                    ]\n                LayoutActionCreator.notify t('message action delete ok', subject: msg.subject), options\n\n                if callback?\n                    callback err\n\n    move: (message, from, to, callback) ->\n        if typeof message is \"string\"\n            message = MessageStore.getByID message\n        msg = message.toJSON()\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_ACTION\n            value:\n                id: message.get 'id'\n                from: from\n                to: to\n        observer = jsonpatch.observe msg\n        delete msg.mailboxIDs[from]\n        msg.mailboxIDs[to] = -1\n        patches = jsonpatch.generate observer\n        XHRUtils.messagePatch message.get('id'), patches, (error, message) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGE\n                    value: msg\n            if callback?\n                callback error\n\n    undelete: ->\n        LayoutActionCreator = require './layout_action_creator'\n        action = MessageStore.getPrevAction()\n        if action?\n            message = MessageStore.getByID action.id\n            @move message, action.to, action.from, (err) ->\n                if not err?\n                    LayoutActionCreator.notify t('message undelete ok')\n        else\n            LayoutActionCreator.alertError t 'message undelete error'\n\n    updateFlag: (message, flags, callback) ->\n        msg = message.toJSON()\n        patches = jsonpatch.compare {flags: msg.flags}, {flags}\n        XHRUtils.messagePatch message.get('id'), patches, (error, message) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGE\n                    value: message\n            if callback?\n                callback error\n\n    setCurrent: (messageID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_CURRENT\n            value: messageID\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nmodule.exports = SearchActionCreator =\n\n    setQuery: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_SEARCH_QUERY\n            value: query\n\n    receiveRawSearchResults: (results) ->\n\n        # first clear the previous results\n        SearchActionCreator.clearSearch false\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_SEARCH_RESULTS\n            value: results\n\n    clearSearch: (clearQuery = true) ->\n        if clearQuery then SearchActionCreator.setQuery \"\"\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CLEAR_SEARCH_RESULTS\n            value: null\n\n","XHRUtils = require '../utils/xhr_utils'\nAppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nSettingsStore = require '../stores/settings_store'\nLayoutActionCreator = require './layout_action_creator'\n\nrefreshInterval = null\n\nmodule.exports = SettingsActionCreator =\n\n    edit: (inputValues) ->\n        XHRUtils.changeSettings inputValues, (err, values) ->\n            if err\n                LayoutActionCreator.alertError t('error cannot save') + err\n\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.SETTINGS_UPDATED\n                    value: values\n\n    setRefresh: (value) ->\n        if value? and value >= 1\n            if refreshInterval?\n                window.clearInterval refreshInterval\n            refreshInterval = window.setInterval ->\n                LayoutActionCreator.refreshMessages()\n            , value * 60000\n","Dispatcher = require './libs/flux/dispatcher/dispatcher'\n{PayloadSources} = require './constants/app_constants'\n\n###\n    Custom dispatcher class to add semantic method.\n###\nclass AppDispatcher extends Dispatcher\n\n    handleViewAction: (action) ->\n        payload =\n            source: PayloadSources.VIEW_ACTION\n            action: action\n\n        @dispatch payload\n\n        # create and dispatch a DOM event for plugins\n        domEvent = new CustomEvent PayloadSources.VIEW_ACTION, detail: action\n        window.dispatchEvent domEvent\n\n    handleServerAction: (action) ->\n        payload =\n            source: PayloadSources.SERVER_ACTION\n            action: action\n\n        @dispatch payload\n\n        # create and dispatch a DOM event for plugins\n        domEvent = new CustomEvent PayloadSources.SERVER_ACTION, detail: action\n        window.dispatchEvent domEvent\n\n\nmodule.exports = new AppDispatcher()\n","{div, h3, h4, form, label, input, button, ul, li, a, span, i,\nfieldset, legend} =\n    React.DOM\nclasser = React.addons.classSet\n\nMailboxList          = require './mailbox-list'\nAccountActionCreator = require '../actions/account_action_creator'\nRouterMixin = require '../mixins/router_mixin'\nLAC  = require '../actions/layout_action_creator'\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'AccountConfig'\n\n    _lastDiscovered: ''\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    _accountFields: [\n        'id', 'label', 'name', 'login', 'password',\n        'imapServer', 'imapPort', 'imapSSL', 'imapTLS',\n        'smtpServer', 'smtpPort', 'smtpSSL', 'smtpTLS',\n        'accountType', 'mailboxes', 'favoriteMailboxes',\n        'draftMailbox', 'sentMailbox', 'trashMailbox'\n    ]\n    _accountSchema:\n        properties:\n            'label':\n                allowEmpty: false\n                #type: 'string'\n            'name':\n                allowEmpty: false\n                #type: 'string'\n            'login':\n                allowEmpty: false\n                #type: 'string'\n            'password':\n                allowEmpty: false\n                #type: 'string'\n            'imapServer':\n                allowEmpty: false\n                #type: 'string'\n            'imapPort':\n                allowEmpty: false\n                #type: 'integer'\n            'imapSSL':\n                allowEmpty: true\n                #type: 'boolean'\n            'imapTLS':\n                allowEmpty: true\n                #type: 'boolean'\n            'smtpServer':\n                allowEmpty: false\n                #type: 'string'\n            'smtpPort':\n                allowEmpty: false\n                #type: 'integer'\n            'smtpSSL':\n                allowEmpty: true\n                #type: 'boolean'\n            'smtpTLS':\n                allowEmpty: true\n                #type: 'boolean'\n            'draftMailbox':\n                allowEmpty: true\n                #type: 'string'\n            'sentMailbox':\n                allowEmpty: true\n                #type: 'string'\n            'trashMailbox':\n                allowEmpty: true\n                #type: 'string'\n            'accountType':\n                allowEmpty: true\n                #type: 'string'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        if @state.id\n            titleLabel = t \"account edit\"\n        else\n            titleLabel = t \"account new\"\n\n        classes = {}\n        ['account', 'mailboxes'].map (e) =>\n            classes[e] = classer active: @state.tab is e\n\n        div id: 'mailbox-config',\n            h3 className: null, titleLabel\n\n            if @state.tab?\n                ul className: \"nav nav-tabs\", role: \"tablist\",\n                    li className: classes['account'],\n                        a\n                            'data-target': 'account'\n                            onClick: @tabChange,\n                            t \"account tab account\"\n                    li className: classes['mailboxes'],\n                        a\n                            'data-target': 'mailboxes'\n                            onClick: @tabChange,\n                            t \"account tab mailboxes\"\n\n            if not @state.tab or @state.tab is 'account'\n                @renderMain()\n            if @state.tab is 'mailboxes'\n                @renderMailboxes()\n\n    renderError: ->\n        if @props.error and @props.error.name is 'AccountConfigError'\n            message = t 'config error ' + @props.error.field\n            div className: 'alert alert-warning', message\n        else if @props.error\n            div className: 'alert alert-warning', @props.error.message\n        else if Object.keys(@state.errors).length isnt 0\n            div className: 'alert alert-warning', t 'account errors'\n\n    renderMain: ->\n\n        if @props.isWaiting then buttonLabel = 'Saving...'\n        else if @props.selectedAccount? then buttonLabel = t \"account save\"\n        else buttonLabel = t \"account add\"\n\n\n        hasError = (fields) =>\n            if not Array.isArray fields\n                fields = [ fields ]\n            errors = fields.some (field) => @state.errors[field]?\n            return if errors then ' has-error' else ''\n\n        getError = (field) =>\n            if @state.errors[field]?\n                div\n                    className: 'col-sm-5 col-sm-offset-2 control-label',\n                    @state.errors[field]\n\n        cancelUrl = @buildUrl\n            direction: 'first'\n            action: 'default'\n            fullWidth: true\n\n        form className: 'form-horizontal',\n            @renderError()\n            fieldset null,\n                legend null, t 'account identifiers'\n            div className: 'form-group' + hasError('label'),\n\n                label\n                    htmlFor: 'mailbox-label',\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    t \"account label\"\n                div className: 'col-sm-3',\n                    input\n                        id: 'mailbox-label',\n                        name: 'mailbox-label',\n                        valueLink: @linkState('label'),\n                        type: 'text',\n                        className: 'form-control',\n                        placeholder: t \"account name short\"\n                        onBlur: @validateForm\n                getError 'label'\n\n            div className: 'form-group' + hasError('name'),\n                label\n                    htmlFor: 'mailbox-name',\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    t \"account user name\"\n                div className: 'col-sm-3',\n                    input\n                        id: 'mailbox-name',\n                        name: 'mailbox-name',\n                        valueLink: @linkState('name'),\n                        type: 'text',\n                        className: 'form-control',\n                        placeholder: t \"account user fullname\"\n                        onBlur: @validateForm\n                getError 'name'\n\n            div className: 'form-group' + hasError(['login', 'auth']),\n                label\n                    htmlFor: 'mailbox-email-address',\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    t \"account address\"\n                div className: 'col-sm-3',\n                    input\n                        id: 'mailbox-email-address',\n                        name: 'mailbox-email-address',\n                        valueLink: @linkState('login'),\n                        ref: 'login',\n                        onBlur: @discover,\n                        type: 'email',\n                        className: 'form-control',\n                        placeholder: t \"account address placeholder\"\n                getError 'login'\n\n            div className: 'form-group' + hasError(['password', 'auth']),\n                label\n                    htmlFor: 'mailbox-password',\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    t 'account password'\n                div className: 'col-sm-3',\n                    input\n                        id: 'mailbox-password',\n                        name: 'mailbox-password',\n                        valueLink: @linkState('password'),\n                        type: 'password',\n                        className: 'form-control'\n                        onBlur: @validateForm\n                getError 'password'\n\n            fieldset null,\n                legend null, t 'account sending server'\n                div className: 'form-group' +\n                        hasError(['smtp', 'smtpServer', 'smtpPort']),\n                    label\n                        htmlFor: 'mailbox-smtp-server',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t \"account sending server\"\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-smtp-server',\n                            name: 'mailbox-smtp-server',\n                            valueLink: @linkState('smtpServer'),\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: 'smtp.provider.tld'\n                            onBlur: @validateForm\n                div className: 'form-group',\n                    label\n                        htmlFor: 'mailbox-smtp-port',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t 'account port'\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-smtp-port',\n                            name: 'mailbox-smtp-port',\n                            valueLink: @linkState('smtpPort'),\n                            type: 'text',\n                            className: 'form-control'\n                            onBlur: @_onSMTPPort,\n                            onInput: => @setState(smtpManualPort: true)\n                    getError 'smtpServer'\n                    getError 'smtpPort'\n\n                div className: 'form-group',\n                    label\n                        htmlFor: 'mailbox-smtp-ssl',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t 'account SSL'\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-smtp-ssl',\n                            name: 'mailbox-smtp-ssl',\n                            checkedLink: @linkState('smtpSSL'),\n                            type: 'checkbox',\n                            onClick: (ev) =>\n                                @_onServerParam ev.target, 'smtp', 'ssl'\n                div className: 'form-group',\n                    label\n                        htmlFor: 'mailbox-smtp-tls',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t 'account TLS'\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-smtp-tls',\n                            name: 'mailbox-smtp-tls',\n                            checkedLink: @linkState('smtpTLS'),\n                            type: 'checkbox',\n                            onClick: (ev) =>\n                                @_onServerParam ev.target, 'smtp', 'tls'\n\n            div className: 'hidden',\n                label\n                    htmlFor: 'account-type',\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    t 'account type'\n                div className: 'col-sm-3',\n                    input\n                        id: 'account-type',\n                        name: 'account-type',\n                        ref: 'type',\n                        valueLink: @linkState('accountType'),\n                        type: 'text',\n                        className: 'form-control'\n                getError 'password'\n            fieldset null,\n                legend null, t 'account receiving server'\n                div className: 'form-group' +\n                        hasError(['imap', 'imapServer', 'imapPort']),\n                    label\n                        htmlFor: 'mailbox-imap-server',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t \"account receiving server\"\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-imap-server',\n                            name: 'mailbox-imap-server',\n                            valueLink: @linkState('imapServer'),\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: 'imap.provider.tld'\n                            onBlur: @validateForm\n                div className: 'form-group',\n                    label\n                        htmlFor: 'mailbox-imap-port',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        'Port'\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-imap-port',\n                            name: 'mailbox-imap-port',\n                            valueLink: @linkState('imapPort'),\n                            type: 'text',\n                            className: 'form-control',\n                            onBlur: @_onIMAPPort\n                            onInput: => @setState(imapManualPort: true)\n                    getError 'imapServer'\n                    getError 'imapPort'\n\n                div className: 'form-group',\n                    label\n                        htmlFor: 'mailbox-imap-ssl',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t 'account SSL'\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-imap-ssl',\n                            name: 'mailbox-imap-ssl',\n                            checkedLink: @linkState('imapSSL'),\n                            type: 'checkbox',\n                            onClick: (ev) =>\n                                @_onServerParam ev.target, 'imap', 'ssl'\n                div className: 'form-group',\n                    label\n                        htmlFor: 'mailbox-imap-tls',\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\n                        t 'account TLS'\n                    div className: 'col-sm-3',\n                        input\n                            id: 'mailbox-imap-tls',\n                            name: 'mailbox-imap-tls',\n                            checkedLink: @linkState('imapTLS'),\n                            type: 'checkbox',\n                            onClick: (ev) =>\n                                @_onServerParam ev.target, 'imap', 'tls'\n\n            fieldset null,\n                legend null, t 'account actions'\n            div className: '',\n                div className: 'col-sm-offset-4',\n                    button\n                        className: 'btn btn-cozy',\n                        onClick: @onSubmit, buttonLabel\n                if @state.id?\n                    fieldset null,\n                        legend null, t 'account danger zone'\n                        div className: 'col-sm-offset-4',\n                            button\n                                className: 'btn btn-default btn-danger btn-remove',\n                                onClick: @onRemove,\n                                t \"account remove\"\n\n    renderMailboxes: ->\n        favorites = @state.favoriteMailboxes\n        if @state.mailboxes? and favorites?\n            mailboxes = @state.mailboxes.map (mailbox, key) =>\n                try\n                    favorite = favorites.get(mailbox.get('id'))?\n                    MailboxItem {accountID: @state.id, mailbox, favorite}\n                catch error\n                    console.log error, favorites\n            .toJS()\n        form className: 'form-horizontal',\n\n            @renderError()\n            @_renderMailboxChoice t('account draft mailbox'), \"draftMailbox\"\n            @_renderMailboxChoice t('account sent mailbox'),  \"sentMailbox\"\n            @_renderMailboxChoice t('account trash mailbox'), \"trashMailbox\"\n\n            h4 className: 'config-title', t \"account tab mailboxes\"\n            ul className: \"folder-list list-unstyled boxes container\",\n                if mailboxes?\n                    li className: 'row box title', key: 'title',\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-6\",\n                            ''\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title total'\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title unread'\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title new'\n                mailboxes\n                li className: \"row box new\", key: 'new',\n                    span\n                        className: \"col-xs-1 box-action add\"\n                        onClick: @addMailbox\n                        title: t(\"mailbox title add\"),\n                            i className: 'fa fa-plus'\n                    span\n                        className: \"col-xs-1 box-action cancel\"\n                        onClick: @undoMailbox\n                        title: t(\"mailbox title add cancel\"),\n                            i className: 'fa fa-undo'\n                    div className: 'col-xs-6',\n                        input\n                            id: 'newmailbox',\n                            ref: 'newmailbox',\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: t \"account newmailbox placeholder\"\n                            onKeyDown: @onKeyDown\n                    label\n                        className: 'col-xs-2 text-center control-label',\n                        t \"account newmailbox parent\"\n                    div className: 'col-xs-2 text-center',\n                        MailboxList\n                            allowUndefined: true\n                            mailboxes: @state.mailboxes\n                            selectedMailbox: @state.newMailboxParent\n                            onChange: (mailbox) =>\n                                @setState newMailboxParent: mailbox\n\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Enter\"\n                @addMailbox()\n\n    _renderMailboxChoice: (labelText, box) ->\n        if @state.id?\n            div className: \"form-group #{box}\",\n                label\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    labelText\n                div className: 'col-sm-3',\n                    MailboxList\n                        allowUndefined: true\n                        mailboxes: @state.mailboxes\n                        selectedMailbox: @state[box]\n                        onChange: (mailbox) =>\n                            newState = {}\n                            newState[box] = mailbox\n                            @setState newState, =>\n                                @onSubmit()\n\n    _afterMount: ->\n        # On error, scroll to message\n        node = document.querySelector(\"#mailbox-config .alert\")\n        if node?\n            node.scrollIntoView()\n\n    componentDidMount: ->\n        @_afterMount()\n\n    componentDidUpdate: ->\n        @_afterMount()\n\n    doValidate: ->\n        accountValue = {}\n        init = (field) =>\n            accountValue[field] = @state[field]\n        init field for field in @_accountFields\n\n        validOptions =\n            additionalProperties: true\n\n        valid = validate accountValue, @_accountSchema, validOptions\n\n        return {accountValue, valid}\n\n    validateForm: (event) ->\n        if event?\n            event.preventDefault()\n        # If form contains errors, re-validate it every time the user updates\n        # a field\n        if Object.keys(@state.errors).length isnt 0\n            {accountValue, valid} = @doValidate()\n            if valid.valid\n                @setState errors: {}\n            else\n                errors = {}\n                setError = (error) ->\n                    errors[error.property] = t \"validate #{error.message}\"\n                setError error for error in valid.errors\n                @setState errors: errors\n\n    onSubmit: (event) ->\n        if event?\n            # prevents the page from reloading\n            event.preventDefault()\n\n        {accountValue, valid} = @doValidate()\n\n        if valid.valid\n            @setState errors: {}\n            afterCreation = (account) =>\n                state = {}\n                init = (field) ->\n                    state[field] = account.get field\n                init field for field in @_accountFields\n                state.newMailboxParent = null\n                state.tab = 'mailboxes'\n                LAC.alertSuccess t \"account creation ok\"\n                @setState state\n\n\n            if @state.id?\n                AccountActionCreator.edit accountValue,\n                    @state.id\n            else\n                AccountActionCreator.create accountValue, afterCreation\n        else\n            errors = {}\n            setError = (error) ->\n                errors[error.property] = t \"validate #{error.message}\"\n            setError error for error in valid.errors\n            @setState errors: errors\n\n    onRemove: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        if window.confirm(t 'account remove confirm')\n            AccountActionCreator.remove @state.id\n\n\n    tabChange: (e) ->\n        e.preventDefault()\n        @setState tab: e.target.dataset.target\n\n\n    addMailbox: (event) ->\n        event?.preventDefault()\n\n        mailbox =\n            label: @refs.newmailbox.getDOMNode().value.trim()\n            accountID: @state.id\n            parentID: @state.newMailboxParent\n\n        AccountActionCreator.mailboxCreate mailbox, (error) ->\n            if error?\n                LAC.alertError \"#{t(\"mailbox create ko\")} #{error}\"\n            else\n                LAC.alertSuccess t \"mailbox create ok\"\n\n    undoMailbox: (event) ->\n        event.preventDefault()\n\n        @refs.newmailbox.getDOMNode().value = ''\n        @setState newMailboxParent: null\n\n\n    discover: (event) ->\n        @validateForm event\n\n        login = @state.login#@refs.login.getDOMNode().value.trim()\n\n        if login isnt @_lastDiscovered\n            AccountActionCreator.discover login.split('@')[1],\n            (err, provider) =>\n                if not err?\n                    infos = {}\n                    getInfos = (server) ->\n                        if server.type is 'imap' and not infos.imapServer?\n                            infos.imapServer = server.hostname\n                            infos.imapPort   = server.port\n                            if server.socketType is 'SSL'\n                                infos.imapSSL = true\n                                infos.imapTLS = false\n                            else if server.socketType is 'STARTTLS'\n                                infos.imapSSL = false\n                                infos.imapTLS = true\n                            else if server.socketType is 'plain'\n                                infos.imapSSL = false\n                                infos.imapTLS = false\n                        if server.type is 'smtp' and not infos.smtpServer?\n                            infos.smtpServer = server.hostname\n                            infos.smtpPort   = server.port\n                            if server.socketType is 'SSL'\n                                infos.smtpSSL = true\n                                infos.smtpTLS = false\n                            else if server.socketType is 'STARTTLS'\n                                infos.smtpSSL = false\n                                infos.smtpTLS = true\n                            else if server.socketType is 'plain'\n                                infos.smtpSSL = false\n                                infos.smtpTLS = false\n                    getInfos server for server in provider\n                    if not infos.imapServer?\n                        infos.imapServer = ''\n                        infos.imapPort   = '993'\n                    if not infos.smtpServer?\n                        infos.smtpServer = ''\n                        infos.smtpPort   = '465'\n                    if not infos.imapSSL\n                        switch infos.imapPort\n                            when '993'\n                                infos.imapSSL = true\n                                infos.imapTLS = false\n                            else\n                                infos.imapSSL = false\n                                infos.imapTLS = false\n                    if not infos.smtpSSL\n                        switch infos.smtpPort\n                            when '465'\n                                infos.smtpSSL = true\n                                infos.smtpTLS = false\n                            when '587'\n                                infos.smtpSSL = false\n                                infos.smtpTLS = true\n                            else\n                                infos.smtpSSL = false\n                                infos.smtpTLS = false\n                    @setState infos\n                    @validateForm()\n            @_lastDiscovered = login\n\n    _onServerParam: (target, server, type) ->\n        if (server is 'imap' and @state.imapManualPort) or\n        (server is 'smtp' and @state.smtpManualPort)\n            # port has been set manually, don't update it\n            return\n        if server is 'smtp'\n            if type is 'ssl' and target.checked\n                @setState smtpPort: 465\n            else if type is 'tls' and target.checked\n                @setState smtpPort: 587\n        else\n            if target.checked\n                @setState imapPort: 993\n            else\n                @setState imapPort: 143\n\n    _onIMAPPort: (ev) ->\n        port = ev.target.value.trim()\n        infos =\n            imapPort: port\n        switch port\n            when '993'\n                infos.imapSSL = true\n                infos.imapTLS = false\n            else\n                infos.imapSSL = false\n                infos.imapTLS = false\n        @setState infos\n\n    _onSMTPPort: (ev) ->\n        port = ev.target.value.trim()\n        infos = {}\n        switch port\n            when '465'\n                infos.smtpSSL = true\n                infos.smtpTLS = false\n            when '587'\n                infos.smtpSSL = false\n                infos.smtpTLS = true\n            else\n                infos.smtpSSL = false\n                infos.smtpTLS = false\n        @setState infos\n\n    componentWillReceiveProps: (props) ->\n\n\n        # prevents the form from changing during submission\n        if not props.isWaiting\n            # display the account values\n            if not props.selectedAccount? or\n            @state.id isnt props.selectedAccount.get 'id'\n                tab = \"account\"\n            else\n                tab = @state.tab\n            @setState @_accountToState(tab, props)\n\n    getInitialState: ->\n        return @_accountToState(\"account\")\n\n    _accountToState: (tab, props)->\n        state =\n            errors: {}\n        if props?\n            account = props.selectedAccount\n            if props.error?\n                if props.error.name is 'AccountConfigError'\n                    field = props.error.field\n                    state.errors[field] = t 'config error ' + field\n        if account?\n            init = (field) ->\n                state[field] = account.get field\n            init field for field in @_accountFields\n            state.newMailboxParent = null\n            state.tab = tab\n            state.mailboxes         = props.mailboxes\n            state.favoriteMailboxes = props.favoriteMailboxes\n            if state.mailboxes.length is 0\n                state.tab = 'mailboxes'\n        else if Object.keys(state.errors).length is 0\n            init = (field) ->\n                state[field] = ''\n            init field for field in @_accountFields\n            state.id       = null\n            state.smtpPort = 465\n            state.smtpSSL  = true\n            state.smtpTLS  = false\n            state.imapPort = 993\n            state.imapSSL  = true\n            state.imapTLS  = false\n            state.accountType = 'IMAP'\n            state.newMailboxParent  = null\n            state.favoriteMailboxes = null\n            state.tab = null\n\n        return state\n\nMailboxItem = React.createClass\n    displayName: 'MailboxItem'\n\n    propTypes:\n        mailbox: React.PropTypes.object\n\n    componentWillReceiveProps: (props) ->\n        @setState edited: false\n\n    getInitialState: ->\n        return {\n            edited: false\n            favorite: @props.favorite\n        }\n\n    render: ->\n        pusher = \"\"\n        pusher += \"    \" for j in [1..@props.mailbox.get('depth')] by 1\n        key = @props.mailbox.get 'id'\n        \"#{pusher}#{@props.mailbox.get 'label'}\"\n        if @state.favorite\n            favoriteClass = \"fa fa-eye\"\n            favoriteTitle = t \"mailbox title favorite\"\n        else\n            favoriteClass = \"fa fa-eye-slash\"\n            favoriteTitle = t \"mailbox title not favorite\"\n        nbTotal  = @props.mailbox.get('nbTotal') or 0\n        nbUnread = @props.mailbox.get('nbUnread') or 0\n        nbNew    = @props.mailbox.get('nbNew') or 0\n        classItem = classer\n            'row': true\n            'box': true\n            'box-item': true\n            edited: @state.edited\n        if @state.edited\n            li className: classItem, key: key,\n                span\n                    className: \"col-xs-1 box-action save\"\n                    onClick: @updateMailbox\n                    title: t(\"mailbox title edit save\"),\n                        i className: 'fa fa-check'\n                span\n                    className: \"col-xs-1 box-action cancel\"\n                    onClick: @undoMailbox\n                    title: t(\"mailbox title edit cancel\"),\n                        i className: 'fa fa-undo'\n                input\n                    className: \"col-xs-6 box-label\"\n                    ref: 'label',\n                    defaultValue: @props.mailbox.get 'label'\n                    type: 'text'\n                    onKeyDown: @onKeyDown,\n        else\n            li className: classItem, key: key,\n                span\n                    className: \"col-xs-1 box-action edit\",\n                    onClick: @editMailbox,\n                    title: t(\"mailbox title edit\"),\n                        i className: 'fa fa-pencil'\n                span\n                    className: \"col-xs-1 box-action delete\",\n                    onClick: @deleteMailbox,\n                    title: t(\"mailbox title delete\"),\n                        i className: 'fa fa-trash-o'\n                span\n                    className: \"col-xs-6 box-label\",\n                    onClick: @editMailbox,\n                    \"#{pusher}#{@props.mailbox.get 'label'}\"\n                span\n                    className: \"col-xs-1 box-action favorite\",\n                    title: favoriteTitle\n                    onClick: @toggleFavorite,\n                        i className: favoriteClass\n                span\n                    className: \"col-xs-1 text-center box-count box-total\",\n                    nbTotal\n                span\n                    className: \"col-xs-1 text-center box-count box-unread\",\n                    nbUnread\n                span\n                    className: \"col-xs-1 text-center box-count box-new\",\n                    nbNew\n\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Enter\"\n                @updateMailbox()\n\n    editMailbox: (e) ->\n        e.preventDefault()\n        @setState edited: true\n\n    undoMailbox: (e) ->\n        e.preventDefault()\n        @setState edited: false\n\n    updateMailbox: (e) ->\n        e?.preventDefault()\n\n        mailbox =\n            label: @refs.label.getDOMNode().value.trim()\n            mailboxID: @props.mailbox.get 'id'\n            accountID: @props.accountID\n\n        AccountActionCreator.mailboxUpdate mailbox, (error) ->\n            if error?\n                LAC.alertError \"#{t(\"mailbox update ko\")} #{error}\"\n            else\n                LAC.alertSuccess t \"mailbox update ok\"\n\n    toggleFavorite: (e) ->\n\n        mailbox =\n            favorite: not @state.favorite\n            mailboxID: @props.mailbox.get 'id'\n            accountID: @props.accountID\n\n        AccountActionCreator.mailboxUpdate mailbox, (error) ->\n            if error?\n                LAC.alertError \"#{t(\"mailbox update ko\")} #{error}\"\n            else\n                LAC.alertSuccess t \"mailbox update ok\"\n\n        @setState favorite: not @state.favorite\n\n    deleteMailbox: (e) ->\n        e.preventDefault()\n\n        if window.confirm(t 'account confirm delbox')\n            mailbox =\n                mailboxID: @props.mailbox.get 'id'\n                accountID: @props.accountID\n\n            AccountActionCreator.mailboxDelete mailbox, (error) ->\n                if error?\n                    LAC.alertError \"#{t(\"mailbox delete ko\")} #{error}\"\n                else\n                    LAC.alertSuccess t \"mailbox delete ok\"\n","{div, ul, li, p, span, a, button, input} = React.DOM\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'AccountPicker'\n\n\n\n    render: ->\n        if accounts.length is 1\n            @renderNoChoice()\n        else\n            @renderPicker()\n\n    onChange: ({target: dataset: value: accountID})->\n        @props.valueLink.requestChange accountID\n\n\n    renderNoChoice: ->\n        account = @props.accounts.get @props.valueLink.value\n\n        p className: 'form-control-static col-sm-3', account.get 'label'\n\n\n    renderPicker:  ->\n        accounts = @props.accounts\n        account  = accounts.get @props.valueLink.value\n        value    = @props.valueLink.value\n        if @props.type is 'address'\n            label = \"\\\"#{account.get('name') or account.get('label')}\\\" <#{account.get 'login'}>\"\n        else\n            label = account.label\n\n        div null,\n            span\n                className: 'compose-from dropdown-toggle',\n                'data-toggle': 'dropdown',\n            #button\n            #    id: 'compose-from',\n            #    className: 'btn btn-default dropdown-toggle',\n            #    type: 'button',\n            #    'data-toggle': 'dropdown',\n                    span ref: 'account', label\n                    span className: 'caret'\n            ul className: 'dropdown-menu', role: 'menu',\n                for key, account of accounts.toJS() when key isnt value\n                    @renderAccount(key, account)\n\n    renderAccount: (key, account) ->\n        if @props.type is 'address'\n            label = \"\\\"#{account.name or account.label}\\\" <#{account.login}>\"\n        else\n            label = account.label\n\n        li\n            role: 'presentation',\n            key: key,\n                a\n                    role: 'menuitem',\n                    onClick: @onChange,\n                    'data-value': key,\n                    label\n\n\n","{div, button, span, strong} = React.DOM\n{AlertLevel}     = require '../constants/app_constants'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = React.createClass\n    displayName: 'Alert'\n\n    render: ->\n\n        alert = @props.alert\n        if alert.level?\n            levels = {}\n            levels[AlertLevel.SUCCESS] = 'alert-success'\n            levels[AlertLevel.INFO]    = 'alert-info'\n            levels[AlertLevel.WARNING] = 'alert-warning'\n            levels[AlertLevel.ERROR]   = 'alert-danger'\n\n        div className: 'row',\n            if alert.level?\n                div\n                    ref: 'alert'\n                    className: \"alert #{levels[alert.level]} alert-dismissible\",\n                    role: \"alert\",\n                        button\n                            type: \"button\",\n                            className: \"close\",\n                            onClick: @hide,\n                                span 'aria-hidden': \"true\", \"×\"\n                                span className: \"sr-only\", t \"app alert close\"\n                        strong null, alert.message\n\n    hide: ->\n        LayoutActionCreator.alertHide()\n\n    autohide: ->\n        if false and @props.alert.level is AlertLevel.SUCCESS\n            setTimeout =>\n                @refs.alert.getDOMNode().classList.add 'autoclose'\n            , 1000\n            setTimeout @hide, 10000\n\n    componentDidMount: ->\n        @autohide()\n\n    componentDidUpdate: ->\n        @autohide()\n","# React components\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\nAccountConfig = require './account-config'\nAlert         = require './alert'\nTopbar        = require './topbar'\nToastContainer = require('./toast').Container\nCompose       = require './compose'\nConversation  = require './conversation'\nMenu          = require './menu'\nMessageList   = require './message-list'\nSettings      = require './settings'\nSearchForm = require './search-form'\n\n# React addons\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\nclasser = React.addons.classSet\n\n# React Mixins\nRouterMixin = require '../mixins/router_mixin'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\n\n# Flux stores\nAccountStore  = require '../stores/account_store'\nContactStore  = require '../stores/contact_store'\nMessageStore  = require '../stores/message_store'\nLayoutStore   = require '../stores/layout_store'\nSettingsStore = require '../stores/settings_store'\nSearchStore   = require '../stores/search_store'\nRefreshesStore = require '../stores/refreshes_store'\n\n# Flux actions\nLayoutActionCreator = require '../actions/layout_action_creator'\n\n###\n    This component is the root of the React tree.\n\n    It has two functions:\n        - building the layout based on the router\n        - listening for changes in  the model (Flux stores)\n          and re-render accordingly\n\n    About routing: it uses Backbone.Router as a source of truth for the layout.\n    (based on:\n        https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\n###\nmodule.exports = Application = React.createClass\n    displayName: 'Application'\n\n    mixins: [\n        StoreWatchMixin [AccountStore, ContactStore, MessageStore, LayoutStore,\n        SettingsStore, SearchStore, RefreshesStore]\n        RouterMixin\n    ]\n\n    render: ->\n        # Shortcut\n        layout = @props.router.current\n        if not layout?\n            return div null, t \"app loading\"\n\n        # is the layout a full-width panel or two panels sharing the width\n        isFullWidth = not layout.secondPanel?\n\n        firstPanelLayoutMode = if isFullWidth then 'full' else 'first'\n\n        # css classes are a bit long so we use a subfunction to get them\n        panelClasses = @getPanelClasses isFullWidth\n\n        # classes for page-content\n        responsiveClasses = classer\n            'col-xs-12 col-md-11': true\n            'pushed': @state.isResponsiveMenuShown\n\n        alert = @state.alertMessage\n\n        getUrl = (mailbox) =>\n            @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [\n                    @state.selectedAccount?.get('id'),\n                    mailbox.get('id')\n                ]\n\n        keyFirst = 'left-panel-' + layout.firstPanel.action.split('.')[0]\n        if layout.secondPanel?\n            keySecond = 'right-panel-' + layout.secondPanel.action.split('.')[0]\n        # Actual layout\n        div className: 'container-fluid',\n            div className: 'row',\n\n                # Menu is self-managed because this part of the layout\n                # is always the same.\n                Menu\n                    accounts: @state.accounts\n                    refreshes: @state.refreshes\n                    selectedAccount: @state.selectedAccount\n                    selectedMailboxID: @state.selectedMailboxID\n                    isResponsiveMenuShown: @state.isResponsiveMenuShown\n                    layout: @props.router.current\n                    favoriteMailboxes: @state.favoriteMailboxes\n\n                div id: 'page-content', className: responsiveClasses,\n\n                    # Display feedback\n                    Alert { alert }\n                    ToastContainer()\n\n                    # The quick actions bar\n                    #Topbar\n                    #    layout: @props.router.current\n                    #    mailboxes: @state.mailboxes\n                    #    selectedAccount: @state.selectedAccount\n                    #    selectedMailboxID: @state.selectedMailboxID\n                    #    searchQuery: @state.searchQuery\n                    #    isResponsiveMenuShown: @state.isResponsiveMenuShown\n\n                    # Two layout modes: one full-width panel or two panels\n                    div id: 'panels', className: 'row',\n                        div\n                            className: panelClasses.firstPanel,\n                            key: keyFirst,\n                                @getPanelComponent layout.firstPanel,\n                                    firstPanelLayoutMode\n                        if not isFullWidth and layout.secondPanel?\n                            div\n                                className: panelClasses.secondPanel,\n                                key: keySecond,\n                                    @getPanelComponent layout.secondPanel,\n                                        'second'\n\n\n    # Panels CSS classes are a bit long so we get them from a this subfunction\n    # Also, it manages transitions between screens by adding relevant classes\n    getPanelClasses: (isFullWidth) ->\n        previous = @props.router.previous\n        layout   = @props.router.current\n        first    = layout.firstPanel\n        second   = layout.secondPanel\n\n        # Two cases: the layout has a full-width panel...\n        if isFullWidth\n            classes = firstPanel: 'panel col-xs-12 col-md-12'\n\n            # custom case for mailbox.config action (top right cog button)\n            if previous? and first.action is 'account.config'\n                classes.firstPanel += ' moveFromTopRightCorner'\n\n            # (default) when full-width panel is shown after\n            # a two-panels structure\n            else if previous? and previous.secondPanel\n\n                # if the full-width panel was on right right before, it expands\n                if previous.secondPanel.action is layout.firstPanel.action and\n                   _.difference(previous.secondPanel.parameters,\n                        layout.firstPanel.parameters).length is 0\n                    classes.firstPanel += ' expandFromRight'\n\n            # (default) when full-width panel is shown after a full-width panel\n            else if previous?\n                classes.firstPanel += ' moveFromLeft'\n\n\n        # ... or a two panels layout.\n        else\n            classes =\n                firstPanel: 'panel col-xs-12 col-md-6 hidden-xs hidden-sm'\n                secondPanel: 'panel col-xs-12 col-md-6'\n\n            # we don't animate in the first render\n            if previous?\n                wasFullWidth = not previous.secondPanel?\n\n                # transition from full-width to two-panels layout\n                if wasFullWidth and not isFullWidth\n\n                    # expanded second panel collapses\n                    if previous.firstPanel.action is second.action and\n                       _.difference(previous.firstPanel.parameters,\n                            second.parameters).length is 0\n                        classes.firstPanel += ' moveFromLeft'\n                        classes.secondPanel += ' slide-in-from-left'\n\n                    # (default) opens second panel sliding from the right\n                    else\n                        classes.secondPanel += ' slide-in-from-right'\n\n                # (default) opens second panel sliding from the left\n                else if not isFullWidth\n                    classes.secondPanel += ' slide-in-from-left'\n\n        return classes\n\n\n    # Factory of React components for panels\n    getPanelComponent: (panelInfo, layout) ->\n\n        # -- Generates a list of messages for a given account and mailbox\n        if panelInfo.action is 'account.mailbox.messages' or\n           panelInfo.action is 'account.mailbox.messages.full' or\n           panelInfo.action is 'search'\n\n            if panelInfo.action is 'search'\n                accountID = null\n                mailboxID = null\n                messages  = SearchStore.getResults()\n                messagesCount    = messages.count()\n                emptyListMessage = t 'list search empty', query: @state.searchQuery\n                counterMessage   = t 'list search count', messagesCount\n            else\n                accountID = panelInfo.parameters.accountID\n                mailboxID = panelInfo.parameters.mailboxID\n                account   = AccountStore.getByID accountID\n                if account?\n                    mailbox   = account.get('mailboxes').get mailboxID\n                    messages  = MessageStore.getMessagesByMailbox mailboxID\n                    messagesCount = mailbox?.get('nbTotal') or 0\n                    emptyListMessage = t 'list empty'\n                    counterMessage   = t 'list count', messagesCount\n                else\n                    @redirect\n                        direction: \"first\"\n                        action: \"default\"\n                    return\n\n\n            # gets the selected message if any\n            messageID = MessageStore.getCurrentID()\n            direction = if layout is 'first' then 'secondPanel' \\\n                else 'firstPanel'\n\n            query = MessageStore.getParams()\n            query.accountID = accountID\n            query.mailboxID = mailboxID\n            #paginationUrl = @buildUrl\n            #    direction: 'first'\n            #    action: 'account.mailbox.messages.full'\n            #    parameters: query\n            return MessageList\n                messages:      messages\n                messagesCount: messagesCount\n                accountID:     accountID\n                mailboxID:     mailboxID\n                messageID:     messageID\n                mailboxes:     @state.mailboxes\n                settings:      @state.settings\n                query:         query\n                emptyListMessage: emptyListMessage\n                counterMessage:   counterMessage\n                #paginationUrl: paginationUrl\n\n        # -- Generates a configuration window for a given account\n        else if panelInfo.action is 'account.config' or\n                panelInfo.action is 'account.new'\n            # don't use @state.selectedAccount\n            selectedAccount   = AccountStore.getSelected()\n            error             = AccountStore.getError()\n            isWaiting         = AccountStore.isWaiting()\n            mailboxes         = AccountStore.getSelectedMailboxes()\n            favoriteMailboxes = @state.favoriteMailboxes\n            if selectedAccount and not error and mailboxes.length is 0\n                error =\n                    name: 'AccountConfigError'\n                    field: 'nomailboxes'\n\n            return AccountConfig {error, isWaiting, selectedAccount,\n                mailboxes, favoriteMailboxes}\n\n        # -- Generates a configuration window to create a new account\n        #else if panelInfo.action is 'account.new'\n        #    error = AccountStore.getError()\n        #    isWaiting = AccountStore.isWaiting()\n        #    return AccountConfig {layout, error, isWaiting}\n\n        # -- Generates a conversation\n        else if panelInfo.action is 'message' or\n                panelInfo.action is 'conversation'\n\n            messageID      = panelInfo.parameters.messageID\n            message        = MessageStore.getByID messageID\n            selectedMailboxID = @state.selectedMailboxID\n            if message?\n                conversationID = message.get 'conversationID'\n                conversation   = MessageStore.getConversation conversationID\n                MessageStore.setCurrentID message.get('id')\n                if not selectedMailboxID?\n                    selectedMailboxID = Object.keys(message.get('mailboxIDs'))[0]\n\n            return Conversation\n                layout            : layout\n                settings          : @state.settings\n                accounts          : @state.accounts\n                mailboxes         : @state.mailboxes\n                selectedAccount   : @state.selectedAccount\n                selectedMailboxID : selectedMailboxID\n                message           : message\n                conversation      : conversation\n                prevID            : MessageStore.getPreviousMessage()\n                nextID            : MessageStore.getNextMessage()\n\n        # -- Generates the new message composition form\n        else if panelInfo.action is 'compose'\n\n            return Compose\n                layout          : layout\n                action          : null\n                inReplyTo       : null\n                settings        : @state.settings\n                accounts        : @state.accounts\n                selectedAccount : @state.selectedAccount\n                message         : null\n\n        # -- Generates the edit draft composition form\n        else if panelInfo.action is 'edit'\n\n            messageID = panelInfo.parameters.messageID\n            message = MessageStore.getByID messageID\n\n            return Compose\n                layout          : layout\n                action          : null\n                inReplyTo       : null\n                settings        : @state.settings\n                accounts        : @state.accounts\n                selectedAccount : @state.selectedAccount\n                message         : message\n\n        # -- Display the settings form\n        else if panelInfo.action is 'settings'\n            settings = @state.settings\n            return Settings {settings}\n\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\n        else return div null, 'Unknown component'\n\n    getStateFromStores: ->\n\n        selectedAccount = AccountStore.getSelected()\n        # When selecting compose in Menu, we may not have a selected account\n        if not selectedAccount?\n            selectedAccount = AccountStore.getDefault()\n        selectedAccountID = selectedAccount?.get('id') or null\n\n        firstPanelInfo = @props.router.current?.firstPanel\n        if firstPanelInfo?.action is 'account.mailbox.messages' or\n           firstPanelInfo?.action is 'account.mailbox.messages.full'\n            selectedMailboxID = firstPanelInfo.parameters.mailboxID\n        else\n            selectedMailboxID = null\n\n        return {\n            accounts: AccountStore.getAll()\n            selectedAccount: selectedAccount\n            isResponsiveMenuShown: LayoutStore.isMenuShown()\n            alertMessage: LayoutStore.getAlert()\n            mailboxes: AccountStore.getSelectedMailboxes()\n            selectedMailboxID: selectedMailboxID\n            selectedMailbox: AccountStore.getSelectedMailbox selectedMailboxID\n            favoriteMailboxes: AccountStore.getSelectedFavorites()\n            searchQuery: SearchStore.getQuery()\n            refreshes: RefreshesStore.getRefreshing()\n            settings: SettingsStore.get()\n            plugins: window.plugins\n        }\n\n\n    # Listens to router changes. Renders the component on changes.\n    componentWillMount: ->\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\n        # to rebind its scope on the fly\n        @onRoute = (params) =>\n            {firstPanelInfo, secondPanelInfo} = params\n            @forceUpdate()\n\n        @props.router.on 'fluxRoute', @onRoute\n\n\n    # Stops listening to router changes\n    componentWillUnmount: ->\n        @props.router.off 'fluxRoute', @onRoute\n\n","{div, h3, a, i, textarea, form, label, button, span, ul, li, input} = React.DOM\nclasser = React.addons.classSet\n\nFilePicker = require './file_picker'\nMailsInput = require './mails_input'\n\nAccountPicker = require './account_picker'\n\n{ComposeActions} = require '../constants/app_constants'\n\nMessageUtils = require '../utils/message_utils'\n\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = Compose = React.createClass\n    displayName: 'Compose'\n\n    mixins: [\n        RouterMixin,\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    propTypes:\n        selectedAccount: React.PropTypes.object.isRequired\n        layout:          React.PropTypes.string.isRequired\n        accounts:        React.PropTypes.object.isRequired\n        message:         React.PropTypes.object\n        action:          React.PropTypes.string\n        callback:        React.PropTypes.func\n        settings:        React.PropTypes.object.isRequired\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n\n        return unless @props.accounts\n\n        expandUrl = @buildUrl\n            direction: 'first'\n            action: 'compose'\n            fullWidth: true\n\n        collapseUrl = @buildUrl\n            firstPanel:\n                action: 'account.mailbox.messages'\n                parameters: @state.accountID\n            secondPanel:\n                action: 'compose'\n\n        cancelUrl = @buildUrl\n            direction: 'first'\n            action: 'default'\n            fullWidth: true\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        classLabel = 'compose-label'\n        classInput = 'compose-input'\n        classCc    = if @state.cc.length is 0 then '' else ' shown'\n        classBcc   = if @state.bcc.length is 0 then '' else ' shown'\n\n\n        div id: 'email-compose',\n            if @props.layout isnt 'full'\n                a href: expandUrl, className: 'expand pull-right',\n                    i className: 'fa fa-arrows-h'\n            else\n                a href: collapseUrl, className: 'close-email pull-right',\n                    i className:'fa fa-compress'\n            h3 null,\n                t 'compose'\n            form className: '',\n                div className: 'form-group',\n                    label\n                        htmlFor: 'compose-from',\n                        className: classLabel,\n                        t \"compose from\"\n                    div className: classInput,\n                        div\n                            className: 'btn-toolbar compose-toggle',\n                            role: 'toolbar',\n                                div null\n                                    a\n                                        className: 'compose-toggle-cc',\n                                        onClick: @onToggleCc,\n                                        t 'compose toggle cc'\n                                    a\n                                        className: 'compose-toggle-bcc',\n                                        onClick: @onToggleBcc,\n                                        t 'compose toggle bcc'\n\n                        AccountPicker\n                            accounts: @props.accounts\n                            valueLink: @linkState 'accountID'\n                            type: 'address'\n                div className: 'clearfix', null\n\n                MailsInput\n                    id: 'compose-to'\n                    valueLink: @linkState 'to'\n                    label: t 'compose to'\n                    ref: 'to'\n\n                MailsInput\n                    id: 'compose-cc'\n                    className: 'compose-cc' + classCc\n                    valueLink: @linkState 'cc'\n                    label: t 'compose cc'\n                    placeholder: t 'compose cc help'\n\n                MailsInput\n                    id: 'compose-bcc'\n                    className: 'compose-bcc' + classBcc\n                    valueLink: @linkState 'bcc'\n                    label: t 'compose bcc'\n                    placeholder: t 'compose bcc help'\n\n                div className: 'form-group',\n                    label\n                        htmlFor: 'compose-subject',\n                        className: classLabel,\n                        t \"compose subject\"\n                    div className: classInput,\n                        input\n                            id: 'compose-subject',\n                            name: 'compose-subject',\n                            ref: 'subject',\n                            valueLink: @linkState('subject'),\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: t \"compose subject help\"\n                div className: '',\n                    label\n                        htmlFor: 'compose-subject',\n                        className: classLabel,\n                        t \"content\"\n                    if @state.composeInHTML\n                        div\n                            className: 'rt-editor form-control',\n                            ref: 'html',\n                            contentEditable: true,\n                            onKeyDown: @onKeyDown,\n                            dangerouslySetInnerHTML: {\n                                __html: @linkState('html').value\n                            }\n                    else\n                        textarea\n                            className: 'editor',\n                            ref: 'content',\n                            onKeyDown: @onKeyDown,\n                            defaultValue: @linkState('text').value\n\n                div className: 'attachements',\n                    FilePicker\n                        className: ''\n                        editable: true\n                        valueLink: @linkState 'attachments'\n\n                div className: 'composeToolbox',\n                    div className: 'btn-toolbar', role: 'toolbar',\n                        div className: '',\n                            button\n                                className: 'btn btn-cozy',\n                                type: 'button',\n                                onClick: @onSend,\n                                    span\n                                        className: 'fa fa-send'\n                                    span null, t 'compose action send'\n                            button\n                                className: 'btn btn-cozy',\n                                type: 'button', onClick: @onDraft,\n                                    span className: 'fa fa-save'\n                                    span null, t 'compose action draft'\n                            if @props.message?\n                                button\n                                    className: 'btn btn-cozy-non-default',\n                                    type: 'button',\n                                    onClick: @onDelete,\n                                        span className: 'fa fa-trash-o'\n                                        span null, t 'compose action delete'\n                            a\n                                href: cancelUrl,\n                                className: 'btn btn-cozy-non-default',\n                                t 'app cancel'\n                div className: 'clearfix', null\n\n    _initCompose: ->\n        # scroll compose window into view\n        @getDOMNode().scrollIntoView()\n        if @state.composeInHTML\n            # Some DOM manipulation when replying inside the message.\n            # When inserting a new line, we must close all blockquotes,\n            # insert a blank line and then open again blockquotes\n            jQuery('#email-compose .rt-editor').on('keypress', (e) ->\n                if e.keyCode is 13\n                    # timeout to let the editor perform its own stuff\n                    setTimeout ->\n                        matchesSelector = document.documentElement.matches or\n                              document.documentElement.matchesSelector or\n                              document.documentElement.webkitMatchesSelector or\n                              document.documentElement.mozMatchesSelector or\n                              document.documentElement.oMatchesSelector or\n                              document.documentElement.msMatchesSelector\n\n                        target = document.getSelection().anchorNode\n                        if matchesSelector? and not matchesSelector.call(target, '.rt-editor blockquote *')\n                            # we are not inside a blockquote, nothing to do\n                            return\n\n                        if target.lastChild\n                            target = target.lastChild.previousElementSibling\n                        parent = target\n\n                        # alternative 1\n                        # we create 2 ranges, one from the begining of message\n                        # to the caret position, the second from caret to the\n                        # end. We then create fragments from the ranges and\n                        # override message with first fragment, a blank line\n                        # and second fragment\n                        process = ->\n                            current = parent\n                            parent = parent?.parentNode\n                        process()\n                        process() while (parent? and\n                            not parent.classList.contains 'rt-editor')\n                        rangeBefore = document.createRange()\n                        rangeBefore.setEnd target, 0\n                        rangeBefore.setStartBefore parent.firstChild\n                        rangeAfter = document.createRange()\n                        if target.nextSibling?\n                            # remove the BR the <enter> key probably inserted\n                            rangeAfter.setStart target.nextSibling, 0\n                        else\n                            rangeAfter.setStart target, 0\n                        rangeAfter.setEndAfter parent.lastChild\n                        before = rangeBefore.cloneContents()\n                        after = rangeAfter.cloneContents()\n                        inserted = document.createElement 'p'\n                        inserted.innerHTML = \"<br />\"\n                        parent.innerHTML = \"\"\n                        parent.appendChild before\n                        parent.appendChild inserted\n                        parent.appendChild after\n\n                        ###\n                        # alternative 2\n                        # We move every node from the caret to the end of the\n                        # message to a new DOM tree, then insert a blank line\n                        # and the new tree\n                        parent = target\n                        p2 = null\n                        p3 = null\n                        process = ->\n                            p3 = p2\n                            current = parent\n                            parent = parent.parentNode\n                            p2 = parent.cloneNode false\n                            if p3?\n                                p2.appendChild p3\n                            s = current.nextSibling\n                            while s?\n                                p2.appendChild(s.cloneNode(true))\n                                s2 = s.nextSibling\n                                parent.removeChild s\n                                s = s2\n                        process()\n                        process() while (parent.parentNode? and\n                            not parent.parentNode.classList.contains 'rt-editor')\n                        after = p2\n                        inserted = document.createElement 'p'\n                        inserted.innerHTML = \"<br />\"\n                        if parent.nextSibling\n                            parent.parentNode.insertBefore inserted, parent.nextSibling\n                            parent.parentNode.insertBefore after, parent.nextSibling\n                        else\n                            parent.parentNode.appendChild inserted\n                            parent.parentNode.appendChild after\n                        ###\n\n                        inserted.focus()\n                        sel = window.getSelection()\n                        sel.collapse inserted, 0\n\n                    , 0\n            )\n        else\n            # Text message\n            node = @refs.content.getDOMNode()\n            rect = node.getBoundingClientRect()\n            node.scrollTop = node.scrollHeight - rect.height\n\n            if (typeof node.selectionStart is \"number\")\n                node.selectionStart = node.selectionEnd = node.value.length\n            else if (typeof node.createTextRange isnt \"undefined\")\n                node.focus()\n                range = node.createTextRange()\n                range.collapse(false)\n                range.select()\n            node.focus()\n\n    componentDidMount: ->\n        @_initCompose()\n\n    componentDidUpdate: ->\n        @_initCompose()\n\n    getInitialState: (forceDefault) ->\n\n        # edition of an existing draft\n        if message = @props.message\n            state =\n                composeInHTML: message.get('html')?\n\n            # TODO : smarter ?\n            state[key] = value for key, value of message.toJS()\n            # we want the immutable attachments\n            state.attachments = message.get 'attachments'\n\n        # new draft\n        else\n            state = MessageUtils.makeReplyMessage @props.inReplyTo, @props.action,\n                @props.settings.get 'composeInHTML'\n            state.accountID ?= @props.selectedAccount.get 'id'\n\n        return state\n\n    componentWillReceiveProps: (nextProps) ->\n        if nextProps.message isnt @props.message\n            @props.message = nextProps.message\n            @setState @getInitialState()\n\n    onDraft: (args) ->\n        @_doSend true\n\n    onSend: (args) ->\n        @_doSend false\n\n    _doSend: (isDraft) ->\n\n        account = @props.accounts.get @state.accountID\n\n        from =\n            name: account?.get('name') or undefined\n            address: account.get('login')\n\n        unless ~from.address.indexOf '@'\n            from.address += '@' + account.get('imapServer')\n\n        message =\n            id          : @state.id\n            accountID   : @state.accountID\n            from        : [from]\n            to          : @state.to\n            cc          : @state.cc\n            bcc         : @state.bcc\n            subject     : @state.subject\n            isDraft     : isDraft\n            attachments : @state.attachments\n\n        valid = true\n        if not isDraft\n            if @state.to.length is 0 and @state.cc.length is 0 and @state.bcc.length is 0\n                valid = false\n                LayoutActionCreator.alertError t \"compose error no dest\"\n                document.getElementById('compose-to').focus()\n            else if @state.subject is ''\n                valid = false\n                LayoutActionCreator.alertError t \"compose error no subject\"\n                @refs.subject.getDOMNode().focus()\n\n        if valid\n            if @props.message?\n                message.mailboxIDs = @props.message.get 'mailboxIDs'\n\n            node = @refs.html.getDOMNode()\n            if @state.composeInHTML\n                message.html    = node.innerHTML\n                try\n                    message.text = toMarkdown(message.html)\n                catch\n                    message.text = node.textContent or node.innerText\n            else\n                message.text = node.value.trim()\n\n            callback = @props.callback\n\n            MessageActionCreator.send message, (error, message) =>\n                if isDraft\n                    msgKo = t \"message action draft ko\"\n                    msgOk = t \"message action draft ok\"\n                else\n                    msgKo = t \"message action sent ko\"\n                    msgOk = t \"message action sent ok\"\n                if error?\n                    LayoutActionCreator.alertError \"#{msgKo} :  error\"\n                else\n                    LayoutActionCreator.alertSuccess msgOk\n                    @setState message\n\n                    if callback?\n                        callback error\n                    else if not isDraft\n                        # mail sent close the pane\n                        @redirect @buildClosePanelUrl @props.layout\n\n\n    onDelete: (args) ->\n        if window.confirm(t 'mail confirm delete')\n            MessageActionCreator.delete @props.message, (error) =>\n                if error?\n                    LayoutActionCreator.alertError \"#{t(\"message action delete ko\")} #{error}\"\n                else\n                    @redirect\n                        direction: 'first'\n                        action: 'account.mailbox.messages'\n                        parameters: [@props.selectedAccount.get('id'), @props.selectedMailboxID, 1]\n                        fullWidth: true\n    onToggleCc: (e) ->\n        toggle = (e) -> e.classList.toggle 'shown'\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-cc'\n\n    onToggleBcc: (e) ->\n        toggle = (e) -> e.classList.toggle 'shown'\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-bcc'\n\n    onKeyDown: (evt) ->\n        if evt.ctrlKey and evt.key is 'Enter'\n            @onSend()\n","{div, form, input, span, ul, li, a, img, i} = React.DOM\nclasser = React.addons.classSet\n\nContactActionCreator = require '../actions/contact_action_creator'\nContactStore    = require '../stores/contact_store'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'ContactForm'\n\n    mixins: [\n        StoreWatchMixin [ContactStore]\n        RouterMixin\n    ]\n\n    getStateFromStores: ->\n        query = @refs.contactInput?.getDOMNode().value.trim()\n        return {\n            contacts: if query?.length > 2 then ContactStore.getResults() else null\n            selected: 0\n        }\n\n    componentWillMount: ->\n        @setState contacts: null\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        listClass = if @state.contacts?.length > 0 then 'open' else ''\n        current = 0\n\n        form className: \"contact-form\",\n            div null,\n                div className: 'input-group',\n                    input\n                        className: 'form-control search-input',\n                        type: 'text',\n                        placeholder: t('contact form placeholder'),\n                        onKeyDown: @onKeyDown,\n                        ref: 'contactInput',\n                        defaultValue: @props.query\n                    div\n                        className: 'input-group-addon btn btn-cozy search-btn',\n                        onClick: @onSubmit,\n                            span className: 'fa fa-search'\n\n            if @state.contacts?\n                div className: listClass,\n                    ul className: \"contact-list\",\n                        @state.contacts.map (contact, key) =>\n                            selected = current is @state.selected\n                            current++\n                            @renderContact contact, selected\n                        .toJS()\n\n\n    renderContact: (contact, selected) ->\n        selectContact = =>\n            @props.onContact contact\n        avatar = contact.get 'avatar'\n\n        classes = classer\n            selected: selected\n\n        li className: classes, onClick: selectContact,\n            a null,\n                if avatar?\n                    img\n                        className: 'avatar'\n                        src: avatar\n                else\n                    i className: 'avatar fa fa-user'\n                \"#{contact.get 'fn'} <#{contact.get 'address'}>\"\n\n\n    onSubmit: ->\n        query = @refs.contactInput.getDOMNode().value.trim()\n        if query.length > 2\n            ContactActionCreator.searchContactLocal query\n\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Tab\"\n                @onSubmit()\n                evt.preventDefault()\n                return false\n            when \"Enter\"\n                if @state.contacts?.count() > 0\n                    @props.onContact\n                    contact = @state.contacts.slice(@state.selected).first()\n                    @props.onContact contact\n                else\n                    @onSubmit()\n                evt.preventDefault()\n                return false\n            when \"ArrowUp\"\n                @setState selected: if @state.selected is 0 then @state.contacts.count() - 1 else @state.selected - 1\n            when \"ArrowDown\"\n                @setState selected: if @state.selected is (@state.contacts.count() - 1) then 0 else @state.selected + 1\n","{div, ul, li, span, i, p, h3, a} = React.DOM\nMessage = require './message'\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'Conversation'\n\n    mixins: [RouterMixin]\n\n    propTypes:\n        message           : React.PropTypes.object\n        conversation      : React.PropTypes.array\n        selectedAccount   : React.PropTypes.object.isRequired\n        layout            : React.PropTypes.string.isRequired\n        selectedMailboxID : React.PropTypes.string\n        mailboxes         : React.PropTypes.object.isRequired\n        settings          : React.PropTypes.object.isRequired\n        accounts          : React.PropTypes.object.isRequired\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    render: ->\n        if not @props.message? or not @props.conversation\n            return p null, t \"app loading\"\n\n        expandUrl = @buildUrl\n            direction: 'first'\n            action: 'message'\n            parameters: @props.message.get 'id'\n            fullWidth: true\n\n        if window.router.previous?\n            try\n                selectedAccountID = @props.selectedAccount.get 'id'\n            catch\n                selectedAccountID = @props.conversation[0].mailbox\n        else\n            selectedAccountID = @props.conversation[0].mailbox\n\n        collapseUrl = @buildUrl\n            firstPanel:\n                action: 'account.mailbox.messages'\n                parameters: selectedAccountID\n            secondPanel:\n                action: 'message'\n                parameters: @props.conversation[0].get 'id'\n\n        if @props.layout is 'full'\n            closeUrl = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: selectedAccountID\n                fullWidth: true\n        else\n            closeUrl = @buildClosePanelUrl @props.layout\n\n        closeIcon = if @props.layout is 'full' then 'fa-th-list' else 'fa-times'\n        inConversation = @props.conversation.length > 1\n\n        div className: 'conversation',\n\n            # allows multiple email open but UI is not good enough\n            #ul className: 'nav nav-tabs nav-justified',\n            #    li className: 'active',\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n\n            if @props.layout isnt 'full'\n                a\n                    href: expandUrl,\n                    className: 'expand hidden-xs hidden-sm',\n                        i className: 'fa fa-arrows-h'\n            else\n                a\n                    href: collapseUrl,\n                    className: 'compress',\n                        i className:'fa fa-compress'\n\n            h3 className: 'message-title',\n                @props.message.get 'subject'\n\n            ul className: 'thread list-unstyled',\n                for message, key in @props.conversation\n                    active = @props.message.get('id') is message.get('id')\n                    Message\n                        accounts: @props.accounts\n                        active: active\n                        inConversation: inConversation\n                        key: key\n                        mailboxes: @props.mailboxes\n                        message: message\n                        nextID: @props.nextID\n                        prevID: @props.prevID\n                        selectedAccount: @props.selectedAccount\n                        selectedMailboxID: @props.selectedMailboxID\n                        settings: @props.settings\n","{div, form, input, ul, li, span, i, a} = React.DOM\n\nMessageUtils = require '../utils/message_utils'\n\n\n# file picker file format = mailparser result\nFileShape = React.PropTypes.shape\n    fileName           : React.PropTypes.string\n    length             : React.PropTypes.number\n    contentType        : React.PropTypes.string\n    generatedFileName  : React.PropTypes.string\n    contentDisposition : React.PropTypes.string\n    contentId          : React.PropTypes.string\n    transferEncoding   : React.PropTypes.string\n    # one or the other\n    rawFileObject      : React.PropTypes.object\n    url                : React.PropTypes.string\n\n###\n# File picker\n#\n# Available props\n# - editable: boolean (false)\n# - files: array\n# - form: boolean (true) embed component inside a form element\n# - valueLink: a ReactLink for files\n###\n\nFilePicker = React.createClass\n    displayName: 'FilePicker'\n\n    propTypes:\n        editable: React.PropTypes.bool\n        display:  React.PropTypes.func\n        value:    React.PropTypes.instanceOf Immutable.Vector\n        valueLink: React.PropTypes.shape\n            value: React.PropTypes.instanceOf Immutable.Vector\n            requestChange: React.PropTypes.func\n\n\n    getDefaultProps: ->\n        editable: false\n        valueLink:\n            value: Immutable.Vector.empty()\n            requestChange: ->\n\n    getInitialState: ->\n        files: @props.value or @props.valueLink.value\n\n    componentWillReceiveProps: (props) ->\n        @setState files: props.value or props.valueLink.value\n\n    addFiles: (files) ->\n        files = @state.files.concat(files).toVector()\n\n        @props.valueLink.requestChange files\n\n    deleteFile: (file) ->\n        files = @state.files.filter (f) ->\n            f.get('generatedFileName') isnt file.generatedFileName\n        .toVector()\n\n        @props.valueLink.requestChange files\n\n    displayFile: (file) ->\n        if file.url\n            window.open file.url\n        else if file.rawFileObject\n            window.open URL.createObjectURL file.rawFileObject\n        else console.log \"broken file : \", file\n\n    render: ->\n        className = 'file-picker'\n        className += \" #{@props.className}\" if @props.className\n        div className: className,\n            ul className: 'files list-unstyled',\n                @state.files.toJS().map (file) =>\n                    FileItem\n                        key: file.generatedFileName\n                        file: file\n                        editable: @props.editable\n                        delete: => @deleteFile file\n                        display: => @displayFile file\n\n            if @props.editable\n                div null,\n                    # triggering \"click\" won't work if file input is hidden\n                    span className: \"file-wrapper\",\n                        input\n                            type: \"file\",\n                            multiple: \"multiple\",\n                            ref: \"file\",\n                            onChange: @handleFiles\n                    div\n                        className: \"dropzone\",\n                        ref: \"dropzone\",\n                        onDragOver: @allowDrop,\n                        onDrop: @handleFiles,\n                        onClick: @onOpenFile,\n                            i className: \"fa fa-paperclip\"\n                            span null, t \"picker drop here\"\n\n    onOpenFile: (e) ->\n        e.preventDefault()\n        jQuery(@refs.file.getDOMNode()).trigger \"click\"\n\n    allowDrop: (e) ->\n        e.preventDefault()\n\n    handleFiles: (e) ->\n        e.preventDefault()\n        files = e.target.files or e.dataTransfer.files\n        @addFiles (@_fromDOM file for file in files)\n\n    # convert from DOM Files to file picker format\n    _fromDOM: (file) ->\n        idx = @state.files.filter (f) -> f.get('fileName') is file.name\n            .count()\n        name = file.name\n        if idx > 0\n            dotpos = file.name.indexOf '.'\n            name = name.substring(0, dotpos) + '-' + (idx + 1) +\n                name.substring(dotpos)\n\n        console.log file.name, idx, name\n\n        return Immutable.Map\n            fileName:           file.name\n            length:             file.size\n            contentType:        file.type\n            rawFileObject:      file\n            generatedFileName:  name\n            contentDisposition: null\n            contentId:          null\n            transferEncoding:   null\n            content:            null\n            url:                null\n\n\n            # reader = new FileReader()\n            # reader.readAsDataURL(file)\n            # reader.onloadend = (e) =>\n            #     txt = e.target.result\n            #     file.content = txt\n            #     currentFiles.push file\n            #     parsed++\n            #     if parsed is files.length\n            #         @props.valueLink.requestChange currentFiles\n            #         @setState {files: currentFiles }\n\n\n\n\nmodule.exports = FilePicker\n\n###\n# Display a file item\n#\n# Props:\n#  - file\n#  - editable: boolean (false) allow to delete file\n#  - (display): function\n#  - (delete): function\n###\nFileItem = React.createClass\n    displayName: 'FileItem'\n\n    propTypes:\n        file: React.PropTypes.shape({\n            fileName: React.PropTypes.string\n            contentType: React.PropTypes.string\n            length: React.PropTypes.number\n        }).isRequired\n        editable: React.PropTypes.bool\n        display:  React.PropTypes.func\n        delete:   React.PropTypes.func\n\n    getDefaultProps: ->\n        return {\n            editable: false\n        }\n\n    getInitialState: ->\n        return {}\n\n    render: ->\n        file = @props.file\n        type = MessageUtils.getAttachmentType file.contentType\n        icons =\n            'archive'      : 'fa-file-archive-o'\n            'audio'        : 'fa-file-audio-o'\n            'code'         : 'fa-file-code-o'\n            'image'        : 'fa-file-image-o'\n            'pdf'          : 'fa-file-pdf-o'\n            'word'         : 'fa-file-word-o'\n            'presentation' : 'fa-file-powerpoint-o'\n            'spreadsheet'  : 'fa-file-excel-o'\n            'text'         : 'fa-file-text-o'\n            'video'        : 'fa-file-video-o'\n            'word'         : 'fa-file-word-o'\n        iconClass = icons[type] or 'fa-file-o'\n\n        li className: \"file-item\", key: file.name,\n            i className: \"mime #{type} fa #{iconClass}\"\n            if @props.editable\n                i className: \"fa fa-times delete\", onClick: @doDelete\n            a\n                className: 'file-name',\n                target: '_blank',\n                onClick: @doDisplay,\n                # href: file.url\n                'data-file-url': file.url\n                file.generatedFileName\n\n            div className: 'file-detail',\n                span null,\n                    \"#{(file.length / 1000).toFixed(2)}Ko\"\n\n    doDisplay: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @props.display()\n\n    doDelete: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @props.delete()\n","{div, ul, li, span, a, button} = React.DOM\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'MailboxList'\n\n    mixins: [RouterMixin]\n\n    onChange: (boxid) ->\n        @props.onChange? boxid\n\n    render: ->\n        selectedId = @props.selectedMailbox\n        if selectedId?\n            selected = @props.mailboxes.get selectedId\n        if @props.mailboxes.length > 0\n            div className: 'btn-group btn-group-sm dropdown pull-left',\n                button\n                    className: 'btn btn-default dropdown-toggle',\n                    type: 'button',\n                    'data-toggle': 'dropdown',\n                    selected?.get('label') or t 'mailbox pick one'\n                        span className: 'caret', ''\n                ul className: 'dropdown-menu', role: 'menu',\n                    if @props.allowUndefined and selected\n                        li\n                            role: 'presentation',\n                            key: null,\n                            onClick: @onChange.bind(this, null),\n                                a role: 'menuitem', t 'mailbox pick null'\n\n                    @props.mailboxes.map (mailbox, key) =>\n                        if mailbox.get('id') isnt selectedId\n                            @getMailboxRender mailbox, key\n                    .toJS()\n        else\n            # no account selected\n            div null, \"\"\n\n\n    getMailboxRender: (mailbox, key) ->\n        url = @props.getUrl?(mailbox)\n        onChange = @onChange.bind(this, key)\n\n        # Mark nested levels with \"--\" because plain space\n        # just doesn't work for some reason\n        pusher = \"\"\n        pusher += \"--\" for i in [1..mailbox.get('depth')] by 1\n\n        li role: 'presentation', key: key, onClick: onChange,\n            if url?\n                a href: url, role: 'menuitem', \"#{pusher}#{mailbox.get 'label'}\"\n            else\n                a role: 'menuitem', \"#{pusher}#{mailbox.get 'label'}\"\n\n","{div, label, input, span, ul, li, a, img, i} = React.DOM\n\nMessageUtils    = require '../utils/message_utils'\nContactForm     = require './contact-form'\nModal           = require './modal'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\nContactStore    = require '../stores/contact_store'\nContactActionCreator = require '../actions/contact_action_creator'\n\nclasser = React.addons.classSet\n\n# Public: input to enter multiple mails\n# @TODO : use something tag-it like\n# @TODO : autocomplete contacts\n\nmodule.exports = MailsInput = React.createClass\n    displayName: 'MailsInput'\n\n    mixins: [\n        React.addons.LinkedStateMixin # two-way data binding\n        StoreWatchMixin [ContactStore]\n    ]\n\n    getStateFromStores: ->\n        query = @refs.contactInput?.getDOMNode().value.trim()\n        return {\n            contacts: if query?.length > 2 then ContactStore.getResults() else null\n            selected: 0\n            open: false\n        }\n\n    componentWillMount: ->\n        @setState contacts: null, open: false\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    # convert mailslist between human-readable and [{address, name}]\n    proxyValueLink: ->\n        value: MessageUtils.displayAddresses @props.valueLink.value, true\n        requestChange: (newValue) =>\n            # reverse of MessageUtils.displayAddresses full\n            result = newValue.split(',').map (tupple) ->\n                if match = tupple.match /\"(.*)\" <(.*)>/\n                    name: match[1], address: match[2]\n                else\n                    address: tupple.trim()\n\n            @props.valueLink.requestChange result\n\n    render: ->\n        className  = (@props.className or '') + ' form-group'\n        classLabel = 'compose-label control-label'\n        listClass  = classer\n            'contact-form': true\n            open: @state.open and @state.contacts?.length > 0\n        current    = 0\n\n        div className: className,\n            label htmlFor: @props.id, className: classLabel,\n                @props.label\n            div className: 'contact-group dropdown ' + listClass,\n                input\n                    id: @props.id,\n                    name: @props.id,\n                    className: 'form-control compose-input',\n                    onKeyDown: @onKeyDown,\n                    ref: 'contactInput'\n                    valueLink: @proxyValueLink(),\n                    type: 'text',\n                    placeholder: @props.placeholder\n                div\n                    className: 'input-group-addon btn btn-cozy contact',\n                    onClick: @onQuery,\n                        span className: 'fa fa-search'\n\n                if @state.contacts?\n                    ul className: \"dropdown-menu contact-list\",\n                        @state.contacts.map (contact, key) =>\n                            selected = current is @state.selected\n                            current++\n                            @renderContact contact, selected\n                        .toJS()\n\n    renderContact: (contact, selected) ->\n        selectContact = =>\n            @onContact contact\n        avatar = contact.get 'avatar'\n\n        classes = classer\n            selected: selected\n\n        li className: classes, onClick: selectContact,\n            a null,\n                if avatar?\n                    img\n                        className: 'avatar'\n                        src: avatar\n                else\n                    i className: 'avatar fa fa-user'\n                \"#{contact.get 'fn'} <#{contact.get 'address'}>\"\n\n    onQuery: ->\n        query = @refs.contactInput.getDOMNode().value.split(',').pop().trim()\n        if query.length > 2\n            ContactActionCreator.searchContactLocal query\n            @setState open: true\n            return true\n        else\n            return false\n\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Tab\"\n                if @onQuery()\n                    evt.preventDefault()\n                    return false\n            when \"Enter\"\n                if @state.contacts?.count() > 0\n                    @onContact\n                    contact = @state.contacts.slice(@state.selected).first()\n                    @onContact contact\n                else\n                    @onQuery()\n                evt.preventDefault()\n                return false\n            when \"ArrowUp\"\n                @setState selected: if @state.selected is 0 then @state.contacts.count() - 1 else @state.selected - 1\n            when \"ArrowDown\"\n                @setState selected: if @state.selected is (@state.contacts.count() - 1) then 0 else @state.selected + 1\n            when \"Backspace\"\n                # hack needed because proxyValueLink prevent deleting empty contact\n                node = @refs.contactInput.getDOMNode()\n                node.value = node.value.trim()\n            when \"Escape\"\n                @setState contacts: null, open: false\n\n\n    onContact: (contact) ->\n        val = @proxyValueLink()\n        if @props.valueLink.value.length > 0\n            current = val.value.split(',').slice(0, -1).join(',')\n        else\n            current = \"\"\n        if current.trim() isnt ''\n            current += ','\n        name    = contact.get 'fn'\n        address = contact.get 'address'\n        val.requestChange \"#{current}#{name} <#{address}>,\"\n        @setState contacts: null, open: false\n","{div, ul, li, a, span, i} = React.DOM\n\nclasser = React.addons.classSet\n\nRouterMixin          = require '../mixins/router_mixin'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\nAccountStore         = require '../stores/account_store'\nModal = require './modal'\nThinProgress = require './thin_progress'\n\nmodule.exports = Menu = React.createClass\n    displayName: 'Menu'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        displayActiveAccount: true\n        modalErrors: null\n\n    componentWillReceiveProps: (props) ->\n        if not Immutable.is(props.selectedAccount, @props.selectedAccount)\n            @setState displayActiveAccount: true\n\n\n    displayErrors: (refreshee) ->\n        @setState modalErrors: refreshee.get 'errors'\n\n    hideErrors: ->\n        @setState modalErrors: null\n\n    render: ->\n\n        if @props.accounts.length\n            selectedAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: @props.selectedAccount?.get 'id'\n                fullWidth: true\n        else\n            selectedAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggles the \"compose\" screen\n        if @props.layout.firstPanel.action is 'compose' or\n           @props.layout.secondPanel?.action is 'compose'\n            composeClass = 'active'\n            composeUrl = selectedAccountUrl\n        else\n            composeClass = ''\n            composeUrl = @buildUrl\n                direction: 'first'\n                action: 'compose'\n                parameters: null\n                fullWidth: true\n\n        # the button toggle the \"new account\" screen\n        if @props.layout.firstPanel.action is 'account.new'\n            newMailboxClass = 'active'\n            newMailboxUrl = selectedAccountUrl\n        else\n            newMailboxClass = ''\n            newMailboxUrl = @buildUrl\n                direction: 'first'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggles the \"settings\" screen\n        if @props.layout.firstPanel.action is 'settings' or\n           @props.layout.secondPanel?.action is 'settings'\n            settingsClass = 'active'\n            settingsUrl = selectedAccountUrl\n        else\n            settingsClass = ''\n            settingsUrl = @buildUrl\n                direction: 'first'\n                action: 'settings'\n                fullWidth: true\n\n        if @state.modalErrors\n            title       = t 'modal please contribute'\n            subtitle    = t 'modal please report'\n            modalErrors = @state.modalErrors\n            closeModal  = @hideErrors\n            closeLabel  = t 'app alert close'\n            content = React.DOM.pre\n                style: \"max-height\": \"300px\",\n                \"word-wrap\": \"normal\",\n                    @state.modalErrors.join \"\\n\\n\"\n            modal = Modal {title, subtitle, content, closeModal, closeLabel}\n        else\n            modal = null\n        classes = classer\n            'hidden-xs hidden-sm': not @props.isResponsiveMenuShown\n            'col-xs-4 col-md-1': true\n\n        div id: 'menu', className: classes,\n\n            modal\n\n            unless @props.accounts.length is 0\n                a\n                    href: composeUrl,\n                    className: 'menu-item compose-action ' + composeClass,\n                        i className: 'fa fa-edit'\n                        span className: 'item-label', t 'menu compose'\n\n            if @props.accounts.length isnt 0\n                ul id: 'account-list', className: 'list-unstyled',\n                    @props.accounts.map (account, key) =>\n                        @getAccountRender account, key\n                    .toJS()\n\n            a\n                href: newMailboxUrl,\n                className: 'menu-item new-account-action ' + newMailboxClass,\n                    i className: 'fa fa-inbox'\n                    span className: 'item-label', t 'menu account new'\n\n            a\n                href: settingsUrl,\n                className: 'menu-item settings-action ' + settingsClass,\n                    i className: 'fa fa-cog'\n                    span className: 'item-label', t 'menu settings'\n\n\n    # renders a single account and its submenu\n    getAccountRender: (account, key) ->\n\n        isSelected = (not @props.selectedAccount? and key is 0) \\\n                     or @props.selectedAccount?.get('id') is account.get('id')\n\n        accountID = account.get 'id'\n        defaultMailbox = AccountStore.getDefaultMailbox accountID\n        refreshes = @props.refreshes\n\n        if defaultMailbox?\n            url = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [accountID, defaultMailbox?.get 'id']\n                fullWidth: true # /!\\ Hide second panel when switching account\n        else\n            # Go to account settings to add mailboxes\n            url = @buildUrl\n                direction: 'first'\n                action: 'account.config'\n                parameters: [accountID]\n                fullWidth: true # /!\\ Hide second panel when switching account\n\n        toggleActive = =>\n            #if isSelected\n                #@setState displayActiveAccount: not @state.displayActiveAccount\n            #else\n            @setState displayActiveAccount: true\n\n        accountClasses = classer\n            active: (isSelected and @state.displayActiveAccount)\n\n        li className: accountClasses, key: key,\n            a\n                href: url,\n                className: 'menu-item account ' + accountClasses,\n                onClick: toggleActive,\n                'data-toggle': 'tooltip',\n                'data-delay': '10000',\n                'data-placement' : 'right',\n                    i className: 'fa fa-inbox'\n                    span\n                        'data-account-id': key,\n                        className: 'item-label',\n                        account.get 'label'\n\n                if progress = refreshes.get accountID\n                    if progress.get('errors').length\n                        span className: 'refresh-error',\n                            i className: 'fa warning', onClick: @displayErrors.bind null, progress\n                    ThinProgress done: progress.get('done'), total: progress.get('total')\n\n            ul className: 'list-unstyled submenu mailbox-list',\n                @props.favoriteMailboxes?.map (mailbox, key) =>\n                    selectedMailboxID = @props.selectedMailboxID\n                    MenuMailboxItem { account, mailbox, key, selectedMailboxID, refreshes, displayErrors: @displayErrors}\n                .toJS()\n\n    _initTooltips: ->\n        #jQuery('#account-list [data-toggle=\"tooltip\"]').tooltip()\n\n    componentDidMount: ->\n        @_initTooltips()\n\n    componentDidUpdate: ->\n        @_initTooltips()\n\n\nMenuMailboxItem = React.createClass\n    displayName: 'MenuMailboxItem'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        return target: false\n\n    render: ->\n        mailboxID = @props.mailbox.get 'id'\n        mailboxUrl = @buildUrl\n            direction: 'first'\n            action: 'account.mailbox.messages'\n            parameters: [@props.account.get('id'), mailboxID]\n\n        nbTotal  = @props.mailbox.get('nbTotal') or 0\n        nbUnread = @props.mailbox.get('nbUnread') or 0\n        nbNew    = @props.mailbox.get('nbNew') or 0\n        title    = t \"menu mailbox total\", nbTotal\n        if nbUnread > 0\n            title += t \"menu mailbox unread\", nbUnread\n        if nbNew > 0\n            title += t \"menu mailbox new\", nbNew\n\n        classesParent = classer\n            active: mailboxID is @props.selectedMailboxID\n            target: @state.target\n        classesChild = classer\n            'menu-item': true\n            target: @state.target\n            news: nbNew > 0\n        specialUse = @props.mailbox.get('attribs')?[0]\n        icon = switch specialUse\n            when '\\\\All' then 'fa-archive'\n            when '\\\\Drafts' then 'fa-edit'\n            when '\\\\Sent' then 'fa-share-square-o'\n            else 'fa-folder'\n\n        progress = @props.refreshes.get mailboxID\n        displayError = @props.displayErrors.bind null, progress\n\n        li className: classesParent,\n            a\n                href: mailboxUrl,\n                className: classesChild,\n                'data-mailbox-id': mailboxID,\n                onDragEnter: @onDragEnter,\n                onDragLeave: @onDragLeave,\n                onDragOver: @onDragOver,\n                onDrop: @onDrop,\n                title: title,\n                'data-toggle': 'tooltip',\n                'data-placement' : 'right',\n                key: @props.key,\n                    # Something must be rethought about the icon\n                    i className: 'fa ' + icon\n                    if nbUnread and nbUnread > 0\n                        span className: 'badge', nbUnread\n                    span className: 'item-label', @props.mailbox.get 'label'\n\n                if progress\n                    ThinProgress done: progress.get('done'), total: progress.get('total')\n\n                if progress?.get('errors').length\n                    span className: 'refresh-error', onClick: displayError,\n                        i className: 'fa fa-warning', null\n\n    onDragEnter: (e) ->\n        if not @state.target\n            @setState target: true\n\n    onDragLeave: (e) ->\n        if @state.target\n            @setState target: false\n\n    onDragOver: (e) ->\n        e.preventDefault()\n\n    onDrop: (event) ->\n        {messageID, mailboxID} = JSON.parse(event.dataTransfer.getData 'text')\n        newID = event.currentTarget.dataset.mailboxId\n        @setState target: false\n        MessageActionCreator.move messageID, mailboxID, newID, (error) ->\n            if error?\n                LayoutActionCreator.alertError \"#{t(\"message action move ko\")} #{error}\"\n            else\n                LayoutActionCreator.alertSuccess t \"message action move ok\"\n","{div, ul, li, a, span, i, p, button, input, img} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin    = require '../mixins/router_mixin'\nMessageUtils   = require '../utils/message_utils'\nSocketUtils    = require '../utils/socketio_utils'\n{MessageFlags, MessageFilter, FlagsConstants} = require '../constants/app_constants'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nContactActionCreator = require '../actions/contact_action_creator'\nConversationActionCreator = require '../actions/conversation_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\nMessageStore   = require '../stores/message_store'\nMailboxList    = require './mailbox-list'\nParticipants   = require './participant'\nToolboxActions = require './toolbox_actions'\nToolboxMove    = require './toolbox_move'\n\nalertError   = LayoutActionCreator.alertError\nalertSuccess = LayoutActionCreator.alertSuccess\n\nMessageList = React.createClass\n    displayName: 'MessageList'\n\n    _selected: {}\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        return {\n            edited: false\n            loading: false\n        }\n\n    componentWillReceiveProps: (props) ->\n        @setState loading: false\n        if props.mailboxID isnt @props.mailboxID\n            @setState edited: false\n            @_selected = {}\n\n    render: ->\n        compact = @props.settings.get('listStyle') is 'compact'\n        messages = @props.messages.map (message, key) =>\n            id = message.get('id')\n            isActive = @props.messageID is id\n            MessageItem\n                message: message,\n                key: key,\n                isActive: isActive,\n                edited: @state.edited,\n                settings: @props.settings,\n                onSelect: (val) =>\n                    if val\n                        @_selected[id] = val\n                    else\n                        delete @_selected[id]\n                    if Object.keys(@_selected).length > 0\n                        @setState edited: true\n                    else\n                        @setState edited: false\n\n        .toJS()\n        nbMessages = parseInt @props.counterMessage, 10\n        filterParams =\n            accountID: @props.accountID\n            mailboxID: @props.mailboxID\n            query:     @props.query\n        nextPage = =>\n            LayoutActionCreator.showMessageList parameters: @props.query\n\n        getMailboxUrl = (mailbox) =>\n            @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [@props.accountID, mailbox.get('id')]\n\n        configMailboxUrl = @buildUrl\n            direction: 'first'\n            action: 'account.config'\n            parameters: @props.accountID\n            fullWidth: true\n\n        classList = classer\n            compact: compact\n            edited: @state.edited\n        classCompact = classer\n            active: compact\n        classEdited = classer\n            active: @state.edited\n        div className: 'message-list ' + classList, ref: 'list',\n            div className: 'message-list-actions',\n                #MessagesQuickFilter {}\n                div className: 'btn-toolbar', role: 'toolbar',\n                    div className: 'btn-group',\n                        # Toggle edit\n                        div className: 'btn-group btn-group-sm message-list-option',\n                            button\n                                type: \"button\"\n                                className: \"btn btn-default \" + classEdited\n                                onClick: @toggleEdited,\n                                    i className: 'fa fa-square-o'\n                        # mailbox-list\n                        #if not @state.edited\n                            #div className: 'btn-group btn-group-sm message-list-option',\n                                #MailboxList\n                                    #getUrl: getMailboxUrl\n                                    #mailboxes: @props.mailboxes\n                                    #selectedMailbox: @props.mailboxID\n                        # filters\n                        #if not @state.edited\n                            #div className: 'btn-group btn-group-sm message-list-option',\n                                #MessagesFilter filterParams\n                        ## sort\n                        #if not @state.edited\n                            #div className: 'btn-group btn-group-sm message-list-option',\n                                #MessagesSort filterParams\n                                #\n                        # refresh\n                        if not @state.edited\n                            div className: 'btn-group btn-group-sm message-list-option',\n                                button\n                                    className: 'btn btn-default trash',\n                                    type: 'button',\n                                    onClick: @refresh,\n                                        span\n                                            className: 'fa fa-refresh'\n                        # config\n                        if not @state.edited\n                            div className: 'btn-group btn-group-sm message-list-option',\n                                a\n                                    href: configMailboxUrl\n                                    className: 'btn btn-default',\n                                    i className: 'fa fa-cog'\n                        if @state.edited\n                            div className: 'btn-group btn-group-sm message-list-option',\n                                button\n                                    className: 'btn btn-default trash',\n                                    type: 'button',\n                                    onClick: @onDelete,\n                                        span\n                                            className: 'fa fa-trash-o'\n                        if @state.edited\n                            ToolboxMove\n                                mailboxes: @props.mailboxes\n                                onMove: @onMove\n                                direction: 'left'\n                        if @state.edited\n                            ToolboxActions\n                                mailboxes: @props.mailboxes\n                                onMark: @onMark\n                                onConversation: @onConversation\n                                onHeaders: @onHeaders\n                                direction: 'left'\n            if @props.messages.count() is 0\n                p null, @props.emptyListMessage\n            else\n                div null,\n                    #p null, @props.counterMessage\n                    ul className: 'list-unstyled',\n                        messages\n                    if @props.messages.count() < nbMessages\n                        p className: 'text-center',\n                            if @state.loading\n                                i className: \"fa fa-refresh fa-spin\"\n                            else\n                                a\n                                    #href: @props.paginationUrl\n                                    className: 'more-messages'\n                                    onClick: nextPage,\n                                    ref: 'nextPage',\n                                    t 'list next page'\n                    else\n                        p ref: 'listEnd', t 'list end'\n\n\n    refresh: (event) ->\n        event.preventDefault()\n        LayoutActionCreator.refreshMessages()\n\n    toggleEdited: ->\n        @setState edited: not @state.edited\n\n    onDelete: ->\n        selected = Object.keys @_selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            if window.confirm(t 'list delete confirm', nb: selected.length)\n                selected.forEach (id) ->\n                    MessageActionCreator.delete id, (error) ->\n                        if error?\n                            alertError \"#{t(\"message action delete ko\")} #{error}\"\n                        else\n                            window.cozyMails.messageNavigate()\n\n    onMove: (args) ->\n        selected = Object.keys @_selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            newbox = args.target.dataset.value\n            if args.target.dataset.conversation?\n                selected.forEach (id) =>\n                    message = @props.messages.get id\n                    conversationID = message.get('conversationID')\n                    ConversationActionCreator.move conversationID, newbox, (error) ->\n                        if error?\n                            alertError \"#{t(\"conversation move ko\")} #{error}\"\n                        else\n                            window.cozyMails.messageNavigate()\n            else\n                selected.forEach (id) =>\n                    message = @props.messages.get id\n                    MessageActionCreator.move message, @props.mailboxID, newbox, (error) ->\n                        if error?\n                            alertError \"#{t(\"message action move ko\")} #{error}\"\n                        else\n                            window.cozyMails.messageNavigate()\n\n    onMark: (args) ->\n        selected = Object.keys @_selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            flag = args.target.dataset.value\n            selected.forEach (id) =>\n                message = @props.messages.get id\n                flags = message.get('flags').slice()\n                switch flag\n                    when FlagsConstants.SEEN\n                        flags.push MessageFlags.SEEN\n                    when FlagsConstants.UNSEEN\n                        flags = flags.filter (e) -> return e isnt FlagsConstants.SEEN\n                    when FlagsConstants.FLAGGED\n                        flags.push MessageFlags.FLAGGED\n                    when FlagsConstants.NOFLAG\n                        flags = flags.filter (e) -> return e isnt FlagsConstants.FLAGGED\n                MessageActionCreator.updateFlag message, flags, (error) ->\n                    if error?\n                        alertError \"#{t(\"message action mark ko\")} #{error}\"\n\n    onConversation: (args) ->\n        selected = Object.keys @_selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            selected.forEach (id) =>\n                message = @props.messages.get id\n                conversationID = message.get 'conversationID'\n                action = args.target.dataset.action\n                switch action\n                    when 'delete'\n                        ConversationActionCreator.delete conversationID(error) ->\n                            if error?\n                                alertError \"#{t(\"conversation delete ko\")} #{error}\"\n                    when 'seen'\n                        ConversationActionCreator.seen conversationID(error) ->\n                            if error?\n                                alertError \"#{t(\"conversation seen ok \")} #{error}\"\n                    when 'unseen'\n                        ConversationActionCreator.unseen conversationID(error) ->\n                            if error?\n                                alertError \"#{t(\"conversation unseen ok\")} #{error}\"\n\n    _isVisible: (node, before) ->\n        margin = if before then 40 else 0\n        rect   = node.getBoundingClientRect()\n        height = window.innerHeight or document.documentElement.clientHeight\n        width  = window.innerWidth  or document.documentElement.clientWidth\n        return rect.bottom <= ( height + 0 ) and rect.top >= 0\n\n    _loadNext: ->\n        if @refs.nextPage? and @_isVisible(@refs.nextPage.getDOMNode(), true)\n            @setState loading: true\n            LayoutActionCreator.showMessageList parameters: @props.query\n\n    _handleRealtimeGrowth: ->\n        nbMessages = parseInt @props.counterMessage, 10\n        if nbMessages < @props.messages.count() and @refs.listEnd? and\n        not @_isVisible(@refs.listEnd.getDOMNode(), true)\n            lastdate = @props.messages.last().get('date')\n            SocketUtils.changeRealtimeScope @props.mailboxID, lastdate\n\n    _initScroll: ->\n        if not @refs.nextPage?\n            return\n\n        # scroll current message into view\n        if @state.messageID isnt @props.messageID\n            active = document.querySelector(\"[data-message-id='#{@props.messageID}']\")\n            if active? and not @_isVisible(active)\n                active.scrollIntoView()\n            @setState messageID: @props.messageID\n\n        # listen to scroll events\n        scrollable = @refs.list.getDOMNode().parentNode\n        setTimeout =>\n            scrollable.removeEventListener 'scroll', @_loadNext\n            scrollable.addEventListener 'scroll', @_loadNext\n        , 0\n\n    componentDidMount: ->\n        @_initScroll()\n\n    componentDidUpdate: ->\n        @_initScroll()\n\n        @_handleRealtimeGrowth()\n\n    componentWillUnmount: ->\n        scrollable = @refs.list.getDOMNode().parentNode\n        scrollable.removeEventListener 'scroll', @_loadNext\n\nmodule.exports = MessageList\n\nMessageItem = React.createClass\n    displayName: 'MessagesItem'\n\n    mixins: [RouterMixin]\n\n    getInitialState: ->\n        return {\n            selected: @props.message.get('selected') is true\n        }\n\n    render: ->\n        message = @props.message\n        flags = message.get('flags')\n        classes = classer\n            message: true\n            read: message.get 'isRead'\n            active: @props.isActive\n            edited: @props.edited\n            'unseen': flags.indexOf(MessageFlags.SEEN) is -1\n            'has-attachments': message.get 'hasAttachments'\n            'is-fav': flags.indexOf(MessageFlags.FLAGGED) isnt -1\n\n        isDraft = message.get('flags').indexOf(MessageFlags.DRAFT) isnt -1\n\n        if isDraft\n            action = 'edit'\n            id     = message.get 'id'\n        else\n            conversationID = message.get 'conversationID'\n            if conversationID and @props.settings.get('displayConversation')\n                action = 'conversation'\n                id     = message.get 'id'\n            else\n                action = 'message'\n                id     = message.get 'id'\n        if not @props.edited\n            url = @buildUrl\n                direction: 'second'\n                action: action\n                parameters: id\n            tag = a\n        else\n            tag = span\n\n        compact = @props.settings.get('listStyle') is 'compact'\n        date    = MessageUtils.formatDate message.get('createdAt'), compact\n        avatar  = MessageUtils.getAvatar message\n\n        li\n            className: classes\n            key: @props.key\n            'data-message-id': message.get('id')\n            draggable: not @props.edited\n            onClick: @onMessageClick\n            onDragStart: @onDragStart\n        ,\n            tag\n                href: url,\n                className: 'wrapper'\n                'data-message-id': message.get('id'),\n                onClick: @onMessageClick,\n                onDoubleClick: @onMessageDblClick,\n                    input\n                        className: 'select',\n                        type: 'checkbox',\n                        checked: @state.selected\n                        onChange: @onSelect\n                    if avatar?\n                        img className: 'avatar', src: avatar\n                    else\n                        i className: 'fa fa-user'\n                    span className: 'participants', @getParticipants message\n                    div className: 'preview',\n                        span className: 'title', message.get 'subject'\n                        p null, message.get('text')?.substr(0, 100) + \"…\"\n                    span className: 'hour', date\n                    span className: \"flags\",\n                        i className: 'attach fa fa-paperclip'\n                        i className: 'fav fa fa-star'\n\n    onSelect: (e) ->\n        @props.onSelect(not @state.selected)\n        @setState selected: not @state.selected\n\n    onMessageClick: (event) ->\n        if @props.edited\n            @onSelect event\n        else\n            if not @props.settings.get('displayPreview')\n                event.preventDefault()\n                MessageActionCreator.setCurrent event.currentTarget.dataset.messageId\n\n    onMessageDblClick: (event) ->\n        if not @props.edited\n            url = event.currentTarget.href.split('#')[1]\n            window.router.navigate url, {trigger: true}\n\n    onDragStart: (event) ->\n        event.stopPropagation()\n        data =\n            messageID: event.currentTarget.dataset.messageId\n            mailboxID: @props.mailboxID\n        event.dataTransfer.setData 'text', JSON.stringify(data)\n        event.dataTransfer.effectAllowed = 'move'\n        event.dataTransfer.dropEffect = 'move'\n\n    getParticipants: (message) ->\n        from = message.get 'from'\n        to   = message.get('to').concat(message.get('cc'))\n        span null,\n            Participants participants: from, onAdd: @addAddress\n            span null, ', '\n            Participants participants: to, onAdd: @addAddress\n\n    addAddress: (address) ->\n        ContactActionCreator.createContact address\n\nMessagesQuickFilter = React.createClass\n    displayName: 'MessagesQuickFilter'\n\n    render: ->\n        div\n            className: \"form-group message-list-action\",\n            input\n                className: \"form-control\"\n                type: \"text\"\n                onBlur: @onQuick\n\n    onQuick: (ev) ->\n        LayoutActionCreator.quickFilterMessages ev.target.value.trim()\n\nMessagesFilter = React.createClass\n    displayName: 'MessagesFilter'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        filter = @props.query.flag\n        if not filter? or filter is '-'\n            title = i className: 'fa fa-filter'\n        else\n            title = t 'list filter ' + filter\n        div className: 'btn-group btn-group-sm dropdown filter-dropdown',\n            button\n                className: 'btn btn-default dropdown-toggle message-list-action'\n                type: 'button'\n                'data-toggle': 'dropdown'\n                title\n                    span className: 'caret'\n            ul\n                className: 'dropdown-menu',\n                role: 'menu',\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.ALL,\n                            t 'list filter all'\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.UNSEEN,\n                            t 'list filter unseen'\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.FLAGGED,\n                            t 'list filter flagged'\n\n    onFilter: (ev) ->\n        LayoutActionCreator.filterMessages ev.target.dataset.filter\n\n        params = MessageStore.getParams()\n        params.accountID = @props.accountID\n        params.mailboxID = @props.mailboxID\n        LayoutActionCreator.showMessageList parameters: params\n        #@redirect @buildUrl\n        #    direction: 'first'\n        #    action: 'account.mailbox.messages.full'\n        #    parameters: params\n\nMessagesSort = React.createClass\n    displayName: 'MessagesSort'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        sort = @props.query.sort\n        if not sort? or sort is '-'\n            title = t 'list sort'\n        else\n            sort  = sort.substr 1\n            title = t 'list sort ' + sort\n        div className: 'btn-group btn-group-sm dropdown sort-dropdown',\n            button\n                className: 'btn btn-default dropdown-toggle message-list-action'\n                type: 'button'\n                'data-toggle': 'dropdown'\n                title\n                    span className: 'caret'\n            ul\n                className: 'dropdown-menu',\n                role: 'menu',\n                    li role: 'presentation',\n                        a\n                            onClick: @onSort,\n                            'data-sort': 'date',\n                            t 'list sort date'\n                    li role: 'presentation',\n                        a\n                            onClick: @onSort,\n                            'data-sort': 'subject',\n                            t 'list sort subject'\n\n    onSort: (ev) ->\n        field = ev.target.dataset.sort\n\n        LayoutActionCreator.sortMessages\n            field: field\n\n        params = MessageStore.getParams()\n        params.accountID = @props.accountID\n        params.mailboxID = @props.mailboxID\n        LayoutActionCreator.showMessageList parameters: params\n        #@redirect @buildUrl\n        #    direction: 'first'\n        #    action: 'account.mailbox.messages.full'\n        #    parameters: params\n","{div, ul, li, span, i, p, a, button, pre, iframe, img} = React.DOM\nCompose        = require './compose'\nFilePicker     = require './file_picker'\nToolboxActions = require './toolbox_actions'\nToolboxMove    = require './toolbox_move'\nMessageUtils = require '../utils/message_utils'\n{ComposeActions, MessageFlags, FlagsConstants} = require '../constants/app_constants'\nLayoutActionCreator       = require '../actions/layout_action_creator'\nConversationActionCreator = require '../actions/conversation_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\nContactActionCreator      = require '../actions/contact_action_creator'\nRouterMixin = require '../mixins/router_mixin'\nParticipants  = require './participant'\n\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'Message'\n\n    mixins: [\n        RouterMixin\n    ]\n\n    getInitialState: ->\n        return {\n            active: @props.active,\n            composing: false\n            composeAction: ''\n            headers: false\n            messageDisplayHTML:   @props.settings.get 'messageDisplayHTML'\n            messageDisplayImages: @props.settings.get 'messageDisplayImages'\n        }\n\n    propTypes:\n        accounts          : React.PropTypes.object.isRequired\n        active            : React.PropTypes.bool\n        inConversation    : React.PropTypes.bool\n        key               : React.PropTypes.number.isRequired\n        mailboxes         : React.PropTypes.object.isRequired\n        message           : React.PropTypes.object.isRequired\n        nextID            : React.PropTypes.string\n        prevID            : React.PropTypes.string\n        selectedAccount   : React.PropTypes.object.isRequired\n        selectedMailboxID : React.PropTypes.string.isRequired\n        settings          : React.PropTypes.object.isRequired\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    _prepareMessage: ->\n        message = @props.message\n\n        # display full headers\n        fullHeaders = []\n        for key, value of message.get 'headers'\n            if Array.isArray(value)\n                fullHeaders.push \"#{key}: #{value.join('\\n    ')}\"\n            else\n                fullHeaders.push \"#{key}: #{value}\"\n\n        text = message.get 'text'\n        html = message.get 'html'\n\n        # @TODO Do we want to convert text only messages to HTML ?\n        #if text and not html and @state.messageDisplayHTML\n        #    html = markdown.toHTML text\n\n        if html and not text and not @state.messageDisplayHTML\n            text = toMarkdown html\n\n        return {\n            id         : message.get('id')\n            attachments: message.get('attachments')\n            flags      : message.get('flags') or []\n            from       : message.get('from')\n            to         : message.get('to')\n            cc         : message.get('cc')\n            fullHeaders: fullHeaders\n            text       : text\n            html       : html\n            date       : MessageUtils.formatDate message.get 'createdAt'\n        }\n\n    componentWillMount: ->\n        @_markRead @props.message\n\n    componentWillReceiveProps: (props) ->\n        state =\n            active: props.active\n        if props.message.get('id') isnt @props.message.get('id')\n            @_markRead @props.message\n            state.messageDisplayHTML   = props.settings.get 'messageDisplayHTML'\n            state.messageDisplayImages = props.settings.get 'messageDisplayImages'\n        @setState state\n\n    _markRead: (message) ->\n        # Hack to prevent infinite loop if server side mark as read fails\n        if @_currentMessageId is message.get 'id'\n            return\n        @_currentMessageId = message.get 'id'\n\n        # Mark message as seen if needed\n        flags = message.get('flags').slice()\n        if flags.indexOf(MessageFlags.SEEN) is -1\n            flags.push MessageFlags.SEEN\n            MessageActionCreator.updateFlag message, flags\n\n    prepareHTML: (prepared) ->\n        messageDisplayHTML = true\n        parser = new DOMParser()\n        html   = \"<html><head></head><body>#{prepared.html}</body></html>\"\n        doc    = parser.parseFromString html, \"text/html\"\n        images = []\n        if not doc\n            doc = document.implementation.createHTMLDocument(\"\")\n            doc.documentElement.innerHTML = html\n        if not doc\n            console.log \"Unable to parse HTML content of message\"\n            messageDisplayHTML = false\n        if doc and not @state.messageDisplayImages\n            hideImage = (image) ->\n                image.dataset.src = image.getAttribute 'src'\n                image.removeAttribute 'src'\n            images = doc.querySelectorAll 'IMG[src]'\n            hideImage image for image in images\n            for link in doc.querySelectorAll 'a[href]'\n                link.target = '_blank'\n        if doc?\n            @_htmlContent = doc.body.innerHTML\n        else\n            @_htmlContent = prepared.html\n            #htmluri = \"data:text/html;charset=utf-8;base64,\n            #      #{btoa(unescape(encodeURIComponent(doc.body.innerHTML)))}\"\n        return {messageDisplayHTML, images}\n\n    render: ->\n\n        message  = @props.message\n        prepared = @_prepareMessage()\n        if @state.messageDisplayHTML and prepared.html\n            {messageDisplayHTML, images} = @prepareHTML prepared\n            imagesWarning = images.length > 0 and\n                            not @state.messageDisplayImages\n\n        classes = classer\n            message: true\n            active: @state.active\n\n        if @state.active\n            li\n                className: classes,\n                key: @props.key,\n                'data-id': message.get('id'),\n                    @renderHeaders prepared\n                    div className: 'full-headers',\n                        pre null, prepared.fullHeaders.join \"\\n\"\n                    @renderToolbox message.get('id'), prepared\n                    @renderCompose()\n                    if messageDisplayHTML and prepared.html\n                        div className: 'row',\n                            if imagesWarning\n                                div\n                                    className: \"imagesWarning content-action\",\n                                    ref: \"imagesWarning\",\n                                        span null, t 'message images warning'\n                                        button\n                                            className: 'btn btn-default',\n                                            type: \"button\",\n                                            ref: 'imagesDisplay',\n                                            onClick: @displayImages,\n                                            t 'message images display'\n                            iframe\n                                className: 'content',\n                                ref: 'content',\n                                sandbox: 'allow-same-origin',\n                                allowTransparency: true,\n                                frameBorder: 0,\n                                name: \"message-\" + message.get('id'), ''\n                    else\n                        div className: 'row',\n                            #div className: \"content-action\",\n                            #    button\n                            #       className: 'btn btn-default',\n                            #       type: \"button\",\n                            #       onClick: @displayHTML,\n                            #       t 'message html display'\n                            div className: 'preview',\n                                p null, prepared.text\n                    div className: 'clearfix'\n        else\n            li\n                className: classes,\n                key: @props.key,\n                'data-id': message.get('id'),\n                    @renderHeaders prepared\n\n    getParticipants: (prepared) ->\n        from = prepared.from\n        to   = prepared.to.concat(prepared.cc)\n        span null,\n            Participants participants: from, onAdd: @addAddress\n            span null, ', '\n            Participants participants: to, onAdd: @addAddress\n\n    renderHeaders: (prepared) ->\n        hasAttachments = prepared.attachments.length\n        leftClass = if hasAttachments then 'col-md-8' else 'col-md-12'\n        flags     = prepared.flags\n        avatar = MessageUtils.getAvatar @props.message\n        classes = classer\n            'header': true\n            'row': true\n            'full': @state.headers\n            'compact': not @state.headers\n            'has-attachments': hasAttachments\n            'is-fav': flags.indexOf(MessageFlags.FLAGGED) isnt -1\n\n        #toggleActive = a className: \"toggle-active\", onClick: @toggleActive,\n        #    if @state.active\n        #        i className: 'fa fa-compress'\n        #    else\n        #        i className: 'fa fa-expand'\n        if @state.headers\n            # detailed headers\n            div className: classes, onClick: @toggleActive,\n                div className: leftClass,\n                    if avatar\n                        img className: 'sender-avatar', src: avatar\n                    else\n                        i className: 'sender-avatar fa fa-user'\n                    div className: 'participants col-md-9',\n                        p className: 'sender',\n                            @renderAddress 'from'\n                            i\n                                className: 'toggle-headers fa fa-toggle-up'\n                                onClick: @toggleHeaders\n                        p className: 'receivers',\n                            span null, t \"mail receivers\"\n                            @renderAddress 'to'\n                        if @props.message.get('cc')?length > 0\n                            p className: 'receivers',\n                                span null, t \"mail receivers cc\"\n                                @renderAddress 'cc'\n                        if hasAttachments\n                            span className: 'hour', prepared.date\n                    if not hasAttachments\n                        span className: 'hour', prepared.date\n                if hasAttachments\n                    div className: 'col-md-4',\n                        FilePicker\n                            editable: false\n                            value: prepared.attachments\n                #if @props.inConversation\n                #    toggleActive\n        else\n            # compact headers\n            div className: classes, onClick: @toggleActive,\n                if avatar\n                    img className: 'sender-avatar', src: avatar\n                else\n                    i className: 'sender-avatar fa fa-user'\n                span className: 'participants', @getParticipants prepared\n                if @state.active\n                    i\n                        className: 'toggle-headers fa fa-toggle-down'\n                        onClick: @toggleHeaders\n                #span className: 'subject', @props.message.get 'subject'\n                span className: 'hour', prepared.date\n                span className: \"flags\",\n                    i className: 'attach fa fa-paperclip'\n                    i className: 'fav fa fa-star'\n                #if @props.inConversation\n                #    toggleActive\n\n\n    renderAddress: (field) ->\n        addresses = @props.message.get(field)\n        if not addresses?\n            return\n\n        Participants participants: addresses, onAdd: @addAddress\n\n    renderCompose: ->\n        if @state.composing\n            Compose\n                inReplyTo       : @props.message\n                accounts        : @props.accounts\n                settings        : @props.settings\n                selectedAccount : @props.selectedAccount\n                action          : @state.composeAction\n                layout          : 'second'\n                callback: (error) =>\n                    if not error?\n                        @setState composing: false\n\n    renderToolbox: (id, prepared) ->\n\n        if @state.composing\n            return\n\n        isFlagged = prepared.flags.indexOf(FlagsConstants.FLAGGED) is -1\n        isSeen    = prepared.flags.indexOf(FlagsConstants.SEEN) is -1\n\n\n        conversationID = @props.message.get 'conversationID'\n\n        getParams = (id) =>\n            if conversationID and @props.settings.get('displayConversation')\n                return {\n                    action : 'conversation'\n                    id     : id\n                }\n            else\n                return {\n                    action : 'message'\n                    id     : id\n                }\n        if @props.prevID?\n            params = getParams @props.prevID\n            prev =\n                direction: 'second'\n                action: params.action\n                parameters: params.id\n            prevUrl =  @buildUrl prev\n            displayPrev = =>\n                @redirect prev\n        if @props.nextID?\n            params = getParams @props.nextID\n            next =\n                direction: 'second'\n                action: params.action\n                parameters: params.id\n            nextUrl = @buildUrl next\n            displayNext = =>\n                @redirect next\n\n\n        div className: 'messageToolbox row',\n            div className: 'btn-toolbar', role: 'toolbar',\n                div className: 'btn-group btn-group-sm btn-group-justified',\n                    if prevUrl?\n                        div className: 'btn-group btn-group-sm',\n                            button\n                                className: 'btn btn-default prev',\n                                type: 'button',\n                                onClick: displayPrev,\n                                    a href: prevUrl,\n                                        span className: 'fa fa-long-arrow-left'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default reply',\n                            type: 'button',\n                            onClick: @onReply,\n                                span\n                                    className: 'fa fa-reply'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action reply'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default reply-all',\n                            type: 'button',\n                            onClick: @onReplyAll,\n                                span\n                                    className: 'fa fa-reply-all'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action reply all'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default forward',\n                            type: 'button',\n                            onClick: @onForward,\n                                span\n                                    className: 'fa fa-mail-forward'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action forward'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default trash',\n                            type: 'button',\n                            onClick: @onDelete,\n                                span\n                                    className: 'fa fa-trash-o'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action delete'\n                    ToolboxMove\n                        mailboxes: @props.mailboxes\n                        onMove: @onMove\n                        direction: 'right'\n                    ToolboxActions\n                        mailboxes: @props.mailboxes\n                        isSeen: isSeen\n                        isFlagged: isFlagged\n                        messageID: id\n                        onMark: @onMark\n                        onConversation: @onConversation\n                        onHeaders: @onHeaders\n                        direction: 'right'\n                    if nextUrl?\n                        div className: 'btn-group btn-group-sm',\n                            button\n                                className: 'btn btn-default',\n                                type: 'button',\n                                onClick: displayNext,\n                                    a href: nextUrl,\n                                        span className: 'fa fa-long-arrow-right'\n\n\n    _initFrame: ->\n        panel = document.querySelector \"#panels > .panel:nth-of-type(2)\"\n        if panel? and not @state.composing\n            panel.scrollTop = 0\n        # - resize the frame to the height of its content\n        # - if images are not displayed, create the function to display them\n        #   and resize the frame\n        if @refs.content\n            frame = @refs.content.getDOMNode()\n            loadContent = =>\n                doc = frame.contentDocument or frame.contentWindow.document\n                if doc?\n                    s = document.createElement 'style'\n                    doc.head.appendChild(s)\n                    font = \"./fonts/sourcesanspro/SourceSansPro-Regular\"\n                    rules = [\n                        \"\"\"\n                        @font-face{\n                          font-family: 'Source Sans Pro';\n                          font-weight: 400;\n                          font-style: normal;\n                          font-stretch: normal;\n                          src: url('#{font}.eot') format('embedded-opentype'),\n                               url('#{font}.otf.woff') format('woff'),\n                               url('#{font}.otf') format('opentype'),\n                               url('#{font}.ttf') format('truetype');\n                        }\n                        \"\"\",\n                        \"body {\n                            font-family: 'Source Sans Pro';\n                        }\",\n                        \"blockquote {\n                            margin-left: .5em;\n                            padding-left: .5em;\n                            border-left: 2px solid blue;\n                            color: blue;\n                        }\",\n                        \"blockquote blockquote { border-color: red !important; color: red; }\",\n                        \"blockquote blockquote blockquote { border-color: green !important; color: green; }\",\n                        \"blockquote blockquote blockquote blockquote { border-color: magenta !important; color: magenta; }\",\n                        \"blockquote blockquote blockquote blockquote blockquote { border-color: blue !important; color: blue; }\",\n                    ]\n                    rules.forEach (rule, idx) ->\n                        s.sheet.insertRule rule, idx\n                    doc.body.innerHTML = @_htmlContent\n                    rect = doc.body.getBoundingClientRect()\n                    frame.style.height = \"#{rect.height + 60}px\"\n                else\n                    # try to display text only\n                    @setState messageDisplayHTML: false\n\n            frame.addEventListener 'load', loadContent\n            loadContent()\n\n    componentDidMount: ->\n        @_initFrame()\n\n    componentDidUpdate: ->\n        @_initFrame()\n\n    toggleHeaders: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        state =\n            headers: not @state.headers\n        if @props.inConversation and not @state.active\n            state.active = true\n        @setState state\n\n    toggleActive: (e) ->\n        if @props.inConversation\n            e.preventDefault()\n            e.stopPropagation()\n            if @state.active\n                @setState { active: false, headers: false }\n            else\n                @setState { active: true, headers: false }\n\n    displayNextMessage: (next)->\n        if not next?\n            if @props.nextID?\n                next = @props.nextID\n            else next = @props.prevID\n        if next?\n            @redirect\n                direction: 'second'\n                action: 'message'\n                parameters: next\n        else\n            @redirect\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters:\n                    accountID: @props.message.get 'accountID'\n                    mailboxID: @props.selectedMailboxID\n                fullWidth: true\n\n    onReply: (args) ->\n        @setState composing: true, composeAction: ComposeActions.REPLY\n\n    onReplyAll: (args) ->\n        @setState composing: true, composeAction: ComposeActions.REPLY_ALL\n\n    onForward: (args) ->\n        @setState composing: true, composeAction: ComposeActions.FORWARD\n\n    onDelete: (args) ->\n        alertError   = LayoutActionCreator.alertError\n        alertSuccess = LayoutActionCreator.alertSuccess\n        message      = @props.message\n        if @props.nextID?\n            next = @props.nextID\n        else next = @props.prevID\n        if (not @props.settings.get('messageConfirmDelete')) or\n        window.confirm(t 'mail confirm delete', {subject: message.get('subject')})\n            MessageActionCreator.delete message, (error) =>\n                if error?\n                    alertError \"#{t(\"message action delete ko\")} #{error}\"\n                else\n                    @displayNextMessage next\n\n    onCopy: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n\n    onMove: (args) ->\n        newbox = args.target.dataset.value\n        alertError   = LayoutActionCreator.alertError\n        alertSuccess = LayoutActionCreator.alertSuccess\n        if @props.nextID?\n            next = @props.nextID\n        else next = @props.prevID\n        if args.target.dataset.conversation?\n            conversationID = @props.message.get('conversationID')\n            ConversationActionCreator.move conversationID, newbox, (error) =>\n                if error?\n                    alertError \"#{t(\"conversation move ko\")} #{error}\"\n                else\n                    alertSuccess t \"conversation move ok\"\n                    @displayNextMessage next\n        else\n            oldbox = @props.selectedMailboxID\n            MessageActionCreator.move @props.message, oldbox, newbox, (error) =>\n                if error?\n                    alertError \"#{t(\"message action move ko\")} #{error}\"\n                else\n                    alertSuccess t \"message action move ok\"\n                    @displayNextMessage next\n\n    onMark: (args) ->\n        flags = @props.message.get('flags').slice()\n        flag = args.target.dataset.value\n        alertError   = LayoutActionCreator.alertError\n        alertSuccess = LayoutActionCreator.alertSuccess\n        switch flag\n            when FlagsConstants.SEEN\n                flags.push MessageFlags.SEEN\n            when FlagsConstants.UNSEEN\n                flags = flags.filter (e) -> return e isnt FlagsConstants.SEEN\n            when FlagsConstants.FLAGGED\n                flags.push MessageFlags.FLAGGED\n            when FlagsConstants.NOFLAG\n                flags = flags.filter (e) -> return e isnt FlagsConstants.FLAGGED\n        MessageActionCreator.updateFlag @props.message, flags, (error) ->\n            if error?\n                alertError \"#{t(\"message action mark ko\")} #{error}\"\n            else\n                alertSuccess t \"message action mark ok\"\n\n    onConversation: (args) ->\n        id     = @props.message.get 'conversationID'\n        action = args.target.dataset.action\n        alertError   = LayoutActionCreator.alertError\n        alertSuccess = LayoutActionCreator.alertSuccess\n        switch action\n            when 'delete'\n                ConversationActionCreator.delete id, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation delete ko\")} #{error}\"\n                    else\n                        alertSuccess t \"conversation delete ok\"\n            when 'seen'\n                ConversationActionCreator.seen id, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation seen ok \")} #{error}\"\n                    else\n                        alertSuccess t \"conversation seen ko \"\n            when 'unseen'\n                ConversationActionCreator.unseen id, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation unseen ok\")} #{error}\"\n                    else\n                        alertSuccess t \"conversation unseen ko\"\n\n    onHeaders: (event) ->\n        event.preventDefault()\n        messageId = event.target.dataset.messageId\n        document.querySelector(\".conversation [data-id='#{messageId}']\")\n            .classList.toggle('with-headers')\n\n    displayHTML: (event) ->\n        event.preventDefault()\n        @setState messageDisplayHTML: true\n\n    displayImages: (event) ->\n        event.preventDefault()\n        @setState messageDisplayImages: true\n\n    addAddress: (address) ->\n        ContactActionCreator.createContact address\n","module.exports = Modal = React.createClass\n    displayName: 'Modal'\n\n    render: ->\n        React.DOM.div\n            className: \"modal fade in\",\n            role: \"dialog\",\n            style: display: 'block',\n                React.DOM.div className: \"modal-dialog\",\n                    React.DOM.div className: \"modal-content\",\n                        if @props.title?\n                            React.DOM.div className: \"modal-header\",\n                                if @props.closeLabel?\n                                    React.DOM.button\n                                        type: 'button',\n                                        className: 'close',\n                                        onClick: @props.closeModal,\n                                            React.DOM.i className: 'fa fa-times'\n                                React.DOM.h4\n                                    className: \"modal-title\",\n                                    @props.title\n                        React.DOM.div className: \"modal-body\",\n                            if @props.subtitle?\n                                React.DOM.span null, @props.subtitle\n                            @props.content\n                        if @props.closeLabel?\n                            React.DOM.div className: \"modal-footer\",\n                                React.DOM.button\n                                    type: 'button',\n                                    className: 'btn',\n                                    onClick: @props.closeModal,\n                                    @props.closeLabel\n\n","{span, a, i} = React.DOM\nMessageUtils   = require '../utils/message_utils'\nContactStore   = require '../stores/contact_store'\n\nParticipant = React.createClass\n    displayName: 'Participant'\n\n    render: ->\n        if not @props.address?\n            span null\n        else\n            span\n                className: 'address-item'\n                'data-toggle': \"tooltip\"\n                ref: 'participant'\n                title: @props.address.address,\n                key: @props.key,\n                MessageUtils.displayAddress @props.address\n\n    # To keep HTML markup light, create the contact tooltip dynamicaly\n    # on mouse over\n    tooltip: ->\n        if @refs.participant?\n            node  = @refs.participant.getDOMNode()\n            delay = null\n            onAdd = (e) =>\n                e.preventDefault()\n                e.stopPropagation()\n                @props.onAdd @props.address\n            addTooltip = (e) =>\n                if node.dataset.tooltip\n                    return\n                node.dataset.tooltip = true\n                avatar = ContactStore.getAvatar @props.address.address\n                if avatar?\n                    image = \"<img class='avatar' src=#{avatar}>\"\n                else\n                    image = \"<i class='avatar fa fa-user' />\"\n                if @props.onAdd?\n                    add = \"\"\"\n                    <a class='address-add'>\n                        <i class='fa fa-plus' />\n                    </a>\n                    \"\"\"\n                else\n                    add = ''\n                template = \"\"\"\n                    <div class=\"tooltip\" role=\"tooltip\">\n                        <div class=\"tooltip-arrow\"></div>\n                        <div>\n                            #{image}\n                            #{@props.address.address}\n                            #{add}\n                        </div>\n                    </div>'\n                    \"\"\"\n                options =\n                    template: template\n                    trigger: 'manual'\n                    container: \"[data-reactid='#{node.dataset.reactid}']\"\n                jQuery(node).tooltip(options).tooltip('show')\n                tooltipNode = jQuery(node).data('bs.tooltip').tip()[0]\n                rect = tooltipNode.getBoundingClientRect()\n                mask = document.createElement 'div'\n                mask.classList.add 'tooltip-mask'\n                mask.style.top    = (rect.top - 2) + 'px'\n                mask.style.left   = (rect.left - 2) + 'px'\n                mask.style.height = (rect.height + 16) + 'px'\n                mask.style.width  = (rect.width  + 4) + 'px'\n                document.body.appendChild mask\n                mask.addEventListener 'mouseout', (e) ->\n                    if not ( rect.left < e.pageX < rect.right) or\n                       not ( rect.top  < e.pageY < rect.bottom)\n                        mask.parentNode.removeChild mask\n                        removeTooltip()\n                if @props.onAdd?\n                    addNode = tooltipNode.querySelector('.address-add')\n                    addNode.addEventListener 'mouseover', ->\n                    addNode.addEventListener 'click', onAdd\n            removeTooltip = ->\n                addNode = node.querySelector('.address-add')\n                if addNode?\n                    addNode.removeEventListener 'click', onAdd\n                delete node.dataset.tooltip\n                jQuery(node).tooltip('destroy')\n\n            node.addEventListener 'mouseover', ->\n                delay = setTimeout ->\n                    addTooltip()\n                , 1000\n            node.addEventListener 'mouseout', ->\n                clearTimeout delay\n\n    componentDidMount: ->\n        @tooltip()\n    componentDidUpdate: ->\n        @tooltip()\n\nParticipants = React.createClass\n    displayName: 'Participants'\n\n    render: ->\n        span className: 'address-list',\n            if @props.participants\n                for address, key in @props.participants\n                    span key: key, className: null,\n                        Participant {key, address, onAdd: @props.onAdd}\n                        if key < ( @props.participants.length - 1)\n                            span null, ', '\n\nmodule.exports = Participants\n","{div, input, span} = React.DOM\nclasser = React.addons.classSet\n\nSearchActionCreator = require '../actions/search_action_creator'\n\nENTER_KEY = 13\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'SearchForm'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        div className: 'form-group pull-left',\n            div className: 'input-group',\n                input\n                    className: 'form-control',\n                    type: 'text',\n                    placeholder: t('app search'),\n                    onKeyPress: @onKeyPress,\n                    ref: 'searchInput',\n                    defaultValue: @props.query\n                div\n                    className: 'input-group-addon btn btn-cozy',\n                    onClick: @onSubmit,\n                        span className: 'fa fa-search'\n\n    onSubmit: ->\n        query = encodeURIComponent @refs.searchInput.getDOMNode().value.trim()\n\n        # only submit query if it's longer than 3 characters\n        # @TODO: validate and give feedback to the user\n        if query.length > 3\n            @redirect\n                direction: 'first'\n                action: 'search'\n                parameters: [query]\n\n    onKeyPress: (evt) ->\n        if evt.charCode is ENTER_KEY\n            @onSubmit()\n            evt.preventDefault()\n            return false\n        else\n            query = @refs.searchInput.getDOMNode().value\n            SearchActionCreator.setQuery query\n","{div, h3, form, label, input, button, fieldset, legend, ul, li, a} = React.DOM\nclasser = React.addons.classSet\n\nSettingsActionCreator = require '../actions/settings_action_creator'\nPluginUtils = require '../utils/plugin_utils'\nApiUtils = require '../utils/api_utils'\n\nmodule.exports = React.createClass\n    displayName: 'Settings'\n\n    render: ->\n\n        classLabel = 'col-sm-2 col-sm-offset-2 control-label'\n\n        div id: 'mailbox-config',\n            h3 className: null, t \"settings title\"\n\n            if @props.error\n                div className: 'error', @props.error\n\n            form className: 'form-horizontal',\n                div className: 'form-group',\n                    label htmlFor: 'settings-mpp', className: classLabel,\n                        t \"settings label mpp\"\n                    div className: 'col-sm-3',\n                        input\n                            id: 'settings-mpp',\n                            value: @state.settings.messagesPerPage,\n                            onChange: @handleChange,\n                            'data-target': 'messagesPerPage',\n                            type: 'number',\n                            min: 5,\n                            max: 100,\n                            step: 5,\n                            className: 'form-control'\n\n                div className: 'form-group',\n                    label htmlFor: 'settings-refresh', className: classLabel,\n                        t \"settings label refresh\"\n                    div className: 'col-sm-3',\n                        input\n                            id: 'settings-refresh',\n                            value: @state.settings.refreshInterval,\n                            onChange: @handleChange,\n                            'data-target': 'refreshInterval',\n                            type: 'number',\n                            min: 1,\n                            max: 15,\n                            step: 1,\n                            className: 'form-control'\n\n                # Lang\n                div className: 'form-group',\n                    label htmlFor: 'settings-mpp', className: classLabel,\n                        t \"settings lang\"\n                    div className: 'col-sm-3',\n                        div className: \"dropdown\",\n                            button\n                                className: \"btn btn-default dropdown-toggle\"\n                                type: \"button\"\n                                \"data-toggle\": \"dropdown\",\n                                t \"settings lang #{@state.settings.lang}\"\n                            ul className: \"dropdown-menu\", role: \"menu\",\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'lang',\n                                    'data-lang': 'en',\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings lang en\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'lang',\n                                    'data-lang': 'fr',\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings lang fr\"\n\n                # List style\n                div className: 'form-group',\n                    label htmlFor: 'settings-mpp', className: classLabel,\n                        t \"settings label listStyle\"\n                    div className: 'col-sm-3',\n                        div className: \"dropdown\",\n                            button\n                                className: \"btn btn-default dropdown-toggle\"\n                                type: \"button\"\n                                \"data-toggle\": \"dropdown\",\n                                t \"settings label listStyle #{@state.settings.listStyle or 'default'}\"\n                            ul className: \"dropdown-menu\", role: \"menu\",\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'listStyle',\n                                    'data-style': 'default',\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label listStyle default\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'listStyle',\n                                    'data-style': 'compact',\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label listStyle compact\"\n\n            @_renderOption 'displayConversation'\n            @_renderOption 'composeInHTML'\n            @_renderOption 'messageDisplayHTML'\n            @_renderOption 'messageDisplayImages'\n            @_renderOption 'messageConfirmDelete'\n            @_renderOption 'displayPreview'\n\n            fieldset null,\n                legend null, t 'settings plugins'\n                for own pluginName, pluginConf of @state.settings.plugins\n                    form className: 'form-horizontal', key: pluginName,\n                        div className: 'form-group',\n                            label\n                                className: classLabel,\n                                htmlFor: 'settings-plugin-' + pluginName,\n                                pluginConf.name\n                            div className: 'col-sm-3',\n                                input\n                                    id: 'settings-plugin-' + pluginName,\n                                    checked: pluginConf.active,\n                                    onChange: @handleChange,\n                                    'data-target': 'plugin',\n                                    'data-plugin': pluginName,\n                                    type: 'checkbox'\n\n    _renderOption: (option) ->\n        classLabel = 'col-sm-2 col-sm-offset-2 control-label'\n        form className: 'form-horizontal',\n            div className: 'form-group',\n                label\n                    htmlFor: 'settings-' + option,\n                    className: classLabel,\n                    t \"settings label \" + option\n                div className: 'col-sm-3',\n                    input\n                        id: 'settings-' + option,\n                        checked: @state.settings[option],\n                        onChange: @handleChange,\n                        'data-target': option,\n                        type: 'checkbox'\n\n    handleChange: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        switch target.dataset.target\n            when 'messagesPerPage'\n                settings = @state.settings\n                settings.messagesPerPage = target.value\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'refreshInterval'\n                settings = @state.settings\n                settings.refreshInterval = target.value\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n                SettingsActionCreator.setRefresh target.value\n            when 'composeInHTML'\n            ,    'displayConversation'\n            ,    'messageDisplayHTML'\n            ,    'messageDisplayImages'\n            ,    'messageConfirmDelete'\n            ,    'displayPreview'\n                settings = @state.settings\n                settings[target.dataset.target] = target.checked\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'lang'\n                lang = target.dataset.lang\n                settings = @state.settings\n                settings.lang = lang\n                @setState({settings: settings})\n                ApiUtils.setLocale lang, true\n                SettingsActionCreator.edit settings\n            when 'listStyle'\n                settings = @state.settings\n                settings.listStyle = target.dataset.style\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'plugin'\n                name = target.dataset.plugin\n                settings = @state.settings\n                if target.checked\n                    PluginUtils.activate name\n                else\n                    PluginUtils.deactivate name\n                for own pluginName, pluginConf of settings.plugins\n                    settings.plugins[pluginName].active = window.plugins[pluginName].active\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n\n    getInitialState: (forceDefault) ->\n        settings = @props.settings.toObject()\n        return {\n            settings: @props.settings.toObject()\n        }\n","{div} = React.DOM\n\nmodule.exports = ThinProgress = React.createClass\n    displayName: 'ThinProgress'\n\n    render: ->\n        percent = 100 * (@props.done / @props.total) + '%'\n        div className: \"progress progress-thin\",\n            div\n                className: 'progress-bar',\n                style: width: percent\n","{a, h4,  pre, div, button, span, strong, i} = React.DOM\nSocketUtils     = require '../utils/socketio_utils'\nAppDispatcher   = require '../app_dispatcher'\nModal           = require './modal'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\nLayoutStore      = require '../stores/layout_store'\nLayoutActionCreator = require '../actions/layout_action_creator'\n{ActionTypes} = require '../constants/app_constants'\n\nclasser = React.addons.classSet\n\nmodule.exports = Toast = React.createClass\n    displayName: 'Toast'\n\n    getInitialState: ->\n        return modalErrors: false\n\n    closeModal: ->\n        @setState modalErrors: false\n\n    showModal: (errors) ->\n        @setState modalErrors: errors\n\n    acknowledge: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_TASK_DELETE\n            value: @props.toast.id\n\n    render: ->\n        toast = @props.toast\n        hasErrors = toast.errors? and toast.errors.length\n        classes = classer\n            alert: true\n            toast: true\n            'alert-dismissible': toast.finished\n            'alert-info': not hasErrors\n            'alert-warning': hasErrors\n        if toast.done? and toast.total?\n            percent = parseInt(100 * toast.done / toast.total) + '%'\n        if hasErrors\n            showModal = @showModal.bind(this, toast.errors)\n        if @state.modalErrors\n            title       = t 'modal please contribute'\n            subtitle    = t 'modal please report'\n            modalErrors = @state.modalErrors\n            closeModal  = @closeModal\n            closeLabel  = t 'app alert close'\n            content = React.DOM.pre\n                style: \"max-height\": \"300px\",\n                \"word-wrap\": \"normal\",\n                    @state.modalErrors.join \"\\n\\n\"\n            modal = Modal {title, subtitle, content, closeModal, closeLabel}\n\n        div className: classes, role: \"alert\",\n            if @state.modalErrors\n                modal\n\n            if percent?\n                div className: \"progress\",\n                    div\n                        className: 'progress-bar',\n                        style: width: percent\n                    div\n                        className: 'progress-bar-label start',\n                        style: width: percent,\n                        \"#{t \"task \" + toast.code, toast} : #{percent}\"\n                    div\n                        className: 'progress-bar-label end',\n                        \"#{t \"task \" + toast.code, toast} : #{percent}\"\n\n            if toast.message\n                div className: \"message\", toast.message\n\n            if toast.finished\n                button\n                    type: \"button\",\n                    className: \"close\",\n                    onClick: @acknowledge,\n                        span 'aria-hidden': \"true\", \"×\"\n                        span className: \"sr-only\", t \"app alert close\"\n\n            if toast.actions?\n                div className: 'toast-actions',\n                    toast.actions.map (action, id) ->\n                        button\n                            className: \"btn btn-default btn-xs\",\n                            type: \"button\",\n                            key: id\n                            onClick: action.onClick,\n                            action.label\n\n            if hasErrors\n                a onClick: showModal,\n                    t 'there were errors', smart_count: toast.errors.length\n\n    componentDidMount: ->\n        @shouldAutoclose()\n\n    componentDidUpdate: ->\n        @shouldAutoclose()\n\n    shouldAutoclose: ->\n        hasErrors = @props.toast.errors? and @props.toast.errors.length\n        if @props.toast.autoclose or (@props.toast.finished and not hasErrors)\n            target = @getDOMNode()\n            if not target.classList.contains 'autoclose'\n                setTimeout ->\n                    target.classList.add 'autoclose'\n                , 1000\n                setTimeout =>\n                    @acknowledge()\n                , 10000\n\nmodule.exports.Container = ToastContainer =  React.createClass\n    displayName: 'ToastContainer'\n\n    mixins: [\n        StoreWatchMixin [LayoutStore]\n    ]\n\n    getStateFromStores: ->\n        return {\n            toasts: LayoutStore.getTasks()\n            hidden: not LayoutStore.isShown()\n        }\n\n    render: ->\n        toasts = @state.toasts.toJS?() or @state.toasts\n\n        classes = classer\n            'toasts-container': true\n            'action-hidden': @state.hidden\n            'has-toasts': Object.keys(toasts).length isnt 0\n\n        div className: classes,\n            Toast {toast, key: id} for id, toast of toasts\n            div className: 'alert alert-success toast toasts-actions',\n                span\n                    className: \"toast-action hide-action\",\n                    title: t 'toast hide'\n                    onClick: @toggleHidden,\n                        i className: 'fa fa-eye-slash'\n                span\n                    className: \"toast-action show-action\",\n                    title: t 'toast show'\n                    onClick: @toggleHidden,\n                        i className: 'fa fa-eye'\n                span\n                    className: \"toast-action close-action\",\n                    title: t 'toast close all'\n                    onClick: @closeAll,\n                        i className: 'fa fa-times'\n\n    toggleHidden: ->\n        if @state.hidden\n            LayoutActionCreator.toastsShow()\n        else\n            LayoutActionCreator.toastsHide()\n\n    closeAll: ->\n        toasts = @state.toasts.toJS?() or @state.toasts\n        close = (toast) ->\n            if toast.type is NotifyType.SERVER\n                SocketUtils.acknowledgeTask toast.id\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_TASK_DELETE\n                    value: toast.id\n        close toast for id, toast of toasts\n        @setState toasts: @state.toasts.clear()\n","{div, ul, li, span, i, p, a, button} = React.DOM\n{MessageFlags, FlagsConstants} = require '../constants/app_constants'\n\nmodule.exports = ToolboxActions = React.createClass\n    displayName: 'ToolboxActions'\n\n    render: ->\n        direction = if @props.direction is 'right' then 'right' else 'left'\n        div className: 'btn-group btn-group-sm',\n            button\n                className: 'btn btn-default dropdown-toggle more',\n                type: 'button',\n                'data-toggle': 'dropdown',\n                t 'mail action more',\n                    span className: 'caret'\n            ul className: 'dropdown-menu dropdown-menu-' + direction, role: 'menu',\n                li\n                    role: 'presentation',\n                    t 'mail action mark'\n                if (not @props.isSeen?) or @props.isSeen is true\n                    li null,\n                        a\n                            role: 'menuitem',\n                            onClick: @props.onMark,\n                            'data-value': FlagsConstants.SEEN,\n                            t 'mail mark read'\n                if (not @props.isSeen?) or @props.isSeen is false\n                    li null,\n                        a role: 'menuitem',\n                        onClick: @props.onMark,\n                        'data-value': FlagsConstants.UNSEEN,\n                        t 'mail mark unread'\n                if (not @props.isFlagged?) or @props.isFlagged is true\n                    li null,\n                        a\n                            role: 'menuitem',\n                            onClick: @props.onMark,\n                            'data-value': FlagsConstants.FLAGGED,\n                            t 'mail mark fav'\n                if (not @props.isFlagged?) or @props.isFlagged is false\n                    li null,\n                        a\n                            role: 'menuitem',\n                            onClick: @props.onMark,\n                            'data-value': FlagsConstants.NOFLAG,\n                            t 'mail mark nofav'\n                li role: 'presentation', className: 'divider'\n                if @props.messageID?\n                    li role: 'presentation',\n                        a\n                            onClick: @props.onHeaders,\n                            'data-message-id': @props.messageID,\n                            t 'mail action headers'\n                li role: 'presentation',\n                    a\n                        onClick: @props.onConversation,\n                        'data-action' : 'delete',\n                        t 'mail action conversation delete'\n                li role: 'presentation',\n                    a\n                        onClick: @props.onConversation,\n                        'data-action' : 'seen',\n                        t 'mail action conversation seen'\n                li role: 'presentation',\n                    a\n                        onClick: @props.onConversation,\n                        'data-action' : 'unseen',\n                        t 'mail action conversation unseen'\n                li role: 'presentation', className: 'divider'\n                li\n                    role: 'presentation',\n                    t 'mail action conversation move'\n                @props.mailboxes.map (mailbox, key) =>\n                    @renderMailboxes mailbox, key, true\n                .toJS()\n                li role: 'presentation', className: 'divider'\n\n    renderMailboxes: (mailbox, key, conversation) ->\n        # Don't display current mailbox\n        if mailbox.get('id') is @props.selectedMailboxID\n            return\n        pusher = \"\"\n        pusher += \"--\" for j in [1..mailbox.get('depth')] by 1\n        li role: 'presentation', key: key,\n            a\n                role: 'menuitem',\n                onClick: @onMove,\n                'data-value': key,\n                'data-conversation': conversation,\n                \"#{pusher}#{mailbox.get 'label'}\"\n\n","{div, ul, li, span, i, p, a, button} = React.DOM\nLayoutActionCreator       = require '../actions/layout_action_creator'\nConversationActionCreator = require '../actions/conversation_action_creator'\nmodule.exports = ToolboxMove = React.createClass\n    displayName: 'ToolboxMove'\n\n    render: ->\n        direction = if @props.direction is 'right' then 'right' else 'left'\n        div className: 'btn-group btn-group-sm',\n            button\n                className: 'btn btn-default dropdown-toggle move',\n                type: 'button',\n                'data-toggle': 'dropdown',\n                t 'mail action move',\n                    span className: 'caret'\n            ul\n                className: 'dropdown-menu dropdown-menu-' + direction,\n                role: 'menu',\n                    @props.mailboxes.map (mailbox, key) =>\n                        @renderMailboxes mailbox, key\n                    .toJS()\n\n    renderMailboxes: (mailbox, key, conversation) ->\n        # Don't display current mailbox\n        if mailbox.get('id') is @props.selectedMailboxID\n            return\n        pusher = \"\"\n        pusher += \"--\" for j in [1..mailbox.get('depth')] by 1\n        li role: 'presentation', key: key,\n            a\n                role: 'menuitem',\n                onClick: @props.onMove,\n                'data-value': key,\n                'data-conversation': conversation,\n                \"#{pusher}#{mailbox.get 'label'}\"\n\n","# React components\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\nMailboxList   = require './mailbox-list'\nSearchForm = require './search-form'\n\n# mixins & action creator\nRouterMixin = require '../mixins/router_mixin'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\n# React addons\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\n\nmodule.exports = Topbar = React.createClass\n    displayName: 'Topbar'\n\n    mixins: [RouterMixin]\n\n    # Toggle the menu in responsive mode\n    onResponsiveMenuClick: (event) ->\n        event.preventDefault()\n        if @props.isResponsiveMenuShown\n            LayoutActionCreator.hideReponsiveMenu()\n        else\n            LayoutActionCreator.showReponsiveMenu()\n\n    refresh: (event) ->\n        event.preventDefault()\n        LayoutActionCreator.refreshMessages()\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n\n        {layout, selectedAccount, selectedMailboxID, mailboxes, searchQuery} = @props\n\n        responsiveBackUrl = @buildUrl\n            firstPanel: layout.firstPanel\n            fullWidth: true\n\n        getUrl = (mailbox) =>\n            @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [selectedAccount?.get('id'), mailbox.get('id')]\n\n        if selectedAccount and layout.firstPanel.action isnt 'account.new'\n            # the button toggles the mailbox config\n            if layout.firstPanel.action is 'account.config'\n                configMailboxUrl = @buildUrl\n                    direction: 'first'\n                    action: 'account.mailbox.messages'\n                    parameters: selectedAccount.get 'id'\n                    fullWidth: true\n            else\n                configMailboxUrl = @buildUrl\n                    direction: 'first'\n                    action: 'account.config'\n                    parameters: selectedAccount.get 'id'\n                    fullWidth: true\n\n\n        div id: 'quick-actions', className: 'row',\n            # responsive menu icon\n            if layout.secondPanel\n                a href: responsiveBackUrl, className: 'responsive-handler hidden-md hidden-lg',\n                    i className: 'fa fa-chevron-left hidden-md hidden-lg pull-left'\n                    t \"app back\"\n            else\n                a onClick: @onResponsiveMenuClick, className: 'responsive-handler hidden-md hidden-lg',\n                    i className: 'fa fa-bars pull-left'\n                    t \"app menu\"\n\n            if layout.firstPanel.action is 'account.mailbox.messages' or\n               layout.firstPanel.action is 'account.mailbox.messages'\n                div className: 'col-md-6 hidden-xs hidden-sm pull-left',\n                    form className: 'form-inline col-md-12',\n                        MailboxList\n                            getUrl: getUrl\n                            mailboxes: mailboxes\n                            selectedMailbox: selectedMailboxID\n                        SearchForm query: searchQuery\n\n            if layout.firstPanel.action is 'account.mailbox.messages' or\n               layout.firstPanel.action is 'account.mailbox.messages'\n                div id: 'contextual-actions', className: 'col-md-6 hidden-xs hidden-sm pull-left text-right',\n                    a onClick: @refresh, className: 'btn btn-cozy-contrast',\n                        i className: 'fa fa-refresh'\n                    ReactCSSTransitionGroup transitionName: 'fade',\n                        if configMailboxUrl\n                            a href: configMailboxUrl, className: 'btn btn-cozy mailbox-config',\n                                i className: 'fa fa-cog'\n","module.exports =\n\n    ActionTypes:\n        # Account\n        'ADD_ACCOUNT'               : 'ADD_ACCOUNT'\n        'REMOVE_ACCOUNT'            : 'REMOVE_ACCOUNT'\n        'EDIT_ACCOUNT'              : 'EDIT_ACCOUNT'\n        'SELECT_ACCOUNT'            : 'SELECT_ACCOUNT'\n        'NEW_ACCOUNT_WAITING'       : 'NEW_ACCOUNT_WAITING'\n        'NEW_ACCOUNT_ERROR'         : 'NEW_ACCOUNT_ERROR'\n\n        # Mailbox\n        'MAILBOX_ADD'               : 'MAILBOX_ADD'\n        'MAILBOX_CREATE'            : 'MAILBOX_CREATE'\n        'MAILBOX_UPDATE'            : 'MAILBOX_UPDATE'\n        'MAILBOX_DELETE'            : 'MAILBOX_DELETE'\n\n        # Message\n        'RECEIVE_RAW_MESSAGE'       : 'RECEIVE_RAW_MESSAGE'\n        'RECEIVE_RAW_MESSAGES'      : 'RECEIVE_RAW_MESSAGES'\n        'MESSAGE_SEND'              : 'MESSAGE_SEND'\n        'MESSAGE_DELETE'            : 'MESSAGE_DELETE'\n        'MESSAGE_BOXES'             : 'MESSAGE_BOXES'\n        'MESSAGE_FLAG'              : 'MESSAGE_FLAG'\n        'MESSAGE_ACTION'            : 'MESSAGE_ACTION'\n        'MESSAGE_CURRENT'           : 'MESSAGE_CURRENT'\n        'RECEIVE_MESSAGE_DELETE'    : 'RECEIVE_MESSAGE_DELETE'\n\n        # Search\n        'SET_SEARCH_QUERY'          : 'SET_SEARCH_QUERY'\n        'RECEIVE_RAW_SEARCH_RESULTS': 'RECEIVE_RAW_SEARCH_RESULTS'\n        'CLEAR_SEARCH_RESULTS'      : 'CLEAR_SEARCH_RESULTS'\n\n        # Contacts\n        'SET_CONTACT_QUERY'          : 'SET_CONTACT_QUERY'\n        'RECEIVE_RAW_CONTACT_RESULTS': 'RECEIVE_RAW_CONTACT_RESULTS'\n        'CLEAR_CONTACT_RESULTS'      : 'CLEAR_CONTACT_RESULTS'\n        'CONTACT_LOCAL_SEARCH'       : 'CONTACT_LOCAL_SEARCH'\n\n        # Layout\n        'SHOW_MENU_RESPONSIVE'      : 'SHOW_MENU_RESPONSIVE'\n        'HIDE_MENU_RESPONSIVE'      : 'HIDE_MENU_RESPONSIVE'\n        'DISPLAY_ALERT'             : 'DISPLAY_ALERT'\n        'HIDE_ALERT'                : 'HIDE_ALERT'\n        'REFRESH'                   : 'REFRESH'\n\n        # Mailbox\n        'RECEIVE_RAW_MAILBOXES'     : 'RECEIVE_RAW_MAILBOXES'\n\n        # Settings\n        'SETTINGS_UPDATED'          : 'SETTINGS_UPDATED'\n\n        # Tasks\n        'RECEIVE_TASK_UPDATE'       : 'RECEIVE_TASK_UPDATE'\n        'RECEIVE_TASK_DELETE'       : 'RECEIVE_TASK_DELETE'\n\n        # Refreshes\n        'RECEIVE_REFRESH_UPDATE'       : 'RECEIVE_REFRESH_UPDATE'\n        'RECEIVE_REFRESH_STATUS'       : 'RECEIVE_REFRESH_STATUS'\n        'RECEIVE_REFRESH_DELETE'       : 'RECEIVE_REFRESH_DELETE'\n\n        # List\n        'LIST_FILTER'               : 'LIST_FILTER'\n        'LIST_QUICK_FILTER'         : 'LIST_QUICK_FILTER'\n        'LIST_SORT'                 : 'LIST_SORT'\n\n        # Toasts\n        'TOASTS_SHOW'               : 'TOASTS_SHOW'\n        'TOASTS_HIDE'               : 'TOASTS_HIDE'\n\n    PayloadSources:\n        'VIEW_ACTION'   : 'VIEW_ACTION'\n        'SERVER_ACTION' : 'SERVER_ACTION'\n\n    ComposeActions:\n        'REPLY'         : 'REPLY'\n        'REPLY_ALL'     : 'REPLY_ALL'\n        'FORWARD'       : 'FORWARD'\n\n    AlertLevel:\n        'SUCCESS'      : 'SUCCESS'\n        'INFO'         : 'INFO'\n        'WARNING'      : 'WARNING'\n        'ERROR'        : 'ERROR'\n\n    MessageFlags:\n        'FLAGGED'      : '\\\\Flagged'\n        'SEEN'         : '\\\\Seen'\n        'DRAFT'        : '\\\\Draft'\n\n    MessageFilter:\n        'ALL'          : 'all'\n        'FLAGGED'      : 'flagged'\n        'UNSEEN'       : 'unseen'\n\n    MailboxFlags:\n        'DRAFT'   :  '\\\\Drafts'\n        'SENT'    :  '\\\\Sent'\n        'TRASH'   :  '\\\\Trash'\n        'ALL'     :  '\\\\All'\n        'SPAM'    :  '\\\\Junk'\n        'FLAGGED' :  '\\\\Flagged'\n\n    FlagsConstants:\n        SEEN   : '\\\\Seen'\n        UNSEEN : 'Unseen'\n        FLAGGED: '\\\\Flagged'\n        NOFLAG : 'Noflag'\n","# Waits for the DOM to be ready\nwindow.onload = ->\n\n    window.__DEV__ = window.location.hostname is 'localhost'\n\n    # expose an API\n    window.cozyMails = require './utils/api_utils'\n\n    # use Cozy instance locale or navigator language or \"en\" by default\n    if not window.settings?\n        window.settings = {}\n    locale =\n        window.settings.lang or\n        window.locale or\n        window.navigator.language or\n        \"en\"\n\n    window.cozyMails.setLocale locale\n\n    # init plugins\n    PluginUtils = require \"./utils/plugin_utils\"\n    if not window.settings.plugins?\n        window.settings.plugins = {}\n    PluginUtils.merge window.settings.plugins\n    PluginUtils.init()\n\n    window.cozyMails.setSetting 'plugins', window.settings.plugins\n\n    # Flux initialization (must be called at the begining)\n    AccountStore  = require './stores/account_store'\n    LayoutStore   = require './stores/layout_store'\n    MessageStore  = require './stores/message_store'\n    SettingsStore = require './stores/settings_store'\n    SearchStore   = require './stores/search_store'\n\n    # Routing management\n    Router = require './router'\n    @router = new Router()\n    window.router = @router\n\n    # Binds the router and flux to the React application\n    Application = require './components/application'\n    application = Application router: @router\n    React.renderComponent application, document.body\n    SettingsActionCreator = require './actions/settings_action_creator/'\n    SettingsActionCreator.setRefresh window.settings.refreshInterval\n\n    # Starts the application by initializing the router\n    Backbone.history.start()\n\n    # begin realtime\n    require './utils/socketio_utils'\n\n    # Load addressbook\n    ContactActionCreator = require './actions/contact_action_creator/'\n    ContactActionCreator.searchContact()\n\n","###\n\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't\n    been successful in adding a transpiler. --\n\n    Copyright (c) 2014, Facebook, Inc.\n    All rights reserved.\n\n    This source code is licensed under the BSD-style license found in the\n    LICENSE file in the root directory of this source tree. An additional grant\n    of patent rights can be found in the PATENTS file in the same directory.\n ###\n\ninvariant = require '../invariant'\n\n_lastID = 1\n_prefix = 'ID_'\n\nmodule.exports = Dispatcher = class Dispatcher\n    constructor: ->\n        this._callbacks = {}\n        this._isPending = {}\n        this._isHandled = {}\n        this._isDispatching = false\n        this._pendingPayload = null\n\n    ###\n        Registers a callback to be invoked with every dispatched payload.\n        Returns a token that can be used with `waitFor()`.\n\n        @param {function} callback\n        @return {string}\n    ###\n    register: (callback) ->\n        id = _prefix + _lastID++\n        this._callbacks[id] = callback\n        return id\n\n    ###\n        Removes a callback based on its token.\n\n        @param {string} id\n    ###\n    unregister: (id) ->\n        message = 'Dispatcher.unregister(...): `%s` does not map to a ' + \\\n                  'registered callback.'\n        invariant(\n            this._callbacks[id],\n            message,\n            id\n        )\n        delete this._callbacks[id]\n\n    ###\n        Waits for the callbacks specified to be invoked before continuing\n        execution of the current callback. This method should only be used by a\n        callback in response to a dispatched payload.\n\n        @param {array<string>} ids\n    ###\n    waitFor: (ids) ->\n        invariant(\n            this._isDispatching,\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n        )\n        message = 'Dispatcher.waitFor(...): Circular dependency detected ' + \\\n                  'while waiting for `%s`.'\n        message2 = 'Dispatcher.waitFor(...): `%s` does not map to a ' + \\\n                   'registered callback.'\n        for ii in [0..ids.length - 1] by 1\n            id = ids[ii]\n            if this._isPending[id]\n                invariant(\n                    this._isHandled[id],\n                    message,\n                    id\n                )\n                continue\n\n            invariant(\n                this._callbacks[id],\n                message2,\n                id\n            )\n            this._invokeCallback id\n\n    ###\n        Dispatches a payload to all registered callbacks.\n\n        @param {object} payload\n    ###\n    dispatch: (payload) ->\n        message = 'Dispatch.dispatch(...): Cannot dispatch in the middle ' + \\\n                  'of a dispatch.'\n        invariant(\n            not this._isDispatching,\n            message\n        )\n        this._startDispatching(payload)\n        try\n            for id of this._callbacks\n                if this._isPending[id]\n                    continue\n                this._invokeCallback id\n        finally\n            this._stopDispatching()\n\n    ###\n        Is this Dispatcher currently dispatching.\n\n        @return {boolean}\n    ###\n    isDispatching: -> return this._isDispatching\n\n    ###\n        Call the callback stored with the given id. Also do some internal\n        bookkeeping.\n\n        @param {string} id\n        @internal\n    ###\n    _invokeCallback: (id) ->\n        this._isPending[id] = true\n        this._callbacks[id](this._pendingPayload)\n        this._isHandled[id] = true\n\n    ###\n        Set up bookkeeping needed when dispatching.\n\n        @param {object} payload\n        @internal\n    ###\n    _startDispatching: (payload) ->\n        for id of this._callbacks\n            this._isPending[id] = false\n            this._isHandled[id] = false\n\n        this._pendingPayload = payload\n        this._isDispatching = true\n\n    ###\n        Clear bookkeeping used for dispatching.\n\n        @internal\n    ###\n    _stopDispatching: ->\n        this._pendingPayload = null\n        this._isDispatching = false\n","###\n\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't\n    been successful in adding a transpiler. --\n\n    Copyright (c) 2014, Facebook, Inc.\n    All rights reserved.\n\n    This source code is licensed under the BSD-style license found in the\n    LICENSE file in the root directory of this source tree. An additional grant\n    of patent rights can be found in the PATENTS file in the same directory.\n ###\n\ninvariant = require '../invariant'\n\n_lastID = 1\n_prefix = 'ID_'\n\nmodule.exports = Dispatcher = class Dispatcher\n    constructor: ->\n        this._callbacks = {}\n        this._isPending = {}\n        this._isHandled = {}\n        this._isDispatching = false\n        this._pendingPayload = null\n\n    ###\n        Registers a callback to be invoked with every dispatched payload.\n        Returns a token that can be used with `waitFor()`.\n\n        @param {function} callback\n        @return {string}\n    ###\n    register: (callback) ->\n        id = _prefix + _lastID++\n        this._callbacks[id] = callback\n        return id\n\n    ###\n        Removes a callback based on its token.\n\n        @param {string} id\n    ###\n    unregister: (id) ->\n        message = 'Dispatcher.unregister(...): `%s` does not map to a ' + \\\n                  'registered callback.'\n        invariant(\n            this._callbacks[id],\n            message,\n            id\n        )\n        delete this._callbacks[id]\n\n    ###\n        Waits for the callbacks specified to be invoked before continuing\n        execution of the current callback. This method should only be used by a\n        callback in response to a dispatched payload.\n\n        @param {array<string>} ids\n    ###\n    waitFor: (ids) ->\n        invariant(\n            this._isDispatching,\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n        )\n        message = 'Dispatcher.waitFor(...): Circular dependency detected ' + \\\n                  'while waiting for `%s`.'\n        message2 = 'Dispatcher.waitFor(...): `%s` does not map to a ' + \\\n                   'registered callback.'\n        for ii in [0..ids.length - 1] by 1\n            id = ids[ii]\n            if this._isPending[id]\n                invariant(\n                    this._isHandled[id],\n                    message,\n                    id\n                )\n                continue\n\n            invariant(\n                this._callbacks[id],\n                message2,\n                id\n            )\n            this._invokeCallback id\n\n    ###\n        Dispatches a payload to all registered callbacks.\n\n        @param {object} payload\n    ###\n    dispatch: (payload) ->\n        message = 'Dispatch.dispatch(...): Cannot dispatch in the middle ' + \\\n                  'of a dispatch.'\n        invariant(\n            not this._isDispatching,\n            message\n        )\n        this._startDispatching(payload)\n        try\n            for id of this._callbacks\n                if this._isPending[id]\n                    continue\n                this._invokeCallback id\n        finally\n            this._stopDispatching()\n\n    ###\n        Is this Dispatcher currently dispatching.\n\n        @return {boolean}\n    ###\n    isDispatching: -> return this._isDispatching\n\n    ###\n        Call the callback stored with the given id. Also do some internal\n        bookkeeping.\n\n        @param {string} id\n        @internal\n    ###\n    _invokeCallback: (id) ->\n        this._isPending[id] = true\n        this._callbacks[id](this._pendingPayload)\n        this._isHandled[id] = true\n\n    ###\n        Set up bookkeeping needed when dispatching.\n\n        @param {object} payload\n        @internal\n    ###\n    _startDispatching: (payload) ->\n        for id of this._callbacks\n            this._isPending[id] = false\n            this._isHandled[id] = false\n\n        this._pendingPayload = payload\n        this._isDispatching = true\n\n    ###\n        Clear bookkeeping used for dispatching.\n\n        @internal\n    ###\n    _stopDispatching: ->\n        this._pendingPayload = null\n        this._isDispatching = false\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (__DEV__) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","AppDispatcher = require '../../../app_dispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items\n    # by subclass we don't use `@constructor.name` because it breaks when\n    # mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID][type])?\n                callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            message = \"The store #{@constructor.name} must define a \" + \\\n                      \"`__bindHandlers` method\"\n            throw new Error message\n\n","AppDispatcher = require '../../../app_dispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items\n    # by subclass we don't use `@constructor.name` because it breaks when\n    # mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID][type])?\n                callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            message = \"The store #{@constructor.name} must define a \" + \\\n                      \"`__bindHandlers` method\"\n            throw new Error message\n\n","###\n    Routing component. We let Backbone handling browser stuff\n    and we format the varying parts of the layout.\n\n    URLs are built in the following way:\n        - a first part that represents the first panel\n        - a second part that represents the second panel\n        - if there is just one part, it represents a full width panel\n\n    Since Backbone.Router only handles one part, routes initialization mechanism\n    is overriden so we can post-process the second part of the URL.\n\n    Example: a defined pattern will generates two routes.\n        - `mailbox/a/path/:id`\n        - `mailbox/a/path/:id/*secondPanel`\n\n        Each pattern is actually the pattern itself plus the pattern itself and\n        another pattern.\n###\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = class Router extends Backbone.Router\n\n    patterns: {}\n\n    # default route\n    routes: {}\n\n    previous: null\n    current: null\n\n    # we store a regexified version of each patterns\n    cachedPatterns: []\n\n    initialize: (options) ->\n\n        # defines the routes from the patterns\n        for key, route of @patterns\n\n            # caches each regex' pattern to avoid to recalculate them each time\n            @cachedPatterns.push\n                key: key\n                pattern: @_routeToRegExp route.pattern\n\n            # each pattern has two routes: full-width or with a second panel\n            @routes[route.pattern] = key\n            @routes[\"#{route.pattern}/*secondPanel\"] = key\n\n        # Backbone's magic\n        @_bindRoutes()\n\n        # Updates the LayoutStore for each matched request\n        @on 'route', (name, args) =>\n\n            if name is 'default'\n                name = LayoutActionCreator.getDefaultRoute()\n                args = [null]\n\n            [firstPanelInfo, secondPanelInfo] = @_processSubRouting name, args\n\n            firstAction = @fluxActionFactory firstPanelInfo\n            secondAction = @fluxActionFactory secondPanelInfo\n\n            @previous = @current\n            @current = firstPanel: firstPanelInfo, secondPanel: secondPanelInfo\n\n            if firstAction?\n                firstAction firstPanelInfo, 'first'\n\n            if secondAction?\n                secondAction secondPanelInfo, 'second'\n            @trigger 'fluxRoute', @current\n\n\n    ###\n        Gets the Flux action to execute given a panel info.\n    ###\n    fluxActionFactory: (panelInfo) ->\n\n        fluxAction = null\n        pattern = @patterns[panelInfo?.action]\n\n        if pattern?\n            fluxAction = LayoutActionCreator[pattern.fluxAction]\n\n            if not fluxAction?\n                console.warn \"`#{pattern.fluxAction}` method not found in \" + \\\n                             \"layout actions.\"\n\n            return fluxAction\n\n\n    ###\n        Extracts and matches the second part of the URl if it exists.\n    ###\n    _processSubRouting: (name, args) ->\n        # removes the last argument which is always `null`, not sure why\n        args.pop()\n\n        # next comes the secondPanel url if it exists\n        # or a firstPanel parameter if there is not secondPanel\n        secondPanelString = args.pop()\n\n        # if first panel number of expected params is bigger what is first\n        # it means there are no second panel and that what we got before was a\n        # parameter of the first panel\n        params = @patterns[name].pattern.match(/:[\\w]+/g) or []\n        if params.length > args.length and secondPanelString?\n            args.push secondPanelString\n            secondPanelString = null\n\n        firstPanelParameters = @_arrayToNamedParameters name, args\n\n        # checks all the routes for the second part of the URL\n        route = _.first _.filter @cachedPatterns, (element) ->\n            return element.pattern.test secondPanelString\n\n        # if a route has been found, we retrieve the params' value and format it\n        if route?\n            args = @_extractParameters route.pattern, secondPanelString\n            # remove the last argument which is alway `null`, not sure why\n            args.pop()\n\n            # normalizes the secondPanelInfo and adds default parameters if\n            # needed\n            secondPanelInfo = @_mergeDefaultParameter\n                action: route.key\n                parameters: @_arrayToNamedParameters route.key, args\n        else\n            secondPanelInfo = null\n\n        # normalizes the firstPanelInfo and adds default parameters, if needed\n        firstPanelInfo = @_mergeDefaultParameter\n            action: name\n            parameters: firstPanelParameters\n\n        return [firstPanelInfo, secondPanelInfo]\n\n\n    ###\n        Turns a parameters array into an object of named parameters\n    ###\n    _arrayToNamedParameters: (patternName, parametersArray) ->\n\n        namedParameters = {}\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\n        for paramName, index in parametersName\n            # Removes the initial \":\"\n            unPrefixedParamName = paramName.substr 1\n            namedParameters[unPrefixedParamName] = parametersArray[index]\n\n        return namedParameters\n\n\n    ###\n        Turns a parameters array into an object of named parameters\n    ###\n    _namedParametersToArray: (patternName, namedParameters) ->\n        parametersArray = []\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\n        for paramName, index in parametersName\n            # Removes the initial \":\"\n            unPrefixedParamName = paramName.substr 1\n            parametersArray.push namedParameters[paramName]\n\n        return parametersArray\n\n\n    ###\n        Builds a route from panel information.\n        Two modes:\n            - options has firstPanel and/or secondPanel attributes with the\n              panel(s) information.\n            - options has the panel information along a `direction` attribute\n              that can be `first` or `second`. It's the short version.\n    ###\n    buildUrl: (options) ->\n        # Loads the panel from the options or the current router status to keep\n        # track of current URLs\n        if options.firstPanel? or options.secondPanel?\n            firstPanelInfo = options.firstPanel or @current.firstPanel\n            secondPanelInfo = options.secondPanel or @current.secondPanel\n        else\n            # Handles short version\n            if options.direction?\n                if options.direction is 'first'\n                    firstPanelInfo = options\n                    secondPanelInfo = @current.secondPanel\n                else if options.direction is 'second'\n                    firstPanelInfo = @current.firstPanel\n                    secondPanelInfo = options\n                else\n                    console.warn '`direction` should be `first`, `second`.'\n            else\n                console.warn '`direction` parameter is mandatory when ' + \\\n                             'using short call.'\n\n        # if the `fullWidth` parameter is set, it ignores the second panel info\n        isFirstDirection = options.firstPanel? or options.direction is 'first'\n        if isFirstDirection and options.fullWidth\n            if options.secondPanel? and options.direction is 'second'\n                console.warn \"You shouldn't use the fullWidth option with \" + \\\n                             \"a second panel\"\n            secondPanelInfo = null\n\n        # Actual building\n        firstPart = @_getURLFromRoute firstPanelInfo\n        secondPart = @_getURLFromRoute secondPanelInfo\n\n        url = \"##{firstPart}\"\n        if secondPart? and secondPart.length > 0\n            url = \"#{url}/#{secondPart}\"\n\n        return url\n\n\n    ###\n        Closes a panel given a direction. If a full-width panel is closed,\n        the URL points to the default route.\n    ###\n    buildClosePanelUrl: (direction) ->\n\n        # If a first panel is closed, the second panel becomes full-width.\n        # If a full-width panel is closed, `@current.secondPanel` is null and\n        # the default route is loaded.\n        if direction is 'first' or direction is 'full'\n            panelInfo = _.clone @current.secondPanel\n        else\n            panelInfo = _.clone @current.firstPanel\n\n        if panelInfo?\n            panelInfo.direction = 'first'\n            panelInfo.fullWidth = true\n            return @buildUrl panelInfo\n        else\n            return '#' # loads the default route\n\n\n    # Builds the URL string from a route.\n    _getURLFromRoute: (panel) ->\n\n        # Clones the parameter because we are going to mutate it\n        panel = _.clone panel\n        if panel?.parameters?\n            # _.clone doesn't perform a deep copy\n            panel.parameters = _.clone panel.parameters\n\n        if panel?\n            pattern = @patterns[panel.action].pattern\n\n            # if the parameter is alone, we turn it into an array\n            if panel.parameters? and not (panel.parameters instanceof Array) \\\n            and not (panel.parameters instanceof Object)\n                panel.parameters = [panel.parameters]\n\n            # to ensures BC, if it's an array, we turn it into an object of\n            # named parameters\n            if panel.parameters? and panel.parameters instanceof Array\n                {action, parameters} = panel\n                panel.parameters = @_arrayToNamedParameters action, parameters\n\n            panel = @_mergeDefaultParameter panel\n\n            # we default to empty array if there is no parameter in the route\n            parametersInPattern = pattern.match(/:[\\w]+/gi) or []\n\n            # the pattern is progressively filled with values\n            filledPattern = pattern\n            if panel.parameters\n                for paramInPattern in parametersInPattern\n                    key = paramInPattern.substr 1\n                    paramValue = panel.parameters[key]\n                    filledPattern = filledPattern.replace paramInPattern, \\\n                                                                    paramValue\n\n            return filledPattern\n        else\n            return ''\n\n\n    # Merges defaut parameters into a panel info if there are missing parameters\n    _mergeDefaultParameter: (panelInfo) ->\n        panelInfo = _.clone panelInfo\n        parameters = _.clone panelInfo.parameters or {}\n        # gets default values, if there are\n        if (defaultParameters = @_getDefaultParameters panelInfo.action)?\n\n            # merges the parameters in the relevant place\n            for key, defaultParameter of defaultParameters\n                if not parameters[key]?\n                    parameters[key] = defaultParameter\n\n        panelInfo.parameters = parameters\n\n        return panelInfo\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Loading…\"\n      \"app back\"                : \"Back\"\n      \"app cancel\"              : \"Cancel\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Search…\"\n      \"app alert close\"         : \"Close\"\n      \"app unimplemented\"       : \"Not implemented yet\"\n      \"app error\"               : \"Argh, I'm unable to perform this action,\n                                    please try again\"\n\n      # Compose window\n      \"compose\"                   : \"Compose new email\"\n      \"compose default\"           : 'Hello, how are you doing today?'\n      \"compose from\"              : \"From\"\n      \"compose to\"                : \"To\"\n      \"compose to help\"           : \"Recipients list\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Copy list\"\n      \"compose bcc\"               : \"Bcc\"\n      \"compose bcc help\"          : \"Hidden copy list\"\n      \"compose subject\"           : \"Subject\"\n      \"compose subject help\"      : \"Message subject\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose action draft\"      : \"Save draft\"\n      \"compose action send\"       : \"Send\"\n      \"compose action delete\"     : \"Delete draft\"\n      \"compose toggle cc\"         : \"Cc\"\n      \"compose toggle bcc\"        : \"Bcc\"\n      \"compose error no dest\"     : \"You can not send a message to nobody\"\n      \"compose error no subject\"  : \"Please set a subject\"\n\n      # Menu\n      \"menu compose\"            : \"Compose\"\n      \"menu account new\"        : \"New Mailbox\"\n      \"menu settings\"           : \"Parameters\"\n      \"menu mailbox total\"      : \"%{smart_count} message|||| %{smart_count} messages\"\n      \"menu mailbox unread\"     : \", %{smart_count} unread message ||||, %{smart_count} unread messages \"\n      \"menu mailbox new\"        : \" and %{smart_count} new message|||| and %{smart_count} new messages \"\n\n      # List\n      \"list empty\"              : \"No email in this box.\"\n      \"list search empty\"       : \"No result found for the query \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message in this\n                                  box |||| %{smart_count} messages in this box\"\n      \"list search count\"       : \"%{smart_count} result found. ||||\n                                    %{smart_count} results found.\"\n      \"list filter\"             : \"Filter\"\n      \"list filter all\"         : \"All\"\n      \"list filter unseen\"      : \"Unseen\"\n      \"list filter flagged\"     : \"Important\"\n      \"list sort\"               : \"Sort\"\n      \"list sort date\"          : \"Date\"\n      \"list sort subject\"       : \"Subject\"\n      \"list option compact\"     : \"Compact\"\n      \"list next page\"          : \"More messages\"\n      \"list end\"                : \"This is the end of the road\"\n      \"list mass no message\"    : \"No message selected\"\n      \"list delete confirm\"     : \"Do you really want to delete %{nb} messages?\"\n\n      # Mail\n      \"mail receivers\"          : \"To: \"\n      \"mail receivers cc\"       : \"Cc: \"\n      \"mail action reply\"       : \"Reply\"\n      \"mail action reply all\"   : \"Reply all\"\n      \"mail action forward\"     : \"Forward\"\n      \"mail action delete\"      : \"Delete\"\n      \"mail action mark\"        : \"Mark as…\"\n      \"mail action copy\"        : \"Copy…\"\n      \"mail action move\"        : \"Move…\"\n      \"mail action more\"        : \"More…\"\n      \"mail action headers\"     : \"Headers\"\n      \"mail mark spam\"          : \"Spam\"\n      \"mail mark nospam\"        : \"No spam\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Not important\"\n      \"mail mark read\"          : \"Read\"\n      \"mail mark unread\"        : \"Unread\"\n      \"mail confirm delete\"     : \"Do you really want to delete message “%{subject}”?\"\n      \"mail action conversation delete\" : \"Delete conversation\"\n      \"mail action conversation move\"   : \"Move conversation\"\n      \"mail action conversation seen\"   : \"Mark conversation as read\"\n      \"mail action conversation unseen\" : \"Mark conversation as unread\"\n\n      # Account\n      \"account new\"                 : \"New account\"\n      \"account edit\"                : \"Edit account\"\n      \"account add\"                 : \"Add\"\n      \"account save\"                : \"Save\"\n      \"account label\"               : \"Label\"\n      \"account name short\"          : \"A short mailbox name\"\n      \"account user name\"           : \"Your name\"\n      \"account user fullname\"       : \"Your name, as it will be displayed\"\n      \"account address\"             : \"Email address\"\n      \"account address placeholder\" : \"Your email address\"\n      \"account password\"            : \"Password\"\n      \"account sending server\"      : \"Sending server\"\n      \"account receiving server\"    : \"IMAP server\"\n      \"account port\"                : \"Port\"\n      \"account SSL\"                 : \"Use SSL\"\n      \"account TLS\"                 : \"Use STARTTLS\"\n      \"account remove\"              : \"Remove\"\n      \"account remove confirm\"      : \"Do you really want to remove this\n                                        account?\"\n      \"account draft mailbox\"       : \"Draft box\"\n      \"account sent mailbox\"        : \"Sent box\"\n      \"account trash mailbox\"       : \"Trash\"\n      \"account mailboxes\"           : \"Folders\"\n      \"account newmailbox label\"    : \"New Folder\"\n      \"account newmailbox placeholder\" : \"Name\"\n      \"account newmailbox parent\"   : \"Parent:\"\n      \"account confirm delbox\"      : \"Do you really want to delete this box\n                                        and everything in it?\"\n      \"account tab account\"         : \"Account\"\n      \"account tab mailboxes\"       : \"Folders\"\n      \"account errors\"              : \"Some data are missing or invalid\"\n      \"account type\"                : \"Account type\"\n      \"account updated\"             : \"Account updated\"\n      \"account creation ok\"         : \"Yeah! The account has been successfully\n        created. Now select the mailboxes you want to see in the menu\"\n      \"account refreshed\"           : \"Account refreshed\"\n      \"account identifiers\"         : \"Identification\"\n      \"account actions\"             : \"Actions\"\n      \"account danger zone\"         : \"Danger Zone\"\n      \"mailbox create ok\"           : \"Folder created\"\n      \"mailbox create ko\"           : \"Error creating folder\"\n      \"mailbox update ok\"           : \"Folder updated\"\n      \"mailbox update ko\"           : \"Error updating folder\"\n      \"mailbox delete ok\"           : \"Folder deleted\"\n      \"mailbox delete ko\"           : \"Error deleting folder\"\n      \"mailbox title edit\"          : \"Rename folder\"\n      \"mailbox title delete\"        : \"Delete folder\"\n      \"mailbox title edit save\"     : \"Save\"\n      \"mailbox title edit cancel\"   : \"Cancel\"\n      \"mailbox title add\"           : \"Add new folder\"\n      \"mailbox title add cancel\"    : \"Cancel\"\n      \"mailbox title favorite\"      : \"Folder is displayed\"\n      \"mailbox title not favorite\"  : \"Folder not displayed\"\n      \"mailbox title total\"         : \"Total\"\n      \"mailbox title unread\"        : \"Unread\"\n      \"mailbox title new\"           : \"New\"\n      \"config error auth\"           : \"Wrong connection parameters\"\n      \"config error imapPort\"       : \"Wrong IMAP port\"\n      \"config error imapServer\"     : \"Wrong IMAP server\"\n      \"config error imapTLS\"        : \"Wrong IMAP TLS\"\n      \"config error smtpPort\"       : \"Wrong SMTP Port\"\n      \"config error smtpServer\"     : \"Wrong SMTP Server\"\n      \"config error nomailboxes\"    : \"No folder in this account, please create\n                                        one\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Message sent\"\n      \"message action sent ko\"      : \"Error sending message: \"\n      \"message action draft ok\"     : \"Message saved\"\n      \"message action draft ko\"     : \"Error saving message: \"\n      \"message action delete ok\"    : \"Message “%{subject}” deleted\"\n      \"message action delete ko\"    : \"Error deleting message: \"\n      \"message action move ok\"      : \"Message moved\"\n      \"message action move ko\"      : \"Error moving message: \"\n      \"message action mark ok\"      : \"Message marked\"\n      \"message action mark ko\"      : \"Error marking message: \"\n      \"conversation move ok\"        : \"Conversation moved\"\n      \"conversation move ko\"        : \"Error moving conversation\"\n      \"conversation delete ok\"      : \"Conversation deleted\"\n      \"conversation delete ko\"      : \"Error deleting conversation\"\n      \"conversation seen ok\"        : \"Conversation marked as read\"\n      \"conversation seen ko\"        : \"Error\"\n      \"conversation unseen ok\"      : \"Conversation marked as unread\"\n      \"conversation unseen ko\"      : \"Error\"\n      \"message images warning\"      : \"Display of images inside message has\n                                        been blocked\"\n      \"message images display\"      : \"Display images\"\n      \"message html display\"        : \"Display HTML\"\n      \"message delete no trash\"     : \"Please select a Trash folder\"\n      \"message undelete\"            : \"Undo message deletion\"\n      \"message undelete ok\"         : \"Message undeleted\"\n      \"message undelete error\"      : \"Undo not available\"\n\n      # Settings\n      \"settings title\"             : \"Settings\"\n      \"settings button save\"       : \"Save\"\n      \"settings label mpp\"         : \"Messages per page\"\n      \"settings label refresh\"     : \"Check for new messages every…\n                                        (in minutes)\"\n      \"settings plugins\"           : \"Add ons\"\n      \"settings label composeInHTML\"        : \"Rich message editor\"\n      \"settings label displayConversation\"  : \"Display conversations\"\n      \"settings label displayPreview\"       : \"Display message preview\"\n      \"settings label messageDisplayHTML\"   : \"Display message in HTML\"\n      \"settings label messageDisplayImages\" : \"Display images inside messages\"\n      \"settings label messageConfirmDelete\" : \"Confirm before deleting a message\"\n      \"settings label listStyle\"            : \"Message list style\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Compact\"\n      \"settings lang\"             : \"Language\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n\n      # File picker\n      \"picker drop here\"           : \"Drop files here\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Pick one\"\n      \"mailbox pick null\"          : \"No box for this\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Refreshing %{account}'\n      \"task box-fetch\"             : 'Refreshing %{box}'\n      \"task apply-diff-fetch\"      : 'Fetching mails from %{box} of %{account}'\n      \"task apply-diff-remove\"     : 'Deleting mails from %{box} of %{account}'\n      \"task recover-uidvalidity\"   : 'Analysing'\n      \"there were errors\"          : '%{smart_count} error. |||| %{smart_count}\n                                        errors.'\n      \"modal please report\"        : \"Please transmit this information to cozy.\"\n      \"modal please contribute\"    : \"Please contribute\"\n\n      # Validation\n      \"validate must not be empty\" : \"Mandatory field\"\n\n      # Toast\n      \"toast hide\"      : \"Hide alerts\"\n      \"toast show\"      : \"Display alerts\"\n      \"toast close all\" : \"Close all alerts\"\n\n      # Contacts\n      \"contact form\"             : \"Select contacts\"\n      \"contact form placeholder\" : \"contact name\"\n      \"contact create success\"   : \"%{contact} has been added to your contacts\"\n      \"contact create error\"     : \"Error adding to your contacts : {error}\"\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Chargement…\"\n      \"app back\"                : \"Retour\"\n      \"app cancel\"              : \"Annuler\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Rechercher…\"\n      \"app alert close\"         : \"Fermer\"\n      \"app unimplemented\"       : \"Non implémenté\"\n      \"app error\"               : \"Oups, une erreur est survenue,\n                                    veuillez ré-essayer\"\n\n      # Compose window\n      \"compose\"                   : \"Écrire un nouveau message\"\n      \"compose default\"           : \"Bonjour, comment ça va ?\"\n      \"compose from\"              : \"De\"\n      \"compose to\"                : \"À\"\n      \"compose to help\"           : \"Liste des destinataires principaux\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Liste des destinataires en copie\"\n      \"compose bcc\"               : \"Cci\"\n      \"compose bcc help\"          : \"Liste des destinataires en copie cachée\"\n      \"compose subject\"           : \"Objet\"\n      \"compose subject help\"      : \"Objet du message\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose action draft\"      : \"Enregistrer en tant que brouillon\"\n      \"compose action send\"       : \"Envoyer\"\n      \"compose action delete\"     : \"Supprimer le brouillon\"\n      \"compose toggle cc\"         : \"Copie à\"\n      \"compose toggle bcc\"        : \"Copie cachée à\"\n      \"compose error no dest\"     : \"Vous n'avez pas saisi de destinataires\"\n      \"compose error no subject\"  : \"Vous n'avez pas saisi de sujet\"\n\n      # Menu\n      \"menu compose\"            : \"Nouveau\"\n      \"menu account new\"        : \"Ajouter un compte\"\n      \"menu settings\"           : \"Paramètres\"\n      \"menu mailbox total\"      : \"%{smart_count} message |||| %{smart_count} messages \"\n      \"menu mailbox unread\"     : \" dont %{smart_count} non lu |||| dont %{smart_count} non lus \"\n      \"menu mailbox new\"        : \" et %{smart_count} nouveaux |||| et %{smart_count} nouveaux \"\n\n      # List\n      \"list empty\"              : \"Pas d'email dans cette boîte..\"\n      \"list search empty\"       : \"Aucun résultat trouvé pour la requête\n                                    \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message dans cette boite ||||\n                                    %{smart_count} messages dans cette boite\"\n      \"list search count\"       : \"%{smart_count} résultat trouvé. ||||\n                                    %{smart_count} résultats trouvés.\"\n      \"list filter\"             : \"Filtrer\"\n      \"list filter all\"         : \"Tous\"\n      \"list filter unseen\"      : \"Non lus\"\n      \"list filter flagged\"     : \"Importants\"\n      \"list sort\"               : \"Trier\"\n      \"list sort date\"          : \"Date\"\n      \"list sort subject\"       : \"Sujet\"\n      \"list option compact\"     : \"Compact\"\n      \"list next page\"          : \"Davantage de messages\"\n      \"list end\"                : \"FIN\"\n      \"list mass no message\"    : \"Aucun message sélectionné\"\n      \"list delete confirm\"     : \"Voulez-vous vraiment supprimer %{nb} messages ?\"\n\n      # Mail\n      \"mail receivers\"          : \"À \"\n      \"mail receivers cc\"       : \"Copie \"\n      \"mail action reply\"       : \"Répondre\"\n      \"mail action reply all\"   : \"Répondre à tous\"\n      \"mail action forward\"     : \"Transférer\"\n      \"mail action delete\"      : \"Supprimer\"\n      \"mail action mark\"        : \"Marquer comme\"\n      \"mail action copy\"        : \"Copier…\"\n      \"mail action move\"        : \"Déplacer…\"\n      \"mail action more\"        : \"Plus…\"\n      \"mail action headers\"     : \"Entêtes\"\n      \"mail mark spam\"          : \"Pourriel\"\n      \"mail mark nospam\"        : \"Légitime\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Normal\"\n      \"mail mark read\"          : \"Lu\"\n      \"mail mark unread\"        : \"Non lu\"\n      \"mail confirm delete\"     : \"Voulez-vous vraiment supprimer le message\n                                    « %{subject} » ?\"\n      \"mail action conversation delete\" : \"Supprimer la conversation\"\n      \"mail action conversation move\"   : \"Déplacer la conversation\"\n      \"mail action conversation seen\"   : \"Marquer la conversation comme lue\"\n      \"mail action conversation unseen\" : \"Marquer la conversation comme\n                                            non lue\"\n\n      # Account\n      \"account new\"                 : \"Nouveau compte\"\n      \"account edit\"                : \"Modifier le compte\"\n      \"account add\"                 : \"Créer\"\n      \"account save\"                : \"Enregistrer\"\n      \"account label\"               : \"Nom\"\n      \"account name short\"          : \"Nom abrégé\"\n      \"account user name\"           : \"Votre nom\"\n      \"account user fullname\"       : \"Votre nom, tel qu'il sera affiché\"\n      \"account address\"             : \"Adresse\"\n      \"account address placeholder\" : \"Votre adresse électronique\"\n      \"account password\"            : \"Mot de passe\"\n      \"account sending server\"      : \"Serveur sortant\"\n      \"account receiving server\"    : \"Serveur IMAP\"\n      \"account port\"                : \"Port\"\n      \"account SSL\"                 : \"Utiliser SSL\"\n      \"account TLS\"                 : \"Utiliser STARTTLS\"\n      \"account remove\"              : \"Supprimer\"\n      \"account remove confirm\"      : \"Voulez-vous vraiment supprimer\n                                        ce compte ?\"\n      \"account draft mailbox\"       : \"Enregistrer les brouillons dans\"\n      \"account sent mailbox\"        : \"Enregistrer les messages envoyés dans\"\n      \"account trash mailbox\"       : \"Corbeille\"\n      \"account mailboxes\"           : \"Dossiers\"\n      \"account newmailbox label\"    : \"Nouveaux dossier\"\n      \"account newmailbox placeholder\" : \"Nom\"\n      \"account newmailbox parent\"   : \"Créer sous\"\n      \"account confirm delbox\"      : \"Voulez-vous vraiment supprimer ce\n                                        dossier et tout son contenu ?\"\n      \"account tab account\"         : \"Compte\"\n      \"account tab mailboxes\"       : \"Dossiers\"\n      \"account errors\"              : \"Certaines informations manquent ou\n                                        sont incorrectes\"\n      \"account type\"                : \"Type de compte\"\n      \"account updated\"             : \"Modification enregistrée\"\n      \"account refreshed\"           : \"Actualisé\"\n      \"account creation ok\"         : \"Youpi, le compte a été créé !\n        Sélectionnez à présent les dossiers que vous voulez voir\n        apparaitre dans le menu\"\n      \"account identifiers\"         : \"Identification\"\n      \"account danger zone\"         : \"Zone dangereuse\"\n      \"account actions\"             : \"Actions\"\n      \"mailbox create ok\"           : \"Dossier créé\"\n      \"mailbox create ko\"           : \"Erreur de création du dossier\"\n      \"mailbox update ok\"           : \"Dossier mis à jour\"\n      \"mailbox update ko\"           : \"Erreur de mise à jour\"\n      \"mailbox delete ok\"           : \"Dossier supprimé\"\n      \"mailbox delete ko\"           : \"Erreur de suppression du dossier\"\n      \"mailbox title edit\"          : \"Renommer le dossier\"\n      \"mailbox title delete\"        : \"Supprimer le dossier\"\n      \"mailbox title edit save\"     : \"Enregistrer\"\n      \"mailbox title edit cancel\"   : \"Annuler\"\n      \"mailbox title add\"           : \"Créer un dossier\"\n      \"mailbox title add cancel\"    : \"Annuler\"\n      \"mailbox title favorite\"      : \"Dossier affiché\"\n      \"mailbox title not favorite\"  : \"Dossier non affiché\"\n      \"mailbox title total\"         : \"Total\"\n      \"mailbox title unread\"        : \"Non lus\"\n      \"mailbox title new\"           : \"Nouveaux\"\n      \"config error auth\"           : \"Impossible de se connecter avec ces\n                                        paramètres\"\n      \"config error imapPort\"       : \"Port du serveur IMAP invalide\"\n      \"config error imapServer\"     : \"Serveur IMAP invalide\"\n      \"config error imapTLS\"        : \"Erreur IMAP TLS\"\n      \"config error smtpPort\"       : \"Port du serveur d'envoi invalide\"\n      \"config error smtpServer\"     : \"Serveur d'envoi invalide\"\n      \"config error nomailboxes\"    : \"Ce compte n'a pas encore de dossier,\n                                        commencez par en créer\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Message envoyé !\"\n      \"message action sent ko\"      : \"Une erreur est survenue : \"\n      \"message action draft ok\"     : \"Message sauvegardé !\"\n      \"message action draft ko\"     : \"Une erreur est survenue : \"\n      \"message action delete ok\"    : \"Message « %{subject} » supprimé\"\n      \"message action delete ko\"    : \"Impossible de supprimer le message : \"\n      \"message action move ok\"      : \"Message déplacé\"\n      \"message action move ko\"      : \"Le déplacement a échoué\"\n      \"message action mark ok\"      : \"Ok\"\n      \"message action mark ko\"      : \"L'opération a échoué\"\n      \"conversation move ok\"        : \"Conversation déplacée\"\n      \"conversation move ko\"        : \"L'opération a échoué\"\n      \"conversation delete ok\"      : \"Conversation supprimée\"\n      \"conversation delete ko\"      : \"L'opération a échoué\"\n      \"conversation seen ok\"        : \"Ok\"\n      \"conversation seen ko\"        : \"L'opération a échoué\"\n      \"conversation unseen ok\"      : \"Ok\"\n      \"conversation unseen ko\"      : \"L'opération a échoué\"\n      \"message images warning\"      : \"L'affichage des images du message a été\n                                        bloqué\"\n      \"message images display\"      : \"Afficher les images\"\n      \"message html display\"        : \"Afficher en HTML\"\n      \"message delete no trash\"     : \"Choisissez d'abord un dossier Corbeille\"\n      \"message undelete\"            : \"Annuler la suppression\"\n      \"message undelete ok\"         : \"Message restauré\"\n      \"message undelete error\"      : \"Impossible d'annuler l'action\"\n\n      # Settings\n      \"settings title\"             : \"Paramètres\"\n      \"settings button save\"       : \"Enregistrer\"\n      \"settings label mpp\"         : \"Nombre de messages par page\"\n      \"settings label refresh\"     : \"Vérifier les nouveaux messages toutes\n                                        les… (en minutes)\"\n      \"settings plugins\"           : \"Modules complémentaires\"\n      \"settings label composeInHTML\"        : \"Éditeur riche\"\n      \"settings label displayConversation\"  : \"Afficher les conversations\"\n      \"settings label displayPreview\"       : \"Prévisualiser les messages\"\n      \"settings label messageDisplayHTML\"   : \"Afficher les messages en HTML\"\n      \"settings label messageDisplayImages\" : \"Afficher les images\"\n      \"settings label messageConfirmDelete\" : \"Demander confirmation avant\n                                                de supprimer un message\"\n      \"settings label listStyle\"            : \"Affichage de la liste des messages\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Compact\"\n      \"settings lang\"             : \"Langue\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n\n      # File picker\n      \"picker drop here\"           : \"Déposer les fichiers ici\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Choisissez une boite\"\n      \"mailbox pick null\"          : \"Pas de boite pour ça\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Rafraichissement %{account}'\n      \"task box-fetch\"             : 'Rafraichissement %{box}'\n      \"task apply-diff-fetch\"      : 'Téléchargement des messages du dossier\n                                        %{box} de %{account}'\n      \"task apply-diff-remove\"     : 'Suppression des messages du dossier\n                                        %{box} de %{account}'\n      \"task recover-uidvalidity\"   : 'Analyse du compte'\n      \"there were errors\"          : '%{smart_count} erreur. ||||\n                                        %{smart_count} erreurs.'\n      \"modal please report\"        : \"Merci de bien vouloir transmettre ces\n                                        informations à cozy.\"\n      \"modal please contribute\"    : \"Merci de contribuer\"\n\n      # Validation\n      \"validate must not be empty\" : \"Ce champ doit être renseigné\"\n\n      # Toast\n      \"toast hide\"      : \"Masquer les alertes\"\n      \"toast show\"      : \"Afficher les alertes\"\n      \"toast close all\" : \"Fermer toutes les alertes\"\n\n      # Contacts\n      \"contact form\"             : \"Sélectionnez des contacts\"\n      \"contact form placeholder\" : \"Nom\"\n      \"contact create success\"   : \"%{contact} a été ajouté(e) à vos contacts\"\n      \"contact create error\"     : \"L'ajout à votre carnet d'adresse a\n                                        échoué : {error}\"\n","###\n    Router mixin.\n    Aliases `buildUrl` and `buildClosePanelUrl`\n###\n\nrouter = window.router\n\nmodule.exports =\n\n    buildUrl: (options) ->\n        router.buildUrl.call router, options\n\n    buildClosePanelUrl: (direction) ->\n        router.buildClosePanelUrl.call router, direction\n\n    # Builds the URL (based on options) and redirect to it.\n    # If `options` is a string, it will be considered as the target URL.\n    redirect: (options) ->\n        url = if typeof options is \"string\" then options else @buildUrl options\n        router.navigate url, true\n\n\n","module.exports = StoreWatchMixin = (stores) ->\n\n    return {\n        componentDidMount: ->\n            stores.forEach (store) => store.on 'change', @_setStateFromStores\n\n        componentWillUnmount: ->\n            stores.forEach (store) =>\n                store.removeListener 'change', @_setStateFromStores\n\n        getInitialState: -> return @getStateFromStores()\n\n        _setStateFromStores: -> @setState @getStateFromStores()\n    }","PanelRouter = require './libs/panel_router'\n\nAccountStore = require './stores/account_store'\n\nmodule.exports = class Router extends PanelRouter\n\n    patterns:\n        'account.config':\n            pattern: 'account/:accountID/config'\n            fluxAction: 'showConfigAccount'\n        'account.new':\n            pattern: 'account/new'\n            fluxAction: 'showCreateAccount'\n        'account.mailbox.messages.full':\n            pattern: 'account/:accountID/box/:mailboxID/sort/:sort/' +\n                        'flag/:flag/before/:before/after/:after/' +\n                        'page/:pageAfter'\n            fluxAction: 'showMessageList'\n        'account.mailbox.messages':\n            pattern: 'account/:accountID/mailbox/:mailboxID'\n            fluxAction: 'showMessageList'\n\n        'search':\n            pattern: 'search/:query/page/:page'\n            fluxAction: 'showSearch'\n\n        'message':\n            pattern: 'message/:messageID'\n            fluxAction: 'showMessage'\n        'conversation':\n            pattern: 'conversation/:messageID'\n            fluxAction: 'showConversation'\n        'compose':\n            pattern: 'compose'\n            fluxAction: 'showComposeNewMessage'\n        'edit':\n            pattern: 'edit/:messageID'\n            fluxAction: 'showComposeMessage'\n\n        'settings':\n            pattern: 'settings'\n            fluxAction: 'showSettings'\n\n        'default':\n            pattern: ''\n            fluxAction: ''\n\n    # default route\n    routes: '': 'default'\n\n    # Determines and gets the default parameters regarding a specific action\n    _getDefaultParameters: (action) ->\n        switch action\n            when 'account.mailbox.messages'\n            ,    'account.mailbox.messages.full'\n                defaultAccountID = AccountStore.getDefault()?.get 'id'\n                defaultMailbox = AccountStore.getDefaultMailbox defaultAccountID\n                defaultParameters =\n                    accountID: defaultAccountID\n                    after: \"-\"\n                    before: \"-\"\n                    flag:  \"-\"\n                    mailboxID: defaultMailbox?.get 'id'\n                    pageAfter: \"-\"\n                    sort:  \"-\"\n            when 'account.config'\n                defaultAccount = AccountStore.getDefault()?.get 'id'\n                defaultParameters = accountID: defaultAccount\n            when 'search'\n                defaultParameters =\n                    query: \"\"\n                    page: 1\n            else\n                defaultParameters = null\n        return defaultParameters\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nAccountTranslator = require '../utils/translators/account_translator'\n\nclass AccountStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    # Creates an OrderedMap of accounts\n    _accounts = Immutable.Sequence window.accounts\n\n        # sort first\n        .sort (mb1, mb2) ->\n            if mb1.label > mb2.label then return 1\n            else if mb1.label < mb2.label then return -1\n            else return 0\n\n        # sets account ID as index\n        .mapKeys (_, account) -> return account.id\n\n        # makes account object an immutable Map\n        .map (account) -> AccountTranslator.toImmutable account\n\n        .toOrderedMap()\n\n    _selectedAccount   = null\n    _selectedMailbox   = null\n    _newAccountWaiting = false\n    _newAccountError   = null\n\n\n    _setCurrentAccount: (account) ->\n        _selectedAccount = account\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        onUpdate = (rawAccount) =>\n            account = AccountTranslator.toImmutable rawAccount\n            _accounts = _accounts.set account.get('id'), account\n            @_setCurrentAccount account\n            _newAccountWaiting = false\n            _newAccountError   = null\n            @emit 'change'\n\n        handle ActionTypes.ADD_ACCOUNT, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            if value.accountID?\n                @_setCurrentAccount(_accounts.get(value.accountID) or null)\n            else\n                @_setCurrentAccount(null)\n            if value.mailboxID?\n                _selectedMailbox = _selectedAccount?.get('mailboxes')?.get(value.mailboxID) or null\n            else\n                _selectedMailbox = null\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_WAITING, (payload) ->\n            _newAccountWaiting = payload\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_ERROR, (error) ->\n            _newAccountWaiting = false\n            _newAccountError = error\n            @emit 'change'\n\n        handle ActionTypes.EDIT_ACCOUNT, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_CREATE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_UPDATE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_DELETE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            _accounts = _accounts.delete accountID\n            @_setCurrentAccount @getDefault()\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getAll: -> return _accounts\n\n    getByID: (accountID) ->\n        return _accounts.get accountID\n\n    getByLabel: (label) ->\n        _accounts.find (account) -> account.get('label') is label\n\n    getDefault: -> return _accounts.first() or null\n\n    getDefaultMailbox: (accountID) ->\n\n        account = _accounts.get(accountID) or @getDefault()\n        return null unless account\n\n        mailboxes = account.get('mailboxes')\n        mailbox = mailboxes.filter (mailbox) ->\n            return mailbox.get('label').toLowerCase() is 'inbox'\n        if mailbox.count() isnt 0\n            return mailbox.first()\n        else\n            favorites = account.get('favorites')\n            defaultID = if favorites? then favorites[0]\n\n            return if defaultID then mailboxes.get defaultID\n            else mailboxes.first()\n\n    getSelected: -> return _selectedAccount\n\n    getSelectedMailboxes: ->\n\n        return Immutable.OrderedMap.empty() unless _selectedAccount?\n\n        result = Immutable.OrderedMap()\n        _selectedAccount.get('mailboxes').forEach (data) ->\n            mailbox = Immutable.Map data\n            result = result.set mailbox.get('id'), mailbox\n            return true\n\n        return result\n\n\n    getSelectedMailbox: (selectedID) ->\n        mailboxes = @getSelectedMailboxes()\n        if selectedID?\n            return mailboxes.get selectedID\n        else\n            return mailboxes.first()\n\n    getSelectedFavorites: ->\n\n        mailboxes = @getSelectedMailboxes()\n        ids = _selectedAccount?.get 'favorites'\n\n        if ids?\n            return mailboxes\n                .filter (box, key) -> key in ids\n                .toOrderedMap()\n        else\n            return mailboxes\n                .toOrderedMap()\n\n    getError: -> return _newAccountError\n\n    isWaiting: -> return _newAccountWaiting\n\n\nmodule.exports = new AccountStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass ContactStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # all known contacts\n    _contacts = Immutable.OrderedMap.empty()\n    # result of last search\n    _results  = Immutable.OrderedMap.empty()\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_CONTACT_RESULTS, (rawResults) ->\n            _results = Immutable.OrderedMap.empty()\n            if rawResults?\n                if not Array.isArray rawResults\n                    rawResults = [ rawResults ]\n                convert = (map) ->\n                    rawResults.forEach (rawResult) ->\n                        rawResult.datapoints.forEach (point) ->\n                            if point.name is 'email'\n                                rawResult.address = point.value\n                            if point.name is 'avatar'\n                                rawResult.avatar = point.value\n                        delete rawResult.docType\n                        contact = Immutable.Map rawResult\n                        map.set contact.get('address'), contact\n                _results  = _results.withMutations convert\n                _contacts = _contacts.withMutations convert\n\n            @emit 'change'\n\n        handle ActionTypes.CONTACT_LOCAL_SEARCH, (query) ->\n            query = query.toLowerCase()\n            re = new RegExp query, 'i'\n            _results = _contacts.filter (contact) ->\n                obj  = contact.toObject()\n                full = ''\n                Object.keys(obj).forEach (key) ->\n                    if typeof obj[key] is 'string'\n                        full += obj[key]\n                return re.test full\n            .toOrderedMap()\n\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getResults: ->\n        return _results\n\n    getQuery: -> return _query\n\n    getAvatar: (address) ->\n        return _contacts.get(address)?.get 'avatar'\n\nmodule.exports = new ContactStore()\n\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass LayoutStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _responsiveMenuShown = false\n    _alert =\n        level: null\n        message: null\n\n    _tasks = Immutable.OrderedMap()\n\n    _shown = true\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SHOW_MENU_RESPONSIVE, ->\n            _responsiveMenuShown = true\n            @emit 'change'\n\n        handle ActionTypes.HIDE_MENU_RESPONSIVE, ->\n            _responsiveMenuShown = false\n            @emit 'change'\n\n        handle ActionTypes.DISPLAY_ALERT, (value) ->\n            _alert.level   = value.level\n            _alert.message = value.message\n            @emit 'change'\n\n        handle ActionTypes.HIDE_ALERT, (value) ->\n            _alert.level   = null\n            _alert.message = null\n            @emit 'change'\n\n        handle ActionTypes.REFRESH, ->\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_TASK_UPDATE, (task) ->\n            task = Immutable.Map task\n            id = task.get('id')\n            _tasks = _tasks.set(id, task).toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_TASK_DELETE, (taskid) ->\n            _tasks = _tasks.remove(taskid).toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.TOASTS_SHOW, ->\n            _shown = true\n            @emit 'change'\n\n        handle ActionTypes.TOASTS_HIDE, ->\n            _shown = false\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    isMenuShown: -> return _responsiveMenuShown\n\n    getAlert: -> return _alert\n\n    getTasks: -> return _tasks\n\n    isShown: -> return _shown\n\nmodule.exports = new LayoutStore()\n","Store = require '../libs/flux/store/store'\nContactStore  = require './contact_store'\nAppDispatcher = require '../app_dispatcher'\n\nAccountStore = require './account_store'\nSocketUtils = require '../utils/socketio_utils'\n\n{ActionTypes, MessageFlags, MessageFilter} =\n        require '../constants/app_constants'\n\nclass MessageStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _sortField   = 'date'\n    _sortOrder   = 1\n    #_quickFilter = ''\n    __getSortFunction = (criteria, order) ->\n        sortFunction = (message1, message2) ->\n            if typeof message1.get is 'function'\n                val1 = message1.get criteria\n                val2 = message2.get criteria\n            else\n                val1 = message1[criteria]\n                val2 = message2[criteria]\n            if val1 > val2 then return -1 * order\n            else if val1 < val2 then return 1 * order\n            else return 0\n\n    __sortFunction = __getSortFunction 'date', 1\n\n    # Creates an OrderedMap of messages\n    _messages = Immutable.Sequence()\n\n        # sort first\n        .sort __sortFunction\n\n        # sets message ID as index\n        .mapKeys (_, message) -> message.id\n\n        # makes message object an immutable Map\n        .map (message) -> Immutable.fromJS message\n        .toOrderedMap()\n\n    _filter       = null\n    _params       = null\n    _currentMessages = Immutable.Sequence()\n    _currentID       = null\n    _prevAction      = null\n\n\n    initFilters = ->\n        _filter       = '-'\n        _params       =\n            sort: '+date'\n\n    initFilters()\n\n    onReceiveRawMessage = (message, silent = false) ->\n        # create or update\n        if not message.attachments?\n            message.attachments = []\n        if not message.date?\n            message.date = new Date().toISOString()\n        if not message.createdAt?\n            message.createdAt = message.date\n        # Add messageId to every attachment\n\n        message.hasAttachments = message.attachments.length > 0\n        message.attachments = message.attachments.map (file) ->\n            Immutable.Map file\n        message.attachments = Immutable.Vector.from message.attachments\n\n        if not message.flags?\n            message.flags = []\n\n        # message loaded from fixtures for test purpose have a docType\n        # that may cause some troubles\n        delete message.docType\n        message = Immutable.Map message\n        _messages = _messages.set message.get('id'), message\n\n        @emit 'change' unless silent\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGE, onReceiveRawMessage\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGES, (messages) ->\n\n            SocketUtils.changeRealtimeScope messages.mailboxID\n\n            if messages.links?\n                if messages.links.next?\n                    _params = {}\n                    next   = decodeURIComponent(messages.links.next)\n                    url    = 'http://localhost' + next\n                    url.split('?')[1].split('&').forEach (p) ->\n                        [key, value] = p.split '='\n                        value = '-' if value is ''\n                        _params[key] = value\n\n                SocketUtils.changeRealtimeScope messages.mailboxID,\n                    _params.pageAfter\n\n            if messages.count? and messages.mailboxID?\n                messages = messages.messages.sort __sortFunction\n\n            onReceiveRawMessage message, true for message in messages\n            @emit 'change'\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            AppDispatcher.waitFor [AccountStore.dispatchToken]\n            messages = @getMessagesByAccount accountID\n            _messages = _messages.withMutations (map) ->\n                messages.forEach (message) -> map.remove message.get 'id'\n\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_SEND, (message) ->\n            onReceiveRawMessage message, true\n\n        handle ActionTypes.MESSAGE_DELETE, (message) ->\n            onReceiveRawMessage message, true\n\n        handle ActionTypes.MESSAGE_BOXES, (message) ->\n            onReceiveRawMessage message, true\n\n        handle ActionTypes.MESSAGE_FLAG, (message) ->\n            onReceiveRawMessage message, true\n\n        handle ActionTypes.SELECT_ACCOUNT, ->\n            initFilters()\n\n        handle ActionTypes.LIST_FILTER, (filter) ->\n            _messages  = _messages.clear()\n            if _filter is filter\n                _filter = '-'\n            else\n                _filter = filter\n            _params =\n                after: '-'\n                flag: _filter\n                before: '-'\n                pageAfter: '-'\n                sort : _params.sort\n\n        handle ActionTypes.LIST_QUICK_FILTER, (filter) ->\n            #_quickFilter = filter\n            #@emit 'change'\n\n        handle ActionTypes.LIST_SORT, (sort) ->\n            _messages    = _messages.clear()\n            _sortField   = sort.field\n            currentField = _params.sort.substr(1)\n            currentOrder = _params.sort.substr(0, 1)\n            if currentField is sort.field\n                newOrder   = if currentOrder is '+' then '-' else '+'\n                _sortOrder = -1 * _sortOrder\n            else\n                _sortOrder = -1\n                if sort.field is 'date'\n                    newOrder   = '-'\n                else\n                    newOrder   = '+'\n            _params =\n                after: '-'\n                flag: _params.flag\n                before: '-'\n                pageAfter: '-'\n                sort : newOrder + sort.field\n\n        handle ActionTypes.MESSAGE_ACTION, (action) ->\n            _prevAction = action\n\n        handle ActionTypes.MESSAGE_CURRENT, (messageID) ->\n            @setCurrentID messageID\n            @emit 'change'\n\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            @setCurrentID null\n\n        handle ActionTypes.RECEIVE_MESSAGE_DELETE, (id) ->\n            _messages = _messages.remove id\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getAll: -> return _messages\n\n    getByID: (messageID) -> _messages.get(messageID) or null\n\n    ###*\n    * Get messages from account, with optional pagination\n    *\n    * @param {String} accountID\n    * @param {Number} first     index of first message\n    * @param {Number} last      index of last message\n    *\n    * @return {Array}\n    ###\n    getMessagesByAccount: (accountID) ->\n        sequence = _messages.filter (message) ->\n            return message.get('accountID') is accountID\n\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\n        return sequence.toOrderedMap()\n\n\n    getMessagesCountByAccount: (accountID) ->\n        return @getMessagesByAccount(accountID).count()\n\n    ###*\n    * Get messages from mailbox, with optional pagination\n    *\n    * @param {String} mailboxID\n    * @param {Number} first     index of first message\n    * @param {Number} last      index of last message\n    *\n    * @return {Array}\n    ###\n    getMessagesByMailbox: (mailboxID) ->\n        sequence = _messages.filter (message) ->\n            return mailboxID in Object.keys message.get 'mailboxIDs'\n        .sort(__getSortFunction _sortField, _sortOrder)\n\n        ###\n        if _filter isnt MessageFilter.ALL\n            if _filter is MessageFilter.FLAGGED\n                filterFunction = (message) ->\n                    return MessageFlags.FLAGGED in message.get 'flags'\n            else if _filter is MessageFilter.UNSEEN\n                filterFunction = (message) ->\n                    return MessageFlags.SEEN not in message.get 'flags'\n        if filterFunction?\n            sequence = sequence.filter filterFunction\n\n        if _quickFilter isnt ''\n            re = new RegExp _quickFilter, 'i'\n            sequence = sequence.filter (message) ->\n                return re.test(message.get 'subject')\n        ###\n\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\n        _currentMessages = sequence.toOrderedMap()\n        if not _currentID?\n            @setCurrentID _currentMessages.first()?.get 'id'\n        return _currentMessages\n\n    getCurrentID: (messageID) ->\n        return _currentID\n\n    setCurrentID: (messageID) ->\n        _currentID = messageID\n\n    getPreviousMessage: ->\n        keys = Object.keys _currentMessages.toJS()\n        idx = keys.indexOf _currentID\n        return if idx is -1 then null else keys[idx - 1]\n\n    getNextMessage: ->\n        keys = Object.keys _currentMessages.toJS()\n        idx = keys.indexOf _currentID\n        if idx is -1 or idx is (keys.length - 1)\n            return null\n        else\n            return keys[idx + 1]\n\n    getMessagesByConversation: (messageID) ->\n        idsToLook = [messageID]\n        conversation = []\n        while idToLook = idsToLook.pop()\n            conversation.push @getByID idToLook\n            temp = _messages.filter (message) ->\n                inReply = message.get 'inReplyTo'\n                return Array.isArray(inReply) and\n                        inReply.indexOf(idToLook) isnt -1\n            newIdsToLook = temp.map((item) -> item.get('id')).toArray()\n            idsToLook = idsToLook.concat newIdsToLook\n\n        return conversation.sort(__getSortFunction 'date', -1)\n\n    getConversation: (conversationID) ->\n        conversation = []\n        _messages.filter (message) ->\n            return message.get('conversationID') is conversationID\n        .map (message) -> conversation.push message\n        .toJS()\n        return conversation.sort(__getSortFunction 'date', -1)\n\n    getParams: -> return _params\n\n    getPrevAction: -> return _prevAction\n\nmodule.exports = new MessageStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nrefreshesToImmutable = (refreshes) ->\n    Immutable.Sequence refreshes\n    # sets objectID as index\n    .mapKeys (_, refresh) -> return refresh.objectID\n    .map (refresh) -> Immutable.fromJS refresh\n    .toOrderedMap()\n\nclass RefreshesStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _refreshes = refreshesToImmutable window.refreshes or []\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n\n        handle ActionTypes.RECEIVE_REFRESH_STATUS, (refreshes) ->\n            _refreshes = refreshesToImmutable refreshes\n\n        handle ActionTypes.RECEIVE_REFRESH_UPDATE, (refresh) ->\n            refresh = Immutable.Map refresh\n            id = refresh.get('objectID')\n            _refreshes = _refreshes.set(id, refresh).toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_REFRESH_DELETE, (refreshID) ->\n            _refreshes = _refreshes.filter (refresh) ->\n                refresh.get('id') isnt refreshID\n            .toOrderedMap()\n            @emit 'change'\n\n    getRefreshing: -> _refreshes\n\nmodule.exports = new RefreshesStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass SearchStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # search results are a list of message\n    _results = Immutable.OrderedMap.empty()\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_SEARCH_RESULTS, (rawResults) ->\n            if rawResult?\n                _results = _results.withMutations (map) ->\n                    rawResults.forEach (rawResult) ->\n                        message = Immutable.Map rawResult\n                        map.set message.get('id'), message\n            else\n                _results = Immutable.OrderedMap.empty()\n\n            @emit 'change'\n\n        handle ActionTypes.CLEAR_SEARCH_RESULTS, ->\n            _results = Immutable.OrderedMap.empty()\n            @emit 'change'\n\n        handle ActionTypes.SET_SEARCH_QUERY, (query) ->\n            _query = query\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    getResults: -> return _results\n\n    getQuery: -> return _query\n\nmodule.exports = new SearchStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass SettingsStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _settings = Immutable.Map window.settings\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SETTINGS_UPDATED, (settings) ->\n            _settings = Immutable.Map settings\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    get: (settingName = null) ->\n        if settingName?\n            return _settings.get settingName\n        else\n            return _settings\n\nmodule.exports = new SettingsStore()\n","XHRUtils = require '../utils/xhr_utils'\n\nActivityUtils = (options) ->\n\n    activity = {}\n\n    XHRUtils.activityCreate options, (error, res) ->\n        if error\n            activity.onerror.call(error)\n        else\n            activity.onsuccess.call(res)\n\n    return activity\n\nmodule.exports = ActivityUtils\n","AccountStore  = require '../stores/account_store'\nMessageStore  = require '../stores/message_store'\nSettingsStore = require '../stores/settings_store'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nonMessageList = ->\n    actions = [\n        \"account.mailbox.messages\",\n        \"account.mailbox.messages.full\"\n    ]\n    return router.current.firstPanel?.action in actions\n\nmodule.exports =\n    getCurrentAccount: ->\n        AccountStore.getSelected()\n\n    getCurrentMailbox: ->\n        AccountStore.getSelectedMailboxes()\n\n    getCurrentActions: ->\n        res = []\n        Object.keys(router.current).forEach (panel) ->\n            if router.current[panel]?\n                res.push router.current[panel].action\n        return res\n\n    messageNew: ->\n        router.navigate('compose/', {trigger: true})\n\n    # update locate (without saving it into settings)\n    setLocale: (lang, refresh) ->\n        window.moment.locale lang\n        locales = {}\n        try\n            locales = require \"../locales/#{lang}\"\n        catch err\n            console.log err\n            locales = require \"../locales/en\"\n        polyglot = new Polyglot()\n        # we give polyglot the data\n        polyglot.extend locales\n        # handy shortcut\n        window.t = polyglot.t.bind polyglot\n        if refresh\n            LayoutActionCreator.refresh()\n\n    getAccountByLabel: (label) ->\n        return AccountStore.getByLabel label\n\n    # warning: don't update setting value server side\n    setSetting: (key, value) ->\n        AppDispatcher = require '../app_dispatcher'\n        {ActionTypes} = require '../constants/app_constants'\n        settings = SettingsStore.get().toJS()\n        settings[key] = value\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SETTINGS_UPDATED\n            value: settings\n\n    messageNavigate: (direction, nextID) ->\n        if not onMessageList()\n            return\n        if not nextID?\n            if direction is 'prev'\n                nextID = MessageStore.getPreviousMessage()\n            else\n                nextID = MessageStore.getNextMessage()\n        if not nextID?\n            return\n\n        if SettingsStore.get('displayPreview')\n            @messageDisplay nextID\n        else\n            MessageActionCreator = require '../actions/message_action_creator'\n            MessageActionCreator.setCurrent nextID\n\n    messageDisplay: (messageID) ->\n        if not messageID\n            messageID = MessageStore.getCurrentID()\n        action = 'message'\n        if SettingsStore.get('displayConversation')\n            message = MessageStore.getByID messageID\n            if not message?\n                return\n            conversationID = message.get 'conversationID'\n\n            if conversationID\n                action = 'conversation'\n\n        url = window.router.buildUrl direction: 'second', action: action, parameters: messageID\n        window.router.navigate url, {trigger: true}\n\n    messageClose: ->\n        closeUrl = window.router.buildUrl\n            direction: 'first'\n            action: 'account.mailbox.messages'\n            parameters: AccountStore.getSelected().get 'id'\n            fullWidth: true\n        window.router.navigate closeUrl, {trigger: true}\n\n    messageDeleteCurrent: ->\n        if not onMessageList()\n            return\n        MessageActionCreator = require '../actions/message_action_creator'\n        alertError   = LayoutActionCreator.alertError\n        alertSuccess = LayoutActionCreator.alertSuccess\n        message = MessageStore.getByID MessageStore.getCurrentID()\n        if not message?\n            return\n        if (not SettingsStore.get('messageConfirmDelete')) or\n        window.confirm(t 'mail confirm delete', {subject: message.get('subject')})\n            nextID = MessageStore.getNextMessage()\n            MessageActionCreator.delete message, (error) =>\n                if error?\n                    alertError \"#{t(\"message action delete ko\")} #{error}\"\n                else\n                    @messageNavigate(null, nextID)\n\n    messageUndo: ->\n        MessageActionCreator = require '../actions/message_action_creator'\n        MessageActionCreator.undelete()\n\n","{ComposeActions} = require '../constants/app_constants'\nContactStore     = require '../stores/contact_store'\n\nmodule.exports = MessageUtils =\n\n    displayAddress: (address, full = false) ->\n        if full\n            if address.name? and address.name isnt \"\"\n                return \"\\\"#{address.name}\\\" <#{address.address}>\"\n            else\n                return \"#{address.address}\"\n        else\n            if address.name? and address.name isnt \"\"\n                return address.name\n            else\n                return address.address.split('@')[0]\n\n    displayAddresses: (addresses, full = false) ->\n        if not addresses?\n            return \"\"\n\n        res = []\n        for item in addresses\n            if not item?\n                break\n            res.push(MessageUtils.displayAddress item, full)\n        return res.join \", \"\n\n\n    getReplyToAddress: (message) ->\n        reply = message.get 'replyTo'\n        from = message.get 'from'\n        return if reply?.length isnt 0 then reply else from\n\n\n\n    makeReplyMessage: (inReplyTo, action, inHTML) ->\n        message =\n            composeInHTML: inHTML\n            attachments: Immutable.Vector.empty()\n\n        if inReplyTo\n            message.accountID = inReplyTo.get 'accountID'\n            dateHuman = @formatDate inReplyTo.get 'createdAt'\n            sender = @displayAddresses inReplyTo.get 'from'\n\n            text = inReplyTo.get 'text'\n            html = inReplyTo.get 'html'\n\n            if text and not html and inHTML\n                html = markdown.toHTML text\n\n            if html and not text and not inHTML\n                text = toMarkdown html\n\n            message.inReplyTo  = inReplyTo.get 'id'\n            message.references = inReplyTo.get('references') or []\n            message.references = message.references.concat message.inReplyTo\n\n        switch action\n            when ComposeActions.REPLY\n                message.to = @getReplyToAddress inReplyTo\n                message.cc = []\n                message.bcc = []\n                message.subject = \"#{t 'compose reply prefix'}#{inReplyTo.get 'subject'}\"\n                message.text = t('compose reply separator', {date: dateHuman, sender: sender}) +\n                    @generateReplyText(text) + \"\\n\"\n                message.html = \"\"\"\n                    <p><br /></p>\n                    <p>#{t('compose reply separator', {date: dateHuman, sender: sender})}</p>\n                    <blockquote>#{html}</blockquote>\n                    \"\"\"\n            when ComposeActions.REPLY_ALL\n                message.to = @getReplyToAddress inReplyTo\n                message.cc = [].concat inReplyTo.get('to'), inReplyTo.get('cc')\n                message.bcc = []\n                message.subject = \"#{t 'compose reply prefix'}#{inReplyTo.get 'subject'}\"\n                message.text = t('compose reply separator', {date: dateHuman, sender: sender}) +\n                    @generateReplyText(text) + \"\\n\"\n                message.html = \"\"\"\n                    <p><br /></p>\n                    <p>#{t('compose reply separator', {date: dateHuman, sender: sender})}</p>\n                    <blockquote>#{html}</blockquote>\n                    \"\"\"\n            when ComposeActions.FORWARD\n                message.to = []\n                message.cc = []\n                message.bcc = []\n                message.subject = \"#{t 'compose forward prefix'}#{inReplyTo.get 'subject'}\"\n                message.text = t('compose forward separator', {date: dateHuman, sender: sender}) + text\n                message.html = \"<p>#{t('compose forward separator', {date: dateHuman, sender: sender})}</p>\" + html\n\n                # Add original message attachments\n                message.attachments = inReplyTo.get 'attachments'\n\n            when null\n                message.to      = []\n                message.cc      = []\n                message.bcc     = []\n                message.subject = ''\n                message.text    = t 'compose default'\n\n        return message\n\n    generateReplyText: (text) ->\n        text = text.split '\\n'\n        res  = []\n        text.forEach (line) ->\n            res.push \"> #{line}\"\n        return res.join \"\\n\"\n\n    getAttachmentType: (type) ->\n        return null unless type\n        sub = type.split '/'\n        switch sub[0]\n            when 'audio', 'image', 'text', 'video'\n                return sub[0]\n            when \"application\"\n                switch sub[1]\n                    when \"vnd.ms-excel\",\\\n                         \"vnd.oasis.opendocument.spreadsheet\",\\\n                         \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                        return \"spreadsheet\"\n                    when \"msword\",\\\n                         \"vnd.ms-word\",\\\n                         \"vnd.oasis.opendocument.text\",\\\n                         \"vnd.openxmlformats-officedocument.wordprocessingm\" + \\\n                         \"l.document\"\n                        return \"word\"\n                    when \"vns.ms-powerpoint\",\\\n                         \"vnd.oasis.opendocument.presentation\",\\\n                         \"vnd.openxmlformats-officedocument.presentationml.\" + \\\n                         \"presentation\"\n                        return \"presentation\"\n\n                    when \"pdf\" then return sub[1]\n                    when \"gzip\", \"zip\" then return 'archive'\n\n    formatDate: (date, compact) ->\n        if not date?\n            return\n        today = moment()\n        date  = moment date\n        if date.isBefore today, 'year'\n            formatter = 'DD/MM/YYYY'\n        else if date.isBefore today, 'day'\n            if compact? and compact\n                formatter = 'L'\n            else\n                formatter = 'MMM DD'\n        else\n            formatter = 'HH:mm'\n        return date.format formatter\n\n    getAvatar: (message) ->\n        if message.get('from')[0]?\n            return ContactStore.getAvatar message.get('from')[0].address\n        else\n            return null\n","module.exports =\n\n    init: ->\n        if not window.plugins?\n            window.plugins = {}\n\n        for own pluginName, pluginConf of window.plugins\n            if pluginConf.active\n                @activate pluginName\n\n        if MutationObserver?\n\n            config =\n                attributes: false\n                childList: true\n                characterData: false\n                subtree: true\n\n            onMutation = (mutations) ->\n                checkNode = (node, action) ->\n                    if node.nodeType isnt Node.ELEMENT_NODE\n                        return\n\n                    for own pluginName, pluginConf of window.plugins\n                        if pluginConf.active\n                            listener = pluginConf.onAdd if action is 'add'\n                            listener = pluginConf.onDelete if action is 'delete'\n                            if listener? and\n                            listener.condition.bind(pluginConf)(node)\n                                listener.action.bind(pluginConf)(node)\n\n                check = (mutation) ->\n\n                    nodes = Array.prototype.slice.call mutation.addedNodes\n                    checkNode node, 'add' for node in nodes\n\n                    nodes = Array.prototype.slice.call mutation.removedNodes\n                    checkNode node, 'del' for node in nodes\n\n                check mutation for mutation in mutations\n\n            # Observes DOM mutation to see if a plugin should be called\n            observer = new MutationObserver onMutation\n            observer.observe document, config\n\n        else\n            # Dirty fallback for IE\n            # @TODO use polyfill ???\n            setInterval ->\n                for own pluginName, pluginConf of window.plugins\n                    if pluginConf.active\n                        if pluginConf.onAdd?\n                            if pluginConf.onAdd.condition.bind(pluginConf)(document.body)\n                                pluginConf.onAdd.action.bind(pluginConf)(document.body)\n                        if pluginConf.onDelete?\n                            if pluginConf.onDelete.condition.bind(pluginConf)(document.body)\n                                pluginConf.onDelete.action.bind(pluginConf)(document.body)\n\n            , 200\n\n    activate: (key) ->\n        plugin = window.plugins[key]\n        type   = plugin.type\n        plugin.active = true\n\n        # Add custom events listeners\n        if plugin.listeners?\n            for own event, listener of plugin.listeners\n                window.addEventListener event, listener.bind(plugin)\n\n        if plugin.onActivate\n            plugin.onActivate()\n\n        if type?\n            for own pluginName, pluginConf of window.plugins\n                if pluginName is key\n                    continue\n                if pluginConf.type is type and pluginConf.active\n                    @deactivate pluginName\n\n    deactivate: (key) ->\n        plugin = window.plugins[key]\n        plugin.active = false\n\n        # remove custom events listeners\n        if plugin.listeners?\n            for own event, listener of plugin.listeners\n                window.removeEventListener event, listener\n\n        if plugin.onDeactivate\n            plugin.onDeactivate()\n\n    merge: (remote) ->\n        for own pluginName, pluginConf of remote\n            local = window.plugins[pluginName]\n            if local?\n                local.active = pluginConf.active\n            else\n                delete remote[pluginName]\n\n        for own pluginName, pluginConf of window.plugins\n            if not remote[pluginName]?\n                remote[pluginName] =\n                    name: pluginConf.name\n                    active: pluginConf.active\n\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nurl = window.location.origin\npathToSocketIO = \"#{window.location.pathname}socket.io\"\nsocket = io.connect url, path: pathToSocketIO\n\ndispatchAs = (action) -> (content) ->\n    AppDispatcher.handleServerAction\n        type: action\n        value: content\n\nsocket.on 'refresh.status', dispatchAs ActionTypes.RECEIVE_REFRESH_STATUS\nsocket.on 'refresh.create', dispatchAs ActionTypes.RECEIVE_REFRESH_UPDATE\nsocket.on 'refresh.update', dispatchAs ActionTypes.RECEIVE_REFRESH_UPDATE\nsocket.on 'refresh.delete', dispatchAs ActionTypes.RECEIVE_REFRESH_DELETE\n\nsocket.on 'message.create', dispatchAs ActionTypes.RECEIVE_RAW_MESSAGE\nsocket.on 'message.update', dispatchAs ActionTypes.RECEIVE_RAW_MESSAGE\nsocket.on 'message.delete', dispatchAs ActionTypes.RECEIVE_MESSAGE_DELETE\n\nexports.acknowledgeRefresh = (taskid) ->\n    socket.emit 'mark_ack', taskid\n\n\nexports.changeRealtimeScope = (boxid, date) ->\n    socket.emit 'change_scope',\n        mailboxID: boxid\n        before: date\n","{MailboxFlags} = require '../../constants/app_constants'\n\nmodule.exports =\n\n    # Creates an immutable account from a raw account object\n    toImmutable: (rawAccount) ->\n\n        # If needed, use mailboxes attribs to set draft, sent and trash\n        if not rawAccount.draftMailbox? or\n        not rawAccount.sentMailbox? or\n        not rawAccount.trashMailbox?\n            mailboxes = {}\n            checkAttribs = (box) ->\n                if MailboxFlags.DRAFT in box.attribs\n                    mailboxes.draft = box.id\n                if MailboxFlags.SENT in box.attribs\n                    mailboxes.sent = box.id\n                if MailboxFlags.TRASH in box.attribs\n                    mailboxes.trash = box.id\n                box.children?.forEach checkAttribs\n            rawAccount.mailboxes.forEach checkAttribs\n\n        if not rawAccount.draftMailbox? and mailboxes.draft?\n            rawAccount.draftMailbox = mailboxes.draft\n        if not rawAccount.sentMailbox? and mailboxes.sent?\n            rawAccount.sentMailbox = mailboxes.sent\n        if not rawAccount.trashMailbox? and mailboxes.trash?\n            rawAccount.trashMailbox = mailboxes.trash\n\n        # Recursively creates Immutable OrderedMap of mailboxes\n        mailboxes = Immutable.OrderedMap()\n        for mailbox in rawAccount.mailboxes\n            mailbox.depth = mailbox.tree.length - 1\n            box = Immutable.Map mailbox\n            mailboxes = mailboxes.set mailbox.id, box\n\n        rawAccount.mailboxes = mailboxes\n        return Immutable.Map rawAccount\n\n\n    toRawObject: toRawObject = (account) ->\n\n        _createRawObjectMailboxes = (children) ->\n            children?.map (child) ->\n                children = child.get 'children'\n                return child.set 'children', _createRawObjectMailboxes children\n            .toVector()\n\n        mailboxes = account.get 'mailboxes'\n        account = account.set 'mailboxes', _createRawObjectMailboxes mailboxes\n\n        return account.toJS()\n","request = superagent\n\nAccountTranslator = require './translators/account_translator'\n\nSettingsStore = require '../stores/settings_store'\n\nmodule.exports =\n\n\n    changeSettings: (settings, callback) ->\n        request.put \"settings\"\n        .set 'Accept', 'application/json'\n        .send settings\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in changeSettings\", settings, res.body?.error\n                callback t('app error')\n\n    fetchMessage: (emailID, callback) ->\n        request.get \"message/#{emailID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchMessage\", emailID, res.body?.error\n                callback t('app error')\n\n    fetchConversation: (emailID, callback) ->\n        request.get \"conversation/#{emailID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchConversation\", emailID, res.body?.error\n                callback t('app error')\n\n\n    fetchMessagesByFolder: (mailboxID, query, callback) ->\n        for own key, val of query\n            if val is '-' or val is 'all'\n                delete query[key]\n        request.get \"mailbox/#{mailboxID}\"\n        .set 'Accept', 'application/json'\n        .query query\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchMessagesByFolder\", res.body?.error\n                callback t('app error')\n\n    mailboxCreate: (mailbox, callback) ->\n        request.post \"mailbox\"\n        .send mailbox\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxCreate\", mailbox, res.body?.error\n                callback t('app error')\n\n    mailboxUpdate: (data, callback) ->\n        request.put \"mailbox/#{data.mailboxID}\"\n        .send data\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxUpdate\", data, res.body?.error\n                callback t('app error')\n\n    mailboxDelete: (data, callback) ->\n        request.del \"mailbox/#{data.mailboxID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxDelete\", data, res.body?.error\n                callback t('app error')\n\n    messageSend: (message, callback) ->\n        req = request.post \"message\"\n        .set 'Accept', 'application/json'\n\n        files = {}\n        message.attachments = message.attachments.map (file) ->\n            files[file.get('generatedFileName')] = file.get 'rawFileObject'\n            return file.remove 'rawFileObject'\n        .toJS()\n\n        req.field 'body', JSON.stringify message\n        for name, blob of files\n            req.attach name, blob\n\n        req.end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in messageSend\", message, res.body?.error\n                callback t('app error')\n\n    messagePatch: (messageId, patch, callback) ->\n        request.patch \"message/#{messageId}\", patch\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in messagePatch\", messageId, res.body?.error\n                callback t('app error')\n\n    conversationDelete: (conversationId, callback) ->\n        request.del \"conversation/#{conversationId}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in conversationDelete\", conversationId, res.body?.error\n                callback t('app error')\n\n    conversationPatch: (conversationId, patch, callback) ->\n        request.patch \"conversation/#{conversationId}\", patch\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in conversationPatch\", conversationId, res.body?.error\n                callback t('app error')\n\n    createAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n\n        request.post 'account'\n        .send account\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in createAccount\", account, res.body?.error\n                callback res.body, null\n\n    editAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n        rawAccount = AccountTranslator.toRawObject account\n\n        request.put \"account/#{rawAccount.id}\"\n        .send rawAccount\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in editAccount\", account, res.body?.error\n                callback res.body, null\n\n    removeAccount: (accountID) ->\n\n        request.del \"account/#{accountID}\"\n        .set 'Accept', 'application/json'\n        .end (res) -> # nothing\n\n    accountDiscover: (domain, callback) ->\n\n        request.get \"provider/#{domain}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback res.body, null\n\n    search: (query, numPage, callback) ->\n        encodedQuery = encodeURIComponent query\n        numByPage = SettingsStore.get 'messagesPerPage'\n        request.get \"search/#{encodedQuery}/page/#{numPage}/limit/#{numByPage}\"\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in search\", res.body?.error\n                callback res.body, null\n\n    refresh: (hard, callback) ->\n        url = if hard then \"refresh?all=true\"\n        else \"refresh\"\n\n        request.get url\n        .end (res) ->\n            callback?(res.text)\n\n    activityCreate: (options, callback) ->\n        request.post \"activity\"\n        .send options\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in activityCreate\", options, res.body?.error\n                callback res.body, null\n"]}