{"version":3,"file":"public/js/app.js","sources":["app/actions/email_actions.coffee","app/actions/layout_actions.coffee","app/actions/mailbox_actions.coffee","app/components/application.coffee","app/components/compose.coffee","app/components/email-list.coffee","app/components/email-thread.coffee","app/components/email.coffee","app/components/imap-folder-list.coffee","app/components/mailbox-config.coffee","app/components/menu.coffee","app/fluxxor.coffee","app/initialize.coffee","app/mixins/router.coffee","app/router.coffee","app/stores/emails.coffee","app/stores/layout.coffee","app/stores/mailboxes.coffee","app/utils/XHRUtils.coffee"],"names":[],"mappings":"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","sourcesContent":["module.exports =\n\n    receiveRawEmails: (emails) ->\n        @dispatch 'RECEIVE_RAW_EMAILS', emails\n\n    receiveRawEmail: (email) ->\n        @dispatch 'RECEIVE_RAW_EMAIL', email\n","XHRUtils = require '../utils/XHRUtils'\n\nmodule.exports =\n\n    showReponsiveMenu: ->\n        @dispatch 'SHOW_MENU_RESPONSIVE'\n\n    hideReponsiveMenu: ->\n        @dispatch 'HIDE_MENU_RESPONSIVE'\n\n    showEmailList: (panelInfo, direction) ->\n        @dispatch 'HIDE_MENU_RESPONSIVE'\n        @dispatch 'SELECT_MAILBOX', panelInfo.parameters[0]\n\n        flux = require '../fluxxor'\n        defaultMailbox = flux.store('MailboxStore').getDefault()\n        mailboxID = panelInfo.parameters[0] or defaultMailbox?.id\n        if mailboxID?\n            XHRUtils.fetchEmailsByMailbox mailboxID\n\n    showEmailThread: (panelInfo, direction) ->\n        @dispatch 'HIDE_MENU_RESPONSIVE'\n        XHRUtils.fetchEmailThread panelInfo.parameters[0]\n\n    showComposeNewEmail: (panelInfo, direction) ->\n        @dispatch 'HIDE_MENU_RESPONSIVE'\n        # nothing\n\n    showCreateMailbox: (panelInfo, direction) ->\n        @dispatch 'HIDE_MENU_RESPONSIVE'\n        @dispatch 'SELECT_MAILBOX', -1\n\n    showConfigMailbox: (panelInfo, direction) ->\n        @dispatch 'HIDE_MENU_RESPONSIVE'\n        @dispatch 'SELECT_MAILBOX', panelInfo.parameters[0]","XHRUtils = require '../utils/XHRUtils'\n\nmodule.exports =\n\n    create: (inputValues) ->\n        @dispatch 'NEW_MAILBOX_WAITING', true\n        XHRUtils.createMailbox inputValues, (error, mailbox) =>\n            setTimeout =>\n                @dispatch 'NEW_MAILBOX_WAITING', false\n                if error?\n                    @dispatch 'NEW_MAILBOX_ERROR', error\n                else\n                    @dispatch 'ADD_MAILBOX', mailbox\n            , 2000\n\n    edit: (inputValues) ->\n        @dispatch 'NEW_MAILBOX_WAITING', true\n        XHRUtils.editMailbox inputValues, (error, mailbox) =>\n            setTimeout =>\n                @dispatch 'NEW_MAILBOX_WAITING', false\n                if error?\n                    @dispatch 'NEW_MAILBOX_ERROR', error\n                else\n                    @dispatch 'EDIT_MAILBOX', mailbox\n            , 2000\n\n    remove: (mailboxID) ->\n        @dispatch 'REMOVE_MAILBOX', mailboxID\n        XHRUtils.removeMailbox mailboxID\n        window.router.navigate '', true\n\n\n\n","Fluxxor = require 'fluxxor'\nReact = require 'react/addons'\n{body, div, p, form, i, input, span, a} = React.DOM\n# React components\nMenu = require './menu'\nEmailList = require './email-list'\nEmailThread = require './email-thread'\nCompose = require './compose'\nMailboxConfig = require './mailbox-config'\nImapFolderList = require './imap-folder-list'\n\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\nclasser = React.addons.classSet\n\n# React mixins\nFluxMixin = Fluxxor.FluxMixin React\nStoreWatchMixin = Fluxxor.StoreWatchMixin\n\n# Custom mixins\nRouterMixin = require '../mixins/router'\n\n###\n    This component is the root of the React tree.\n\n    It has two functions:\n        - building the layout based on the router\n        - listening for changes in  the model (Flux stores)\n          and re-render accordingly\n\n    About routing: it uses Backbone.Router as a source of truth for the layout.\n    (based on: https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\n\n    Fluxxor reference:\n     - FluxMixin: http://fluxxor.com/documentation/flux-mixin.html\n     - StoreWatchMixin: http://fluxxor.com/documentation/store-watch-mixin.html\n###\nmodule.exports = Application = React.createClass\n    displayName: 'Application'\n\n    mixins: [\n        FluxMixin\n        StoreWatchMixin(\"MailboxStore\", \"EmailStore\", \"LayoutStore\")\n        RouterMixin\n    ]\n\n    render: ->\n        # Shortcut\n        #layout = @state.layout\n        layout = @props.router.current\n\n        if not layout?\n            return div null, \"Loading...\"\n\n        # is the layout a full-width panel or two panels sharing the width\n        isFullWidth = not layout.rightPanel?\n\n        leftPanelLayoutMode = if isFullWidth then 'full' else 'left'\n\n        # css classes are a bit long so we use a subfunction to get them\n        panelClasses = @getPanelClasses isFullWidth\n\n        showMailboxConfigButton = @state.selectedMailbox? and\n                                  layout.leftPanel.action isnt 'mailbox.new'\n        if showMailboxConfigButton\n            # the button toggles the mailbox config\n            if layout.leftPanel.action is 'mailbox.config'\n                configMailboxUrl = @buildUrl\n                    direction: 'left'\n                    action: 'mailbox.emails'\n                    parameters: @state.selectedMailbox.id\n                    fullWidth: true\n            else\n                configMailboxUrl = @buildUrl\n                    direction: 'left'\n                    action: 'mailbox.config'\n                    parameters: @state.selectedMailbox.id\n                    fullWidth: true\n\n        responsiveBackUrl = @buildUrl\n            leftPanel: layout.leftPanel\n            fullWidth: true\n\n        # classes for page-content\n        responsiveClasses = classer\n            'col-xs-12 col-md-11': true\n            'pushed': @state.isResponsiveMenuShown\n\n        # Actual layout\n        div className: 'container-fluid',\n            div className: 'row',\n\n                # Menu is self-managed because this part of the layout\n                # is always the same.\n                Menu\n                    mailboxes: @state.mailboxes\n                    selectedMailbox: @state.selectedMailbox\n                    isResponsiveMenuShown: @state.isResponsiveMenuShown\n                    layout: @props.router.current\n\n                div id: 'page-content', className: responsiveClasses,\n\n                    # The quick actions bar shoud be moved in its own component\n                    # when its feature is implemented.\n                    div id: 'quick-actions', className: 'row',\n                        # responsive menu icon\n                        if layout.rightPanel\n                            a href: responsiveBackUrl, className: 'responsive-handler hidden-md hidden-lg',\n                                i className: 'fa fa-chevron-left hidden-md hidden-lg pull-left'\n                                'Back'\n                        else\n                            a onClick: @onResponsiveMenuClick, className: 'responsive-handler hidden-md hidden-lg',\n                                i className: 'fa fa-bars pull-left'\n                                'Menu'\n\n\n                        div className: 'col-md-6 hidden-xs hidden-sm pull-left',\n                            form className: 'form-inline col-md-12',\n                                ImapFolderList selectedMailbox: @state.selectedMailbox\n                                div className: 'form-group pull-left',\n                                    div className: 'input-group',\n                                        input className: 'form-control', type: 'text', placeholder: 'Search...', onFocus: @onFocusSearchInput, onBlur: @onBlurSearchInput\n                                        div className: 'input-group-addon btn btn-cozy',\n                                            span className: 'fa fa-search'\n\n                        div id: 'contextual-actions', className: 'col-md-6 hidden-xs hidden-sm pull-left text-right',\n                            ReactCSSTransitionGroup transitionName: 'fade',\n                                if showMailboxConfigButton\n                                    a href: configMailboxUrl, className: 'btn btn-cozy mailbox-config',\n                                        i className: 'fa fa-cog'\n\n                    # Two layout modes: one full-width panel or two panels\n                    div id: 'panels', className: 'row',\n                        div className: panelClasses.leftPanel, key: 'left-panel-' + layout.leftPanel.action + '-' + layout.leftPanel.parameters.join('-'),\n                            @getPanelComponent layout.leftPanel, leftPanelLayoutMode\n                        if not isFullWidth and layout.rightPanel?\n                            div className: panelClasses.rightPanel, key: 'right-panel-' + layout.rightPanel.action + '-' + layout.rightPanel.parameters.join('-'),\n                                @getPanelComponent layout.rightPanel, 'right'\n\n\n    # Panels CSS classes are a bit long so we get them from a this subfunction\n    # Also, it manages transitions between screens by adding relevant classes\n    getPanelClasses: (isFullWidth) ->\n        previous = @props.router.previous\n        layout = @props.router.current\n        left = layout.leftPanel\n        right = layout.rightPanel\n\n        # Two cases: the layout has a full-width panel...\n        if isFullWidth\n            classes = leftPanel: 'panel col-xs-12 col-md-12'\n\n            # custom case for mailbox.config action (top right cog button)\n            if previous? and left.action is 'mailbox.config'\n                classes.leftPanel += ' moveFromTopRightCorner'\n\n            # (default) when full-width panel is shown after a two-panels structure\n            else if previous? and previous.rightPanel\n\n                # if the full-width panel was on right right before, it expands\n                if previous.rightPanel.action is layout.leftPanel.action and\n                   _.difference(previous.rightPanel.parameters, layout.leftPanel.parameters).length is 0\n                    classes.leftPanel += ' expandFromRight'\n\n            # (default) when full-width panel is shown after a full-width panel\n            else if previous?\n                classes.leftPanel += ' moveFromLeft'\n\n\n        # ... or a two panels layout.\n        else\n            classes =\n                leftPanel: 'panel col-xs-12 col-md-6 hidden-xs hidden-sm'\n                rightPanel: 'panel col-xs-12 col-md-6'\n\n            # we don't animate in the first render\n            if previous?\n                wasFullWidth = not previous.rightPanel?\n\n                # transition from full-width to two-panels layout\n                if wasFullWidth and not isFullWidth\n\n                    # expanded right panel collapses\n                    if previous.leftPanel.action is right.action and\n                       _.difference(previous.leftPanel.parameters, right.parameters).length is 0\n                        classes.leftPanel += ' moveFromLeft'\n                        classes.rightPanel += ' slide-in-from-left'\n\n                    # (default) opens right panel sliding from the right\n                    else\n                        classes.rightPanel += ' slide-in-from-right'\n\n                # (default) opens right panel sliding from the left\n                else if not isFullWidth\n                    classes.rightPanel += ' slide-in-from-left'\n\n        return classes\n\n\n    # Factory of React components for panels\n    getPanelComponent: (panelInfo, layout) ->\n\n        flux = @getFlux()\n\n        # -- Generates a list of emails for a given mailbox\n        if panelInfo.action is 'mailbox.emails'\n\n            firstMailbox = flux.store('MailboxStore').getDefault()\n\n            # gets the selected email if any\n            openEmail = null\n            direction = if layout is 'left' then 'rightPanel' else 'leftPanel'\n            otherPanelInfo = @props.router.current[direction]\n            if otherPanelInfo?.action is 'email'\n                openEmail = flux.store('EmailStore').getByID otherPanelInfo.parameters[0]\n\n            # display emails of the selected mailbox\n            if panelInfo.parameters? and panelInfo.parameters.length > 0\n                emailStore = flux.store 'EmailStore'\n                mailboxID = panelInfo.parameters[0]\n                return EmailList\n                    emails: emailStore.getEmailsByMailbox mailboxID\n                    mailboxID: mailboxID\n                    layout: layout\n                    openEmail: openEmail\n\n            # default: display emails of the first mailbox\n            else if (not panelInfo.parameters? or panelInfo.parameters.length is 0) and firstMailbox?\n                emailStore = flux.store 'EmailStore'\n                mailboxID = firstMailbox.id\n\n                return EmailList\n                    emails: emailStore.getEmailsByMailbox mailboxID\n                    mailboxID: mailboxID\n                    layout: layout\n                    openEmail: openEmail\n\n            # there is no mailbox or mailbox is not found\n            else\n                return div null, 'Handle no mailbox or mailbox not found case'\n\n        # -- Generates a configuration window for a given mailbox\n        # or the mailbox creation form.\n        else if panelInfo.action is 'mailbox.config'\n            initialMailboxConfig = @state.selectedMailbox\n            error = flux.store('MailboxStore').getError()\n            isWaiting = flux.store('MailboxStore').isWaiting()\n            return MailboxConfig {layout, error, isWaiting, initialMailboxConfig}\n\n        # -- Generates a configuration window to create a new mailbox\n        else if panelInfo.action is 'mailbox.new'\n            error = flux.store('MailboxStore').getError()\n            isWaiting = flux.store('MailboxStore').isWaiting()\n            return MailboxConfig {layout, error, isWaiting}\n\n        # -- Generates an email thread\n        else if panelInfo.action is 'email'\n            email = flux.store('EmailStore').getByID panelInfo.parameters[0]\n            thread = flux.store('EmailStore').getEmailsByThread panelInfo.parameters[0]\n            selectedMailbox = flux.store('MailboxStore').getSelectedMailbox()\n            return EmailThread {email, thread, selectedMailbox, layout}\n\n        # -- Generates the new email composition form\n        else if panelInfo.action is 'compose'\n            selectedMailbox = flux.store('MailboxStore').getSelectedMailbox()\n            return Compose {selectedMailbox, layout}\n\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\n        else return div null, 'Unknown component'\n\n\n    # Result will be merged with `getInitialState` result.\n    getStateFromFlux: ->\n        flux = @getFlux()\n        return {\n            mailboxes: flux.store('MailboxStore').getAll()\n            selectedMailbox: flux.store('MailboxStore').getSelectedMailbox()\n            emails: flux.store('EmailStore').getAll()\n            isResponsiveMenuShown: flux.store('LayoutStore').isMenuShown()\n        }\n\n\n    # Listens to router changes. Renders the component on changes.\n    componentWillMount: ->\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\n        # to rebind its scope on the fly\n        @onRoute = (params) =>\n            {leftPanelInfo, rightPanelInfo} = params\n            @forceUpdate()\n\n        @props.router.on 'fluxRoute', @onRoute\n\n\n    # Stops listening to router changes\n    componentWillUnmount: ->\n        @props.router.off 'fluxRoute', @onRoute\n\n    # Toggle the menu in responsive mode\n    onResponsiveMenuClick: (event) ->\n        event.preventDefault()\n        if @state.isResponsiveMenuShown\n            @getFlux().actions.layout.hideReponsiveMenu()\n        else\n            @getFlux().actions.layout.showReponsiveMenu()\n","React = require 'react/addons'\n{div, h3, a, i, textarea} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = Compose = React.createClass\n    displayName: 'Compose'\n\n    mixins: [RouterMixin]\n\n    render: ->\n\n        expandUrl = @buildUrl\n            direction: 'left'\n            action: 'compose'\n            fullWidth: true\n\n        collapseUrl = @buildUrl\n            leftPanel:\n                action: 'mailbox.emails'\n                parameters: @props.selectedMailbox.id\n            rightPanel:\n                action: 'compose'\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        div id: 'email-compose',\n            h3 null,\n                a href: closeUrl, className: 'close-email hidden-xs hidden-sm',\n                    i className:'fa fa-times'\n                'Compose new email'\n                if @props.layout isnt 'full'\n                    a href: expandUrl, className: 'expand hidden-xs hidden-sm',\n                        i className: 'fa fa-arrows-h'\n                else\n                    a href: collapseUrl, className: 'close-email pull-right',\n                        i className:'fa fa-compress'\n            textarea defaultValue: 'Hello, how are you doing today?'\n","Fluxxor = require 'fluxxor'\nReact = require 'react/addons'\nImmutable = require 'immutable'\nmoment = require 'moment'\n\n{div, ul, li, a, span, i, p} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\nFluxChildMixin = Fluxxor.FluxChildMixin React\n\nmodule.exports = EmailList = React.createClass\n    displayName: 'EmailList'\n\n    mixins: [RouterMixin, FluxChildMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not Immutable.is(nextProps.emails, @props.emails) or\n               not Immutable.is(nextProps.openEmail, @props.openEmail)\n\n    render: ->\n        div id: 'email-list',\n            ul className: 'list-unstyled',\n                @props.emails.map (email, key) =>\n                    # only displays initial email of a thread\n                    if email.inReplyTo.length is 0\n                        isActive = @props.openEmail? and\n                                   @props.openEmail.id is email.id\n                        @getEmailRender email, key, isActive\n                .toJS()\n\n    getEmailRender: (email, key, isActive) ->\n        classes = classer\n            read: email.isRead\n            active: isActive\n\n        url = @buildUrl\n            direction: 'right'\n            action: 'email'\n            parameters: email.id\n\n        today = moment()\n        date = moment email.createdAt\n        if date.isBefore today, 'year'\n            formatter = 'DD/MM/YYYY'\n        else if date.isBefore today, 'day'\n            formatter = 'DD MMMM'\n        else\n            formatter = 'hh:mm'\n\n        li className: 'email ' + classes, key: key,\n            a href: url,\n                i className: 'fa fa-user'\n                span className: 'email-participants', @getParticipants email\n                div className: 'email-preview',\n                    span className: 'email-title', email.subject\n                    p null, email.text\n                span className: 'email-hour', date.format formatter\n\n\n    getParticipants: (email) ->\n        #list = [email.sender].concat email.receivers\n        #return list.join ', '\n        return email.from + ', ' + email.to\n","Fluxxor = require 'fluxxor'\nReact = require 'react/addons'\n\n{div, ul, li, span, i, p, h3, a} = React.DOM\nEmail = require './email'\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\nFluxChildMixin = Fluxxor.FluxChildMixin React\n\nmodule.exports = EmailThread = React.createClass\n    displayName: 'EmailThread'\n\n    mixins: [RouterMixin, FluxChildMixin]\n\n    render: ->\n        if not @props.email? or not @props.thread\n            return p null, 'Loading...'\n\n        expandUrl = @buildUrl\n            direction: 'left'\n            action: 'email'\n            parameters: @props.email.id\n            fullWidth: true\n\n        if window.router.previous?\n            selectedMailboxID = @props.selectedMailbox.id\n        else\n            selectedMailboxID= @props.thread[0].mailbox\n\n        collapseUrl = @buildUrl\n            leftPanel:\n                action: 'mailbox.emails'\n                parameters: selectedMailboxID\n            rightPanel:\n                action: 'email'\n                parameters: @props.thread[0].id\n\n        if @props.layout is 'full'\n            closeUrl = @buildUrl\n                direction: 'left'\n                action: 'mailbox.emails'\n                parameters: @props.selectedMailbox.id\n                fullWidth: true\n        else\n            closeUrl = @buildClosePanelUrl @props.layout\n\n        closeIcon = if @props.layout is 'full' then 'fa-th-list' else 'fa-times'\n\n        div id: 'email-thread',\n\n            # allows multiple email open but UI is not good enough\n            #ul className: 'nav nav-tabs nav-justified',\n            #    li className: 'active',\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n\n            h3 null,\n                a href: closeUrl, className: 'close-email hidden-xs hidden-sm',\n                    i className:'fa ' + closeIcon\n                @props.email.subject\n                if @props.layout isnt 'full'\n                    a href: expandUrl, className: 'expand hidden-xs hidden-sm',\n                        i className: 'fa fa-arrows-h'\n                else\n                    a href: collapseUrl, className: 'close-email pull-right',\n                        i className:'fa fa-compress'\n\n            ul className: 'email-thread list-unstyled',\n                for email, key in @props.thread\n                    isLast = key is @props.thread.length - 1\n                    Email {email, key, isLast}\n","React = require 'react/addons'\nmoment = require 'moment'\n\n{div, ul, li, span, i, p, h3, a} = React.DOM\nclasser = React.addons.classSet\n\nmodule.exports = EmailThread = React.createClass\n    displayName: 'Email'\n\n    getInitialState: -> active: false\n\n    render: ->\n\n        clickHandler = if @props.isLast then null else @onClick\n\n        classes = classer\n            email: true\n            active: @state.active\n\n        today = moment()\n        date = moment @props.email.createdAt\n        if date.isBefore today, 'year'\n            formatter = 'DD/MM/YYYY'\n        else if date.isBefore today, 'day'\n            formatter = 'DD MMMM'\n        else\n            formatter = 'hh:mm'\n\n        li className: classes, key: @props.key, onClick: clickHandler,\n            div className: 'email-header',\n                i className: 'fa fa-user'\n                div className: 'email-participants',\n                    span  className: 'sender', @props.email.from\n                    span className: 'receivers', 'À ' + @props.email.to\n                span className: 'email-hour', date.format formatter\n            div className: 'email-preview',\n                p null, @props.email.text\n            div className: 'email-content', @props.email.text\n            div className: 'clearfix'\n\n    onClick: (args) ->\n        @setState active: not @state.active\n","React = require 'react/addons'\n{div, ul, li, span, a, button} = React.DOM\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = ImapFolderList = React.createClass\n    displayName: 'ImapFolderList'\n\n    mixins: [RouterMixin]\n\n    render: ->\n\n        folders = ['Favorite', 'Spam', 'Trash', 'Draft']\n\n        div className: 'dropdown pull-left',\n            button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown',\n                'Boite de réception'\n                span className: 'caret', ''\n            ul className: 'dropdown-menu', role: 'menu',\n                for folder, key in folders\n                    @getImapFolderRender folder, key\n\n\n    getImapFolderRender: (folder, key) ->\n        url = @buildUrl\n                direction: 'left'\n                action: 'mailbox.imap.emails'\n                parameters: [@props.selectedMailbox.id, folder.toLowerCase()]\n\n        li role: 'presentation', key: key,\n            a href: url, role: 'menuitem',\n                #span className: 'fa fa-folder'\n                folder\n","React = require 'react/addons'\nFluxxor = require 'fluxxor'\n{div, h3, form, label, input, button} = React.DOM\nclasser = React.addons.classSet\n\nFluxChildMixin = Fluxxor.FluxChildMixin React\n\nmodule.exports = React.createClass\n    displayName: 'MailboxConfig'\n\n    mixins: [\n        FluxChildMixin # makes `@getFlux()` available\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    render: ->\n        titleLabel = if @props.initialMailboxConfig? then 'Edit mailbox' else 'New mailbox'\n\n        if @props.isWaiting then buttonLabel = 'Saving...'\n        else if @props.initialMailboxConfig? then buttonLabel = 'Edit'\n        else buttonLabel = 'Add'\n\n        div id: 'mailbox-config',\n            h3 className: null, titleLabel\n\n            if @props.error\n                div className: 'error', @props.error\n\n            form className: 'form-horizontal',\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-label', className: 'col-sm-2 col-sm-offset-2 control-label', 'Label'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-label', valueLink: @linkState('label'), type: 'text', className: 'form-control', placeholder: 'A short mailbox name'\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-name', className: 'col-sm-2 col-sm-offset-2 control-label', 'Your name'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-name', valueLink: @linkState('name'), type: 'text', className: 'form-control', placeholder: 'Your name, as it will be displayed'\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-email-address', className: 'col-sm-2 col-sm-offset-2 control-label', 'Email address'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-email-address', valueLink: @linkState('email'), type: 'email', className: 'form-control', placeholder: 'Your email address'\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-password', className: 'col-sm-2 col-sm-offset-2 control-label', 'Password'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-password', valueLink: @linkState('password'), type: 'password', className: 'form-control'\n\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-smtp-server', className: 'col-sm-2 col-sm-offset-2 control-label', 'Sending server'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-smtp-server', valueLink: @linkState('smtpServer'), type: 'text', className: 'form-control', placeholder: 'smtp.provider.tld'\n                    label htmlFor: 'mailbox-smtp-port', className: 'col-sm-1 control-label', 'Port'\n                        div className: 'col-sm-1',\n                            input id: 'mailbox-smtp-port', valueLink: @linkState('smtpPort'), type: 'text', className: 'form-control'\n\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-imap-server', className: 'col-sm-2 col-sm-offset-2 control-label', 'Receiving server'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-imap-server', valueLink: @linkState('imapServer'), type: 'text', className: 'form-control', placeholder: 'imap.provider.tld'\n                    label htmlFor: 'mailbox-imap-port', className: 'col-sm-1 control-label', 'Port'\n                    div className: 'col-sm-1',\n                        input id: 'mailbox-imap-port', valueLink: @linkState('imapPort'), type: 'text', className: 'form-control'\n\n                div className: 'form-group',\n                    div className: 'col-sm-offset-2 col-sm-5 text-right',\n                        if @props.initialMailboxConfig?\n                            button className: 'btn btn-cozy', onClick: @onRemove, 'Remove'\n                        button className: 'btn btn-cozy', onClick: @onSubmit, buttonLabel\n    onSubmit: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        mailboxValue = @state\n\n        if @props.initialMailboxConfig?\n            mailboxValue.id = @props.initialMailboxConfig.id\n            @getFlux().actions.mailbox.edit @state\n        else\n            @getFlux().actions.mailbox.create @state\n\n    onRemove: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        @getFlux().actions.mailbox.remove @props.initialMailboxConfig.id\n\n    componentWillReceiveProps: (props) ->\n\n        # prevents the form from changing during submission\n        if not props.isWaiting\n            # display the mailbox values\n            if props.initialMailboxConfig?\n                @setState props.initialMailboxConfig\n            else # reset the form if it is on 'new mailbox' page\n                @setState @getInitialState true\n\n\n    getInitialState: (forceDefault) ->\n        if @props.initialMailboxConfig and not forceDefault\n            return {\n                label: @props.initialMailboxConfig.label\n                name: @props.initialMailboxConfig.name\n                email: @props.initialMailboxConfig.email\n                password: @props.initialMailboxConfig.password\n                smtpServer: @props.initialMailboxConfig.smtpServer\n                smtpPort: @props.initialMailboxConfig.smtpPort\n                imapServer: @props.initialMailboxConfig.imapServer\n                imapPort: @props.initialMailboxConfig.imapPort\n            }\n        else\n            return {\n                label: ''\n                name: ''\n                email: ''\n                password: ''\n                smtpServer: ''\n                smtpPort: 993\n                imapServer: ''\n                imapPort: 465\n            }\n\n","React = require 'react/addons'\nImmutable = require 'immutable'\n_ = require 'underscore'\n\n{div, ul, li, a, span, i} = React.DOM\n\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = Menu = React.createClass\n    displayName: 'Menu'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not Immutable.is(nextProps.mailboxes, @props.mailboxes) or\n               not Immutable.is(nextProps.selectedMailbox, @props.selectedMailbox) or\n               not _.isEqual(nextProps.layout, @props.layout)\n\n    render: ->\n        selectedMailboxUrl = @buildUrl\n            direction: 'left'\n            action: 'mailbox.emails'\n            parameters: @props.selectedMailbox.id\n            fullWidth: true\n\n        # the button toggles the \"compose\" screen\n        if @props.layout.leftPanel.action is 'compose' or\n           @props.layout.rightPanel?.action is 'compose'\n            composeUrl = selectedMailboxUrl\n        else\n            composeUrl = @buildUrl\n                direction: 'right'\n                action: 'compose'\n                parameters: null\n                fullWidth: false\n\n        # the button toggle the \"new mailbox\" screen\n        if @props.layout.leftPanel.action is 'mailbox.new'\n            newMailboxUrl = selectedMailboxUrl\n        else\n            newMailboxUrl = @buildUrl\n                direction: 'left'\n                action: 'mailbox.new'\n                fullWidth: true\n\n        classes = classer\n            'hidden-xs hidden-sm': not @props.isResponsiveMenuShown\n            'col-xs-4 col-md-1': true\n\n        div id: 'menu', className: classes,\n            a href: composeUrl, className: 'menu-item compose-action',\n                i className: 'fa fa-edit'\n                span className: 'mailbox-label', 'Compose'\n\n            ul id: 'mailbox-list', className: 'list-unstyled',\n                @props.mailboxes.map (mailbox, key) =>\n                    @getMailboxRender mailbox, key\n                .toJS()\n\n            a href: newMailboxUrl, className: 'menu-item new-mailbox-action',\n                i className: 'fa fa-inbox'\n                span className: 'mailbox-label', 'New mailbox'\n\n\n    # renders a single mailbox and its submenu\n    getMailboxRender: (mailbox, key) ->\n        isSelected = (not @props.selectedMailbox and key is 0) \\\n                     or @props.selectedMailbox.id is mailbox.id\n\n        mailboxClasses = classer active: isSelected\n        url = @buildUrl\n            direction: 'left'\n            action: 'mailbox.emails'\n            parameters: mailbox.id\n            fullWidth: false\n\n        li className: mailboxClasses, key: key,\n            a href: url, className: 'menu-item ' + mailboxClasses,\n                i className: 'fa fa-inbox'\n                span className: 'badge', mailbox.unreadCount\n                span className: 'mailbox-label', mailbox.label\n\n            ul className: 'list-unstyled submenu',\n                a href: '#', className: 'menu-item',\n                    i className: 'fa fa-star'\n                    span className: 'badge', 3\n                    span className: 'mailbox-label', 'Favorite'\n                a href: '#', className: 'menu-item',\n                    i className: 'fa fa-send'\n                    span className: 'badge', ''\n                    span className: 'mailbox-label', 'Sent'\n                a href: '#', className: 'menu-item',\n                    i className: 'fa fa-trash-o'\n                    span className: 'badge', ''\n                    span className: 'mailbox-label', 'Trash'\n\n","###\n    We store flux instance a separate file to be able to access it from various\n    places of the application (i.e. utils)\n###\n\nFluxxor = require 'fluxxor'\n\n# Requires all the stores\nMailboxStore = require './stores/mailboxes'\nEmailStore = require './stores/emails'\nLayoutStore = require './stores/layout'\n\n# Builds up stores\nstores =\n    MailboxStore: new MailboxStore()\n    EmailStore: new EmailStore()\n    LayoutStore: new LayoutStore()\n\n# Requires and builds up actions\nactions =\n    layout: require './actions/layout_actions'\n    mailbox: require './actions/mailbox_actions'\n    email: require './actions/email_actions'\n\nflux = new Fluxxor.Flux stores, actions\n\nmodule.exports = flux\n","$ = require 'jquery'\nBackbone = require 'backbone'\nBackbone.$ = $\nReact = require 'react/addons'\n\n# Waits for the DOM to be ready\n$ ->\n\n    # set date locale here\n    #moment.locale 'fr'\n\n    # Fluxxor initialization (model)\n    flux = require './fluxxor'\n\n    # Routing management\n    Router = require './router'\n    @router = new Router flux: flux\n    window.router = @router\n\n    # Binds the router and flux to the React application\n    Application = require './components/application'\n    application = Application router: @router, flux: flux\n    React.renderComponent application, document.body\n\n\n    # Starts the application by initializing the router\n    Backbone.history.start()\n\n\n    # Makes this object immuable.\n    Object.freeze this if typeof Object.freeze is 'function'","###\n    Router mixin.\n    Aliases `buildUrl` and `buildClosePanelUrl`\n###\n\nrouter = window.router\n\nmodule.exports =\n\n    buildUrl: (options) ->\n        router.buildUrl.call router, options\n\n    buildClosePanelUrl: (direction) ->\n        router.buildClosePanelUrl.call router, direction\n\n\n\n","###\n    Routing component. We let Backbone handling browser stuff\n    and we format the varying parts of the layout.\n\n    URLs are built in the following way:\n        - a first part that represents the left panel\n        - a second part that represents the right panel\n        - if there is just one part, it represents a full width panel\n\n    Since Backbone.Router only handles one part, routes initialization mechanism\n    is overriden so we can post-process the second part of the URL.\n\n    Example: a defined pattern will generates two routes.\n        - `mailbox/a/path/:id`\n        - `mailbox/a/path/:id/*rightPanel`\n\n        Each pattern is actually the pattern itself plus the pattern itself and\n        another pattern.\n###\n\nBackbone = require 'backbone'\n_ = require 'underscore'\n\nmodule.exports = class Router extends Backbone.Router\n\n    patterns:\n        'mailbox.config':\n            pattern: 'mailbox/:id/config'\n            fluxAction: 'showConfigMailbox'\n        'mailbox.new':\n            pattern: 'mailbox/new'\n            fluxAction: 'showCreateMailbox'\n        'mailbox.imap.emails':\n            pattern: 'mailbox/:id/folder/:folder'\n            fluxAction: 'showEmailList'\n        'mailbox.emails':\n            pattern: 'mailbox/:id'\n            fluxAction: 'showEmailList'\n\n        'email':\n            pattern: 'email/:id'\n            fluxAction: 'showEmailThread'\n        'compose':\n            pattern: 'compose'\n            fluxAction: 'showComposeNewEmail'\n\n    # default route\n    routes: '': 'mailbox.emails'\n\n    previous: null\n    current: null\n\n    # we store a regexified version of each patterns\n    cachedPatterns: []\n\n    initialize: (options) ->\n\n        # defines the routes from the patterns\n        for key, route of @patterns\n\n            # caches each regex' pattern to avoid to recalculate them each time\n            @cachedPatterns.push\n                key: key\n                pattern: @_routeToRegExp route.pattern\n\n            # each pattern has two routes: full-width or with a right panel\n            @routes[route.pattern] = key\n            @routes[\"#{route.pattern}/*rightPanel\"] = key\n\n        # Backbone's magic\n        @_bindRoutes()\n\n        # Updates the LayoutStore for each matched request\n        @flux = options.flux\n        @flux.router = @\n        @on 'route', (name, args) =>\n\n            [leftPanelInfo, rightPanelInfo] = @_processSubRouting name, args\n\n            leftAction = @fluxActionFactory leftPanelInfo\n            rightAction = @fluxActionFactory rightPanelInfo\n\n            @previous = @current\n            @current = leftPanel: leftPanelInfo, rightPanel: rightPanelInfo\n\n            if leftAction?\n                leftAction leftPanelInfo, 'left'\n\n            if rightAction?\n                rightAction rightPanelInfo, 'right'\n            @trigger 'fluxRoute', @current\n\n\n    ###\n        Gets the Flux action to execute given a panel info.\n    ###\n    fluxActionFactory: (panelInfo) ->\n\n        fluxAction = null\n        pattern = @patterns[panelInfo?.action]\n\n        if pattern?\n            fluxAction = @flux.actions.layout[pattern.fluxAction]\n\n            if not fluxAction?\n                console.warn \"`#{pattern.fluxAction}` method not found in layout actions.\"\n\n            return fluxAction\n\n\n    ###\n        Extracts and matches the second part of the URl if it exists.\n    ###\n    _processSubRouting: (name, args) ->\n\n        # remove the last argument which is always `null`, not sure why\n        args.pop()\n\n        # next comes the rightPanel url if it exists\n        # or a leftPanel parameter there is not rightPanel\n        rightPanelString = args.pop()\n\n        # if left panel number of expected params is bigger what is left\n        # it means there are no right panel and that what we got before was a\n        # parameter of the left panel\n        params = @patterns[name].pattern.match(/:[\\w]+/g) or []\n        if params.length > args.length\n            args.push rightPanelString\n            rightPanelString = null\n\n        leftPanelParameters = args\n\n        # check all the routes for the second part of the URL\n        route = _.first _.filter @cachedPatterns, (element) ->\n            return element.pattern.test rightPanelString\n\n        # if a route has been found, we retrieve the params' value and format it\n        if route?\n            args = @_extractParameters route.pattern, rightPanelString\n            # remove the last argument which is alway `null`, not sure why\n            args.pop()\n            rightPanelInfo = action: route.key, parameters: args\n        else\n            rightPanelInfo = null\n\n        # normalize the leftPanelInfo\n        leftPanelInfo = action: name, parameters: leftPanelParameters\n        return [leftPanelInfo, rightPanelInfo]\n\n\n    ###\n        Builds a route from panel information.\n        Two modes:\n            - options has leftPanel and/or rightPanel attributes with the\n              panel(s) information.\n            - options has the panel information along a `direction` attribute\n              that can be `left` or `right`. It's the short version.\n    ###\n    buildUrl: (options) ->\n\n        # Loads the panel from the options or the current router status to keep\n        # track of current URLs\n        if options.leftPanel? or options.rightPanel?\n            leftPanelInfo = options.leftPanel or @current.leftPanel\n            rightPanelInfo = options.rightPanel or @current.rightPanel\n        else\n            # Handles short version\n            if options.direction?\n                if options.direction is 'left'\n                    leftPanelInfo = options\n                    rightPanelInfo = @current.rightPanel\n                else if options.direction is 'right'\n                    leftPanelInfo = @current.leftPanel\n                    rightPanelInfo = options\n                else\n                    console.warn '`direction` should be `left`, `right`.'\n            else\n                console.warn '`direction` parameter is mandatory when using short call.'\n\n        # if the `fullWidth` parameter is set, it ignores the right panel info\n        if (options.leftPanel? or options.direction is 'left') and options.fullWidth\n            if options.rightPanel? and options.direction is 'right'\n                console.warn \"You shouldn't use the fullWidth option with a right panel\"\n            rightPanelInfo = null\n\n        # Actual building\n        leftPart = @_getURLFromRoute leftPanelInfo\n        rightPart = @_getURLFromRoute rightPanelInfo\n\n        url = \"##{leftPart}\"\n        if rightPart? and rightPart.length > 0\n            url = \"#{url}/#{rightPart}\"\n\n        return url\n\n\n    ###\n        Closes a panel given a direction. If a full-width panel is closed,\n        the URL points to the default route.\n    ###\n    buildClosePanelUrl: (direction) ->\n\n        # If a left panel is closed, the right panel becomes full-width.\n        # If a full-width panel is closed, `@current.rightPanel` is null and\n        # the default route is loaded.\n        if direction is 'left' or direction is 'full'\n            panelInfo = @current.rightPanel\n        else\n            panelInfo = @current.leftPanel\n\n        if panelInfo?\n            panelInfo.direction = 'left'\n            panelInfo.fullWidth = true\n            return @buildUrl panelInfo\n        else\n            return '#' # loads the default route\n\n\n    # Builds the URL string from a route.\n    _getURLFromRoute: (panel) ->\n        if panel?\n            pattern = @patterns[panel.action].pattern\n\n            if panel.parameters? and not (panel.parameters instanceof Array)\n                panel.parameters = [panel.parameters]\n\n            # gets default values (if relevant) to ease `@buildUrl` usage\n            if (defaultParameters = @_getDefaultParameters(panel.action))?\n                # sets the parameters if they don't exist at all...\n                if not panel.parameters? or panel.parameters.length is 0\n                    panel.parameters = defaultParameters\n\n                # ... or adds them in the relevant place if only some of them\n                # are missing\n                else\n                    for defaultParameter, key in defaultParameters\n                        if not panel.parameters[key]?\n                            panel.parameters.splice key, 0, defaultParameter\n\n            # we default to empty array if there is no parameter in the route\n            parametersInPattern = pattern.match(/:[\\w]+/gi) or []\n\n            # the pattern is progressively filled with values\n            filledPattern = pattern\n            for paramInPattern, key in parametersInPattern\n                paramValue = panel.parameters[key]\n                filledPattern = filledPattern.replace paramInPattern, paramValue\n\n            return filledPattern\n        else\n            return ''\n\n    # Determines and gets the default parameters regarding a specific action\n    _getDefaultParameters: (action) ->\n        switch action\n            when 'mailbox.emails', 'mailbox.config'\n                defaultMailbox = @flux.store('MailboxStore').getDefault().id\n                defaultParameters = [defaultMailbox]\n            when 'mailbox.imap.emails'\n                defaultMailbox = @flux.store('MailboxStore').getDefault().id\n                defaultImapFolder = 'lala'\n                defaultParameters = [defaultMailbox, defaultImapFolder]\n            else\n                defaultParameters = null\n\n        return defaultParameters\n","request = require 'superagent'\nFluxxor = require 'fluxxor'\nImmutable = require 'immutable'\n\nmodule.exports = EmailStore = Fluxxor.createStore\n\n    actions:\n        'RECEIVE_RAW_EMAILS': '_receiveRawEmails'\n        'RECEIVE_RAW_EMAIL': '_receiveRawEmail'\n        'REMOVE_MAILBOX': '_removeMailbox'\n\n    initialize: ->\n        fixtures = [\n            {\n                id: \"f1a1dc66df94e19a0407c633e6003a832\"\n                createdAt: \"2014-07-11T08:38:23.000Z\"\n                docType: \"email\"\n                from: \"natacha@provider.com\"\n                hasAttachments: false\n                html: \"Hello, how are you ? bis\"\n                'imap-folder': \"orange-ID-folder1\"\n                inReplyTo: \"\"\n                mailbox: \"orange-ID2\"\n                reads: false\n                references: \"\"\n                subject: \"Hey back\"\n                text: \"Hello, how are you ? bis\"\n                to: \"bob@provider.com\"\n            },\n            {\n                id: \"f1a1dc66df94e19a0407c633e6003b272\"\n                createdAt: \"2014-07-11T08:38:23.000Z\"\n                docType: \"email\"\n                from: \"alice@provider.com\"\n                hasAttachments: false\n                html: \"Hello, how are you ? bis\"\n                'imap-folder': \"orange-ID-folder2\"\n                inReplyTo: \"\"\n                mailbox: \"orange-ID2\"\n                reads: false\n                references: \"\"\n                subject: \"Another email\"\n                text: \"Hello, how are you ? bis\"\n                to: \"bob@provider.com\"\n            },\n            {\n                id: \"f1a1dc66df94e19a0407c633e600112a2\"\n                createdAt: \"2014-07-11T08:38:23.000Z\"\n                docType: \"email\"\n                from: \"alice@provider.com\"\n                hasAttachments: false\n                html: \"Hello, how are you ?\"\n                'imap-folder': \"gmail-ID-folder1\"\n                inReplyTo: \"\"\n                mailbox: \"gmail-ID2\"\n                reads: false\n                references: \"\"\n                subject: \"Hello Cozy Email manager!\"\n                text: \"Hello, how are you ?\"\n                to: \"bob@provider.com\"\n            },\n            {\n                id: \"email-ID-12\"\n                createdAt: \"2014-07-11T08:38:23.000Z\"\n                docType: \"email\"\n                from: \"alice@provider.com\"\n                hasAttachments: false\n                html: \"Hello, how are you ? bis\"\n                'imap-folder': \"gmail-ID-folder1\"\n                inReplyTo: \"\"\n                mailbox: \"gmail-ID2\"\n                reads: false\n                references: \"\"\n                subject: \"First email of thread\"\n                text: \"Hello, how are you ? bis\"\n                to: \"bob@provider.com\"\n            },\n            {\n                id: \"f1a1dc66df94e19a0407c633e60037e52\"\n                createdAt: \"2014-07-11T08:38:23.000Z\"\n                docType: \"email\"\n                from: \"bob@provider.com\"\n                hasAttachments: false\n                html: \"Hello, how are you ? bis\"\n                'imap-folder': \"gmail-ID-folder1\"\n                inReplyTo: \"email-ID-12\"\n                mailbox: \"gmail-ID2\"\n                reads: false\n                references: \"\"\n                subject: \"Email in reply to\"\n                text: \"Hello, how are you ? bis\"\n                to: \"alice@provider.com\"\n            }\n\n        ]\n\n        emails = []\n        if not window.mailboxes? or window.mailboxes.length is 0\n            emails = fixtures\n\n        # Create an OrderedMap with email id as index\n        @emails = Immutable.Sequence emails\n                    .mapKeys (_, email) -> email.id\n                    .map (email) -> Immutable.Map email\n                    .toOrderedMap()\n\n    getAll: -> return @emails\n\n    getByID: (emailID) -> @emails.get(emailID) or null\n\n    getEmailsByMailbox: (mailboxID) ->\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\n        @emails.filter (email) ->\n            email.mailbox is mailboxID\n        .toOrderedMap()\n\n    getEmailsByThread: (emailID) ->\n        idsToLook = [emailID]\n        thread = []\n        while idToLook = idsToLook.pop()\n            thread.push @getByID idToLook\n            temp = @emails.filter (email) -> email.inReplyTo is idToLook\n            idsToLook = idsToLook.concat temp.map((item) -> item.id).toArray()\n\n        return thread\n\n    _receiveRawEmails: (emails) ->\n        @_receiveRawEmail email, true for email in emails\n        @emit 'change'\n\n    _receiveRawEmail: (email, silent = false) ->\n        # create or update\n        @emails = @emails.set email.id, email\n\n        # strict equality check because silent is equal to action's name\n        # when not specified\n        @emit 'change' if silent isnt true\n\n    _removeMailbox: (mailboxID) ->\n        emails = @getEmailsByMailbox mailboxID\n        @emails = @emails.withMutations (map) ->\n            emails.forEach (email) -> map.remove email.id\n\n        @emit 'change'\n\n","Fluxxor = require 'fluxxor'\n\nmodule.exports = LayoutStore = Fluxxor.createStore\n\n    actions:\n        'SHOW_MENU_RESPONSIVE': '_shownResponsiveMenu'\n        'HIDE_MENU_RESPONSIVE': '_hideResponsiveMenu'\n\n    initialize: ->\n        @responsiveMenuShown = false\n\n    _shownResponsiveMenu: ->\n        @responsiveMenuShown = true\n        @emit 'change'\n\n    _hideResponsiveMenu: ->\n        @responsiveMenuShown = false\n        @emit 'change'\n\n    isMenuShown: -> return @responsiveMenuShown\n\n","request = require 'superagent'\nFluxxor = require 'fluxxor'\nImmutable = require 'immutable'\n\nmodule.exports = MailboxStore = Fluxxor.createStore\n\n    actions:\n        'ADD_MAILBOX': 'onCreate'\n        'REMOVE_MAILBOX': 'onRemove'\n        'EDIT_MAILBOX': 'onEdit'\n        'SELECT_MAILBOX': 'onSelectMailbox'\n        'NEW_MAILBOX_WAITING': 'onNewMailboxWaiting'\n        'NEW_MAILBOX_ERROR': 'onNewMailboxError'\n\n    initialize: ->\n        fixtures = [\n            {\n                id: \"gmail-ID2\"\n                email: \"randomlogin@randomprovider.tld\"\n                imapPort: 465\n                imapServer: \"imap.gmail.com\"\n                label: \"Gmail\"\n                name: \"Random Name\"\n                password: \"randompassword\"\n                smtpPort: 993\n                smtpServer: \"smtp.gmail.com\"\n            },\n            {\n                id: \"orange-ID2\"\n                email: \"randomlogin@randomprovider.tld\"\n                imapPort: 465\n                imapServer: \"imap.orange.fr\"\n                label: \"Orange\"\n                name: \"Random Name\"\n                password: \"randompassword\"\n                smtpPort: 993\n                smtpServer: \"smtp.orange.fr\"\n            }\n        ]\n\n        mailboxes = window.mailboxes or fixtures\n        mailboxes = fixtures if mailboxes.length is 0\n\n        # Create an OrderedMap with mailbox id as index\n        @mailboxes = Immutable.Sequence mailboxes\n                        .mapKeys (_, mailbox) -> mailbox.id\n                        .map (mailbox) -> Immutable.Map mailbox\n                        .toOrderedMap()\n\n        @selectedMailbox = null\n        @newMailboxWaiting = false\n        @newMailboxError = null\n\n\n    onCreate: (mailbox) ->\n        @mailboxes = @mailboxes.set mailbox.id, mailbox\n        @emit 'change'\n\n    onSelectMailbox: (mailboxID) ->\n        @selectedMailbox = @mailboxes.get(mailboxID) or null\n        @emit 'change'\n\n    onNewMailboxWaiting: (payload) ->\n        @newMailboxWaiting = payload\n        @emit 'change'\n\n    onNewMailboxError: (error) ->\n        @newMailboxError = error\n        @emit 'change'\n\n    onEdit: (mailbox) ->\n        @mailboxes = @mailboxes.set mailbox.id, mailbox\n        @selectedMailbox = @mailboxes.get mailbox.id\n        @emit 'change'\n\n    onRemove: (mailboxID) ->\n        @mailboxes = @mailboxes.delete mailboxID\n        @selectedMailbox = @getDefault()\n        @emit 'change'\n\n    getAll: ->\n        @mailboxes = @mailboxes.sortBy (mailbox) -> mailbox.label\n                    .toOrderedMap()\n\n        return @mailboxes\n    getDefault: -> return @mailboxes.first() or null\n    getSelectedMailbox: -> return @selectedMailbox or @getDefault()\n    getError: -> return @newMailboxError\n    isWaiting: -> return @newMailboxWaiting\n\n\n","request = require 'superagent'\n\n# The flux instance is required in each method because when this file is loaded\n# the flux instance is being created.\n\nmodule.exports =\n\n    fetchEmailsByMailbox: (mailboxID) ->\n        flux = require '../fluxxor'\n        request.get \"mailbox/#{mailboxID}/emails\"\n               .set 'Accept', 'application/json'\n               .end (res) ->\n            if res.ok\n                flux.actions.email.receiveRawEmails res.body\n            else\n                console.log \"Something went wrong -- #{res.body}\"\n\n\n    fetchEmailThread: (emailID) ->\n        flux = require '../fluxxor'\n        request.get \"email/#{emailID}\"\n               .set 'Accept', 'application/json'\n               .end (res) ->\n            if res.ok\n                flux.actions.email.receiveRawEmail res.body\n            else\n                console.log \"Something went wrong -- #{res.body}\"\n\n    createMailbox: (mailbox, callback) ->\n\n        # TODO: validation & sanitization\n\n        request.post 'mailbox'\n               .send mailbox\n               .set 'Accept', 'application/json'\n               .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback res.body, null\n\n    editMailbox: (mailbox, callback) ->\n\n        # TODO: validation & sanitization\n\n        request.put \"mailbox/#{mailbox.id}\"\n               .send mailbox\n               .set 'Accept', 'application/json'\n               .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback res.body, null\n\n    removeMailbox: (mailboxID) ->\n\n        request.del \"mailbox/#{mailboxID}\"\n               .set 'Accept', 'application/json'\n               .end (res) ->\n                    # nothing\n"]}