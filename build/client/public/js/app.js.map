{"version":3,"file":"public/js/app.js","sources":["app/AppDispatcher.coffee","app/actions/AccountActionCreator.coffee","app/actions/LayoutActionCreator.coffee","app/actions/MessageActionCreator.coffee","app/actions/SearchActionCreator.coffee","app/actions/SettingsActionCreator.coffee","app/components/account-config.coffee","app/components/alert.coffee","app/components/application.coffee","app/components/compose.coffee","app/components/conversation.coffee","app/components/mailbox-list.coffee","app/components/menu.coffee","app/components/message-list.coffee","app/components/message.coffee","app/components/search-form.coffee","app/components/settings.coffee","app/constants/AppConstants.coffee","app/initialize.coffee","app/libs/PanelRouter.coffee","app/libs/flux/dispatcher/Dispatcher.coffee","app/libs/flux/invariant.js","app/libs/flux/store/Store.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/mixins/RouterMixin.coffee","app/mixins/StoreWatchMixin.coffee","app/router.coffee","app/stores/AccountStore.coffee","app/stores/LayoutStore.coffee","app/stores/MessageStore.coffee","app/stores/SearchStore.coffee","app/stores/SettingsStore.coffee","app/utils/MessageUtils.coffee","app/utils/XHRUtils.coffee","app/utils/translators/AccountTranslator.coffee"],"names":[],"mappings":"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","sourcesContent":["Dispatcher = require './libs/flux/dispatcher/Dispatcher'\n{PayloadSources} = require './constants/AppConstants'\n\n###\n    Custom dispatcher class to add semantic method.\n###\nclass AppDispatcher extends Dispatcher\n\n    handleViewAction: (action) ->\n        payload =\n            source: PayloadSources.VIEW_ACTION\n            action: action\n\n        @dispatch payload\n\n    handleServerAction: (action) ->\n        payload =\n            source: PayloadSources.SERVER_ACTION\n            action: action\n\n        @dispatch payload\n\n\nmodule.exports = new AppDispatcher()","XHRUtils = require '../utils/XHRUtils'\nAppDispatcher = require '../AppDispatcher'\n{ActionTypes} = require '../constants/AppConstants'\n\nAccountStore = require '../stores/AccountStore'\n\nmodule.exports = AccountActionCreator =\n\n    create: (inputValues) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        XHRUtils.createAccount inputValues, (error, account) ->\n            # set a timeout to simulate the \"waiting\" state\n            setTimeout ->\n                AccountActionCreator._setNewAccountWaitingStatus false\n                if error?\n                    AccountActionCreator._setNewAccountError error\n                else\n                   AppDispatcher.handleViewAction\n                        type: ActionTypes.ADD_ACCOUNT\n                        value: account\n            , 2000\n\n    edit: (inputValues, accountID) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        account = AccountStore.getByID accountID\n        newAccount = account.mergeDeep inputValues\n\n        XHRUtils.editAccount newAccount, (error, rawAccount) ->\n            # set a timeout to simulate the \"waiting\" state\n            setTimeout ->\n                AccountActionCreator._setNewAccountWaitingStatus false\n                if error?\n                    AccountActionCreator._setNewAccountError error\n                else\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.EDIT_ACCOUNT\n                        value: rawAccount\n            , 2000\n\n\n    remove: (accountID) ->\n       AppDispatcher.handleViewAction\n            type: ActionTypes.REMOVE_ACCOUNT\n            value: accountID\n        XHRUtils.removeAccount accountID\n        window.router.navigate '', true\n\n    _setNewAccountWaitingStatus: (status) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_WAITING\n            value: status\n\n    _setNewAccountError: (errorMessage) ->\n       AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_ERROR\n            value: errorMessage\n\n    selectAccount: (accountID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SELECT_ACCOUNT\n            value: accountID\n","XHRUtils = require '../utils/XHRUtils'\n\nAccountStore  = require '../stores/AccountStore'\nLayoutStore   = require '../stores/LayoutStore'\n\nAppDispatcher = require '../AppDispatcher'\n\n{ActionTypes, AlertLevel} = require '../constants/AppConstants'\n\nAccountActionCreator = require './AccountActionCreator'\nMessageActionCreator = require './MessageActionCreator'\nSearchActionCreator = require './SearchActionCreator'\n\nmodule.exports = LayoutActionCreator =\n\n    showReponsiveMenu: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SHOW_MENU_RESPONSIVE\n            value: null\n\n    hideReponsiveMenu: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.HIDE_MENU_RESPONSIVE\n            value: null\n\n    alert: (level, message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DISPLAY_ALERT\n            value:\n                level: level\n                message: message\n\n    alertSuccess: (message) -> LayoutActionCreator.alert AlertLevel.SUCCESS, message\n    alertInfo:    (message) -> LayoutActionCreator.alert AlertLevel.INFO, message\n    alertWarning: (message) -> LayoutActionCreator.alert AlertLevel.WARNING, message\n    alertError:   (message) -> LayoutActionCreator.alert AlertLevel.ERROR, message\n\n    showMessageList: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n        accountID = panelInfo.parameters[0]\n        mailboxID = panelInfo.parameters[1]\n        AccountActionCreator.selectAccount accountID\n\n        XHRUtils.fetchMessagesByFolder mailboxID, (err, rawMessage) ->\n            if err?\n                LayoutActionCreator.alertError err\n            else\n                MessageActionCreator.receiveRawMessages rawMessage\n\n    showConversation: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n        XHRUtils.fetchConversation panelInfo.parameters[0], (err, rawMessage) ->\n\n            if err?\n                LayoutActionCreator.alertError err\n            else\n                MessageActionCreator.receiveRawMessage rawMessage\n                # if there isn't a selected account (page loaded directly),\n                # select the message's account\n                selectedAccount = AccountStore.getSelected()\n                if  not selectedAccount? and rawMessage?.mailbox\n                    AccountActionCreator.selectAccount rawMessage.mailbox\n\n\n    showComposeNewMessage: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    showCreateAccount: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n        AccountActionCreator.selectAccount -1\n\n    showConfigAccount: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n        AccountActionCreator.selectAccount panelInfo.parameters[0]\n\n    showSearch: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount -1\n\n        [query, page] = panelInfo.parameters\n\n        SearchActionCreator.setQuery query\n\n        XHRUtils.search query, page, (err, results) ->\n            if err?\n                console.log err\n            else\n                SearchActionCreator.receiveRawSearchResults results\n\n    showSettings: (panelInfo, direction) ->\n        LayoutActionCreator.hideReponsiveMenu()\n\n\n","AppDispatcher        = require '../AppDispatcher'\n{ActionTypes}        = require '../constants/AppConstants'\nXHRUtils             = require '../utils/XHRUtils'\n\n\nmodule.exports =\n\n    receiveRawMessages: (messages) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\n            value: messages\n\n    receiveRawMessage: (message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGE\n            value: message\n\n    send: (message, callback) ->\n        XHRUtils.messageSend message, (error, message) ->\n            if not(error?)\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.SEND_MESSAGE\n                    value: message\n            callback error\n","AppDispatcher = require '../AppDispatcher'\n{ActionTypes} = require '../constants/AppConstants'\n\nmodule.exports = SearchActionCreator =\n\n    setQuery: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_SEARCH_QUERY\n            value: query\n\n    receiveRawSearchResults: (results) ->\n\n        # first clear the previous results\n        SearchActionCreator.clearSearch false\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_SEARCH_RESULTS\n            value: results\n\n    clearSearch: (clearQuery = true) ->\n        if clearQuery then SearchActionCreator.setQuery \"\"\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CLEAR_SEARCH_RESULTS\n            value: null\n\n","XHRUtils = require '../utils/XHRUtils'\nAppDispatcher = require '../AppDispatcher'\n{ActionTypes} = require '../constants/AppConstants'\n\nSettingsStore = require '../stores/SettingsStore'\n\nmodule.exports = SettingsActionCreator =\n\n    edit: (inputValues) ->\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SETTINGS_UPDATED\n            value: inputValues\n\n\n","{div, h3, form, label, input, button} = React.DOM\nclasser = React.addons.classSet\n\nAccountActionCreator = require '../actions/AccountActionCreator'\n\nmodule.exports = React.createClass\n    displayName: 'AccountConfig'\n\n    mixins: [\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    render: ->\n        titleLabel = if @props.initialAccountConfig? then t \"mailbox edit\" else t \"mailbox new\"\n\n        if @props.isWaiting then buttonLabel = 'Saving...'\n        else if @props.initialAccountConfig? then buttonLabel = 'Edit'\n        else buttonLabel = t \"mailbox add\"\n\n        div id: 'mailbox-config',\n            h3 className: null, titleLabel\n\n            if @props.error\n                div className: 'error', @props.error\n\n            form className: 'form-horizontal',\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-label', className: 'col-sm-2 col-sm-offset-2 control-label', t \"mailbox label\"\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-label', valueLink: @linkState('label'), type: 'text', className: 'form-control', placeholder: t \"mailbox name short\"\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-name', className: 'col-sm-2 col-sm-offset-2 control-label', t \"mailbox user name\"\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-name', valueLink: @linkState('name'), type: 'text', className: 'form-control', placeholder: t \"mailbox user fullname\"\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-email-address', className: 'col-sm-2 col-sm-offset-2 control-label', t \"mailbox address\"\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-email-address', valueLink: @linkState('login'), type: 'email', className: 'form-control', placeholder: t \"mailbox address placeholder\"\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-password', className: 'col-sm-2 col-sm-offset-2 control-label', t 'mailbox password'\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-password', valueLink: @linkState('password'), type: 'password', className: 'form-control'\n\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-smtp-server', className: 'col-sm-2 col-sm-offset-2 control-label', t \"mailbox sending server\"\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-smtp-server', valueLink: @linkState('smtpServer'), type: 'text', className: 'form-control', placeholder: 'smtp.provider.tld'\n                    label htmlFor: 'mailbox-smtp-port', className: 'col-sm-1 control-label', 'Port'\n                        div className: 'col-sm-1',\n                            input id: 'mailbox-smtp-port', valueLink: @linkState('smtpPort'), type: 'text', className: 'form-control'\n\n                div className: 'form-group',\n                    label htmlFor: 'mailbox-imap-server', className: 'col-sm-2 col-sm-offset-2 control-label', t \"mailbox receiving server\"\n                    div className: 'col-sm-3',\n                        input id: 'mailbox-imap-server', valueLink: @linkState('imapServer'), type: 'text', className: 'form-control', placeholder: 'imap.provider.tld'\n                    label htmlFor: 'mailbox-imap-port', className: 'col-sm-1 control-label', 'Port'\n                    div className: 'col-sm-1',\n                        input id: 'mailbox-imap-port', valueLink: @linkState('imapPort'), type: 'text', className: 'form-control'\n\n                div className: 'form-group',\n                    div className: 'col-sm-offset-2 col-sm-5 text-right',\n                        if @props.initialAccountConfig?\n                            button className: 'btn btn-cozy', onClick: @onRemove, t \"mailbox remove\"\n                        button className: 'btn btn-cozy', onClick: @onSubmit, buttonLabel\n    onSubmit: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        accountValue = @state\n        if @props.initialAccountConfig?\n            AccountActionCreator.edit accountValue, @props.initialAccountConfig.get 'id'\n        else\n            AccountActionCreator.create accountValue\n\n    onRemove: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        AccountActionCreator.remove @props.initialAccountConfig.get 'id'\n\n    componentWillReceiveProps: (props) ->\n        # prevents the form from changing during submission\n        if not props.isWaiting\n            # display the account values\n            if props.initialAccountConfig?\n                @setState props.initialAccountConfig.toJS()\n            else # reset the form if it is on 'new account' page\n                @setState @getInitialState true\n\n\n    getInitialState: (forceDefault) ->\n        if @props.initialAccountConfig? and not forceDefault\n            return {\n                label: @props.initialAccountConfig.get 'label'\n                name: @props.initialAccountConfig.get 'name'\n                login: @props.initialAccountConfig.get 'login'\n                password: @props.initialAccountConfig.get 'password'\n                smtpServer: @props.initialAccountConfig.get 'smtpServer'\n                smtpPort: @props.initialAccountConfig.get 'smtpPort'\n                imapServer: @props.initialAccountConfig.get 'imapServer'\n                imapPort: @props.initialAccountConfig.get 'imapPort'\n            }\n        else\n            return {\n                label: ''\n                name: ''\n                login: ''\n                password: ''\n                smtpServer: ''\n                smtpPort: 993\n                imapServer: ''\n                imapPort: 465\n            }\n\n","{div, button, span, strong} = React.DOM\n{AlertLevel}     = require '../constants/AppConstants'\n\nmodule.exports = React.createClass\n    displayName: 'Alert'\n\n    render: ->\n\n        alert = @props.alert\n        if alert.level?\n            levels = {}\n            levels[AlertLevel.SUCCESS] = 'alert-success'\n            levels[AlertLevel.INFO]    = 'alert-info'\n            levels[AlertLevel.WARNING] = 'alert-warning'\n            levels[AlertLevel.ERROR]   = 'alert-danger'\n\n        div className: 'row',\n            if alert.level?\n                div className: \"alert #{levels[alert.level]} alert-dismissible\", role: \"alert\",\n                    button type: \"button\", className: \"close\", \"data-dismiss\": \"alert\",\n                        span 'aria-hidden': \"true\", \"×\"\n                        span className: \"sr-only\", t \"app alert close\"\n                    strong> null, alert.message\n","# React components\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\nAccountConfig = require './account-config'\nAlert         = require './alert'\nCompose       = require './compose'\nConversation  = require './conversation'\nMailboxList   = require './mailbox-list'\nMenu          = require './menu'\nMessageList   = require './message-list'\nSettings      = require './settings'\nSearchForm = require './search-form'\n\n# React addons\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\nclasser = React.addons.classSet\n\n# React Mixins\nRouterMixin = require '../mixins/RouterMixin'\nStoreWatchMixin = require '../mixins/StoreWatchMixin'\n\n# Flux stores\nAccountStore  = require '../stores/AccountStore'\nMessageStore  = require '../stores/MessageStore'\nLayoutStore   = require '../stores/LayoutStore'\nSettingsStore = require '../stores/SettingsStore'\nSearchStore   = require '../stores/SearchStore'\n\n# Flux actions\nLayoutActionCreator = require '../actions/LayoutActionCreator'\n\n###\n    This component is the root of the React tree.\n\n    It has two functions:\n        - building the layout based on the router\n        - listening for changes in  the model (Flux stores)\n          and re-render accordingly\n\n    About routing: it uses Backbone.Router as a source of truth for the layout.\n    (based on: https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\n###\nmodule.exports = Application = React.createClass\n    displayName: 'Application'\n\n    mixins: [\n        StoreWatchMixin [AccountStore, MessageStore, LayoutStore, SearchStore]\n        RouterMixin\n    ]\n\n    render: ->\n        # Shortcut\n        layout = @props.router.current\n        if not layout?\n            return div null, t \"app loading\"\n\n        # is the layout a full-width panel or two panels sharing the width\n        isFullWidth = not layout.rightPanel?\n\n        leftPanelLayoutMode = if isFullWidth then 'full' else 'left'\n\n        # css classes are a bit long so we use a subfunction to get them\n        panelClasses = @getPanelClasses isFullWidth\n\n        showMailboxConfigButton = @state.selectedAccount? and\n                                  layout.leftPanel.action isnt 'account.new'\n        if showMailboxConfigButton\n            # the button toggles the mailbox config\n            if layout.leftPanel.action is 'account.config'\n                configMailboxUrl = @buildUrl\n                    direction: 'left'\n                    action: 'account.mailbox.messages'\n                    parameters: @state.selectedAccount.get 'id'\n                    fullWidth: true\n            else\n                configMailboxUrl = @buildUrl\n                    direction: 'left'\n                    action: 'account.config'\n                    parameters: @state.selectedAccount.get 'id'\n                    fullWidth: true\n\n        responsiveBackUrl = @buildUrl\n            leftPanel: layout.leftPanel\n            fullWidth: true\n\n        # classes for page-content\n        responsiveClasses = classer\n            'col-xs-12 col-md-11': true\n            'pushed': @state.isResponsiveMenuShown\n\n        alert = @state.alertMessage\n\n        # Actual layout\n        div className: 'container-fluid',\n            div className: 'row',\n\n                # Menu is self-managed because this part of the layout\n                # is always the same.\n                Menu\n                    accounts: @state.accounts\n                    selectedAccount: @state.selectedAccount\n                    isResponsiveMenuShown: @state.isResponsiveMenuShown\n                    layout: @props.router.current\n                    favoriteMailboxes: @state.favoriteMailboxes\n\n                div id: 'page-content', className: responsiveClasses,\n\n                    # Display feedback\n                    Alert { alert }\n\n                    # The quick actions bar shoud be moved in its own component\n                    # when its feature is implemented.\n                    div id: 'quick-actions', className: 'row',\n                        # responsive menu icon\n                        if layout.rightPanel\n                            a href: responsiveBackUrl, className: 'responsive-handler hidden-md hidden-lg',\n                                i className: 'fa fa-chevron-left hidden-md hidden-lg pull-left'\n                                t \"app back\"\n                        else\n                            a onClick: @onResponsiveMenuClick, className: 'responsive-handler hidden-md hidden-lg',\n                                i className: 'fa fa-bars pull-left'\n                                t \"app menu\"\n\n\n                        div className: 'col-md-6 hidden-xs hidden-sm pull-left',\n                            form className: 'form-inline col-md-12',\n                                MailboxList\n                                    selectedAccount: @state.selectedAccount\n                                    mailboxes: @state.mailboxes\n                                    selectedMailbox: @state.selectedMailbox\n                                SearchForm query: @state.searchQuery\n\n                        div id: 'contextual-actions', className: 'col-md-6 hidden-xs hidden-sm pull-left text-right',\n                            ReactCSSTransitionGroup transitionName: 'fade',\n                                if showMailboxConfigButton\n                                    a href: configMailboxUrl, className: 'btn btn-cozy mailbox-config',\n                                        i className: 'fa fa-cog'\n\n                    # Two layout modes: one full-width panel or two panels\n                    div id: 'panels', className: 'row',\n                        div className: panelClasses.leftPanel, key: 'left-panel-' + layout.leftPanel.action + '-' + layout.leftPanel.parameters.join('-'),\n                            @getPanelComponent layout.leftPanel, leftPanelLayoutMode\n                        if not isFullWidth and layout.rightPanel?\n                            div className: panelClasses.rightPanel, key: 'right-panel-' + layout.rightPanel.action + '-' + layout.rightPanel.parameters.join('-'),\n                                @getPanelComponent layout.rightPanel, 'right'\n\n\n    # Panels CSS classes are a bit long so we get them from a this subfunction\n    # Also, it manages transitions between screens by adding relevant classes\n    getPanelClasses: (isFullWidth) ->\n        previous = @props.router.previous\n        layout = @props.router.current\n        left = layout.leftPanel\n        right = layout.rightPanel\n\n        # Two cases: the layout has a full-width panel...\n        if isFullWidth\n            classes = leftPanel: 'panel col-xs-12 col-md-12'\n\n            # custom case for mailbox.config action (top right cog button)\n            if previous? and left.action is 'account.config'\n                classes.leftPanel += ' moveFromTopRightCorner'\n\n            # (default) when full-width panel is shown after a two-panels structure\n            else if previous? and previous.rightPanel\n\n                # if the full-width panel was on right right before, it expands\n                if previous.rightPanel.action is layout.leftPanel.action and\n                   _.difference(previous.rightPanel.parameters, layout.leftPanel.parameters).length is 0\n                    classes.leftPanel += ' expandFromRight'\n\n            # (default) when full-width panel is shown after a full-width panel\n            else if previous?\n                classes.leftPanel += ' moveFromLeft'\n\n\n        # ... or a two panels layout.\n        else\n            classes =\n                leftPanel: 'panel col-xs-12 col-md-6 hidden-xs hidden-sm'\n                rightPanel: 'panel col-xs-12 col-md-6'\n\n            # we don't animate in the first render\n            if previous?\n                wasFullWidth = not previous.rightPanel?\n\n                # transition from full-width to two-panels layout\n                if wasFullWidth and not isFullWidth\n\n                    # expanded right panel collapses\n                    if previous.leftPanel.action is right.action and\n                       _.difference(previous.leftPanel.parameters, right.parameters).length is 0\n                        classes.leftPanel += ' moveFromLeft'\n                        classes.rightPanel += ' slide-in-from-left'\n\n                    # (default) opens right panel sliding from the right\n                    else\n                        classes.rightPanel += ' slide-in-from-right'\n\n                # (default) opens right panel sliding from the left\n                else if not isFullWidth\n                    classes.rightPanel += ' slide-in-from-left'\n\n        return classes\n\n\n    # Factory of React components for panels\n    getPanelComponent: (panelInfo, layout) ->\n\n        # -- Generates a list of messages for a given account and mailbox\n        if panelInfo.action is 'account.mailbox.messages'\n            accountID = panelInfo.parameters[0]\n            mailboxID = panelInfo.parameters[1]\n            pageNum   = panelInfo.parameters[2] ? 1\n            numPerPage      = @state.settings.get 'messagesPerPage'\n            firstOfPage     = ( pageNum - 1 ) * numPerPage\n            lastOfPage      = ( pageNum * numPerPage )\n\n            # gets the selected message if any\n            openMessage = null\n            direction = if layout is 'left' then 'rightPanel' else 'leftPanel'\n            otherPanelInfo = @props.router.current[direction]\n            if otherPanelInfo?.action is 'message'\n                openMessage = MessageStore.getByID otherPanelInfo.parameters[0]\n\n            messagesCount = MessageStore.getMessagesCountByMailbox mailboxID\n            return MessageList\n                messages: MessageStore.getMessagesByMailbox mailboxID, firstOfPage, lastOfPage\n                messagesCount: messagesCount\n                accountID: accountID\n                mailboxID: mailboxID\n                layout: layout\n                openMessage: openMessage\n                messagesPerPage: numPerPage\n                pageNum: pageNum\n                emptyListMessage: t 'list empty'\n                counterMessage: t 'list count', messagesCount\n                buildPaginationUrl: (numPage) =>\n                    @buildUrl\n                        direction: 'left'\n                        action: 'account.mailbox.messages'\n                        parameters: [accountID, mailboxID, numPage]\n\n        # -- Generates a configuration window for a given account\n        else if panelInfo.action is 'account.config'\n            initialAccountConfig = @state.selectedAccount\n            error = AccountStore.getError()\n            isWaiting = AccountStore.isWaiting()\n            return AccountConfig {layout, error, isWaiting, initialAccountConfig}\n\n        # -- Generates a configuration window to create a new account\n        else if panelInfo.action is 'account.new'\n            error = AccountStore.getError()\n            isWaiting = AccountStore.isWaiting()\n            return AccountConfig {layout, error, isWaiting}\n\n        # -- Generates a conversation\n        else if panelInfo.action is 'message'\n            message = MessageStore.getByID panelInfo.parameters[0]\n            conversation = MessageStore.getMessagesByConversation panelInfo.parameters[0]\n            selectedAccount = @state.selectedAccount\n            return Conversation {message, conversation, selectedAccount, layout}\n\n        # -- Generates the new message composition form\n        else if panelInfo.action is 'compose'\n            selectedAccount = @state.selectedAccount\n            accounts = @state.accounts\n            message  = null\n            action   = null\n            return Compose {selectedAccount, layout, accounts, message, action}\n\n        # -- Display the settings form\n        else if panelInfo.action is 'settings'\n            settings = @state.settings\n            return Settings {settings}\n\n        # -- Generates a message list based on search result\n        else if panelInfo.action is 'search'\n            accountID = null\n            mailboxID = null\n            pageNum   = panelInfo.parameters[1]\n            numPerPage      = @state.settings.get 'messagesPerPage'\n            firstOfPage     = ( pageNum - 1 ) * numPerPage\n            lastOfPage      = ( pageNum * numPerPage )\n\n            # gets the selected message if any\n            openMessage = null\n            direction = if layout is 'left' then 'rightPanel' else 'leftPanel'\n            otherPanelInfo = @props.router.current[direction]\n            if otherPanelInfo?.action is 'message'\n                openMessage = MessageStore.getByID otherPanelInfo.parameters[0]\n\n            results = SearchStore.getResults()\n            return MessageList\n                messages: results\n                messagesCount: results.count()\n                accountID: accountID\n                mailboxID: mailboxID\n                layout: layout\n                openMessage: openMessage\n                messagesPerPage: numPerPage\n                pageNum: pageNum\n                emptyListMessage: t 'list search empty', query: @state.searchQuery\n                counterMessage: t 'list search count', results.count()\n                buildPaginationUrl: (numPage) =>\n                    @buildUrl\n                        direction: 'left'\n                        action: 'search'\n                        parameters: [@state.searchQuery, numPage]\n\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\n        else return div null, 'Unknown component'\n\n    getStateFromStores: ->\n\n        selectedAccount = AccountStore.getSelected()\n        selectedAccountID = selectedAccount?.get('id') or null\n\n        leftPanelInfo = @props.router.current?.leftPanel\n        if leftPanelInfo?.action is 'account.mailbox.messages'\n            selectedMailboxID = leftPanelInfo.parameters[1]\n        else\n            selectedMailboxID = null\n\n        return {\n            accounts: AccountStore.getAll()\n            selectedAccount: selectedAccount\n            isResponsiveMenuShown: LayoutStore.isMenuShown()\n            alertMessage: LayoutStore.getAlert()\n            mailboxes: AccountStore.getSelectedMailboxes true\n            selectedMailbox: AccountStore.getSelectedMailbox selectedMailboxID\n            favoriteMailboxes: AccountStore.getSelectedFavorites()\n            searchQuery: SearchStore.getQuery()\n            settings: SettingsStore.get()\n        }\n\n\n    # Listens to router changes. Renders the component on changes.\n    componentWillMount: ->\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\n        # to rebind its scope on the fly\n        @onRoute = (params) =>\n            {leftPanelInfo, rightPanelInfo} = params\n            @forceUpdate()\n\n        @props.router.on 'fluxRoute', @onRoute\n\n\n    # Stops listening to router changes\n    componentWillUnmount: ->\n        @props.router.off 'fluxRoute', @onRoute\n\n    # Toggle the menu in responsive mode\n    onResponsiveMenuClick: (event) ->\n        event.preventDefault()\n        if @state.isResponsiveMenuShown\n            LayoutActionCreator.hideReponsiveMenu()\n        else\n            LayoutActionCreator.showReponsiveMenu()\n","{div, h3, a, i, textarea, form, label, button, span, ul, li, input} = React.DOM\nclasser = React.addons.classSet\nAccountStore = require '../stores/AccountStore'\n\n{ComposeActions} = require '../constants/AppConstants'\n\nMessageUtils = require '../utils/MessageUtils'\n\nLayoutActionCreator  = require '../actions/LayoutActionCreator'\nMessageActionCreator = require '../actions/MessageActionCreator'\n\nRouterMixin = require '../mixins/RouterMixin'\n\nmodule.exports = Compose = React.createClass\n    displayName: 'Compose'\n\n    mixins: [\n        RouterMixin,\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    render: ->\n\n        expandUrl = @buildUrl\n            direction: 'left'\n            action: 'compose'\n            fullWidth: true\n\n        collapseUrl = @buildUrl\n            leftPanel:\n                action: 'account.mailbox.messages'\n                parameters: @state.currentAccount?.get 'id'\n            rightPanel:\n                action: 'compose'\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        classLabel = 'col-sm-2 col-sm-offset-0 control-label'\n        classInput = 'col-sm-8'\n\n        accounts = AccountStore.getAll()\n\n        div id: 'email-compose',\n            h3 null,\n                a href: closeUrl, className: 'close-email hidden-xs hidden-sm',\n                    i className:'fa fa-times'\n                t 'compose'\n                if @props.layout isnt 'full'\n                    a href: expandUrl, className: 'expand hidden-xs hidden-sm',\n                        i className: 'fa fa-arrows-h'\n                else\n                    a href: collapseUrl, className: 'close-email pull-right',\n                        i className:'fa fa-compress'\n            form className: 'form-horizontal',\n                div className: 'form-group',\n                    label htmlFor: 'compose-from', className: classLabel, t \"compose from\"\n                    div className: classInput,\n                        button id: 'compose-from', className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', null,\n                            span ref: 'account', @state.currentAccount.get 'label'\n                            span className: 'caret'\n                        ul className: 'dropdown-menu', role: 'menu',\n                            accounts.map (account, key) =>\n                                @getAccountRender account, key\n                            .toJS()\n                div className: 'form-group',\n                    label htmlFor: 'compose-to', className: classLabel, t \"compose to\"\n                    div className: classInput,\n                        input id: 'compose-to', ref: 'to', valueLink: @linkState('to'), type: 'text', className: 'form-control', placeholder: t \"compose to help\"\n                div className: 'form-group',\n                    label htmlFor: 'compose-cc', className: classLabel, t \"compose cc\"\n                    div className: classInput,\n                        input id: 'compose-cc', ref: 'cc', valueLink: @linkState('cc'), type: 'text', className: 'form-control', placeholder: t \"compose cc help\"\n                div className: 'form-group',\n                    label htmlFor: 'compose-bcc', className: classLabel, t \"compose bcc\"\n                    div className: classInput,\n                        input id: 'compose-bcc', ref: 'bcc', valueLink: @linkState('bcc'), type: 'text', className: 'form-control', placeholder: t \"compose bcc help\"\n                div className: 'form-group',\n                    label htmlFor: 'compose-subject', className: classLabel, t \"compose subject\"\n                    div className: classInput,\n                        input id: 'compose-subject', ref: 'subject', valueLink: @linkState('subject'), type: 'text', className: 'form-control', placeholder: t \"compose subject help\"\n                div className: 'form-group',\n                    textarea ref: 'content', defaultValue: @linkState('body').value\n                div className: 'composeToolbox',\n                    div className: 'btn-toolbar', role: 'toolbar',\n                        div className: 'btn-group btn-group-sm',\n                            button className: 'btn btn-default', type: 'button', onClick: @onDraft,\n                                span className: 'fa fa-save'\n                                span className: 'tool-long', t 'compose action draft'\n                        div className: 'btn-group btn-group-lg',\n                            button className: 'btn btn-default', type: 'button', onClick: @onSend,\n                                span className: 'fa fa-send'\n                                span className: 'tool-long', t 'compose action send'\n\n    componentDidUpdate: ->\n        # scroll compose window into view\n        node = @getDOMNode()\n        node.scrollIntoView()\n\n    getAccountRender: (account, key) ->\n\n        isSelected = (not @state.currentAccount? and key is 0) \\\n                     or @state.currentAccount?.get('id') is account.get 'id'\n\n        if not isSelected\n            li role: 'presentation', key: key,\n                a role: 'menuitem', onClick: @onAccountChange, 'data-value': key, account.get 'label'\n\n    getInitialState: (forceDefault) ->\n        message = @props.message\n        state =\n            currentAccount : @props.selectedAccount\n        if message?\n            today = moment()\n            date = moment message.get 'createdAt'\n            if date.isBefore today, 'year'\n                formatter = 'DD/MM/YYYY'\n            else if date.isBefore today, 'day'\n                formatter = 'DD MMMM'\n            else\n                formatter = 'hh:mm'\n            dateHuman = date.format(formatter)\n            sender = MessageUtils.displayAddresses(message.get 'from')\n\n        switch @props.action\n            when ComposeActions.REPLY\n                state.to = MessageUtils.displayAddresses message.getReplyToAddress(), true\n                state.cc = ''\n                state.bcc = ''\n                state.subject = \"#{t 'compose reply prefix'}#{message.get 'subject'}\"\n                state.body = t('compose reply separator', {date: dateHuman, sender: sender}) +\n                    MessageUtils.generateReplyText(message.get('text')) + \"\\n\"\n            when ComposeActions.REPLY_ALL\n                state.to = MessageUtils.displayAddresses(message.getReplyToAddress(), true)\n                state.cc = MessageUtils.displayAddresses(Array.concat(message.get('to'), message.get('cc')), true)\n                state.bcc = ''\n                state.subject = \"#{t 'compose reply prefix'}#{message.get 'subject'}\"\n                state.body = t('compose reply separator', {date: dateHuman, sender: sender}) +\n                    MessageUtils.generateReplyText(message.get('text')) + \"\\n\"\n            when ComposeActions.FORWARD\n                state.to = ''\n                state.cc = ''\n                state.bcc = ''\n                state.subject = \"#{t 'compose forward prefix'}#{message.get 'subject'}\"\n                state.body = t('compose forward separator', {date: dateHuman, sender: sender}) + message.get('text')\n            when null\n                state.to      = ''\n                state.cc      = ''\n                state.bcc     = ''\n                state.subject = ''\n                state.body    = t 'compose default'\n\n        return state\n\n    onAccountChange: (args) ->\n        selected = args.target.dataset.value\n        if (selected isnt @state.currentAccount.get 'id')\n            @setState currentAccount : AccountStore.getByID selected\n            #this.refs.account.getDOMNode().innerHTML = @state.currentAccount.get 'label'\n\n    onDraft: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n\n    onSend: (args) ->\n        message =\n            from        : @state.currentAccount.get 'login'\n            to          : this.refs.to.getDOMNode().value.trim()\n            cc          : this.refs.cc.getDOMNode().value.trim()\n            bcc         : this.refs.bcc.getDOMNode().value.trim()\n            subject     : this.refs.subject.getDOMNode().value.trim()\n            content     : this.refs.content.getDOMNode().value.trim()\n            #headers     :\n            #date        :\n            #encoding    :\n\n        if @props.message?\n            msg   = @props.message\n            msgId = msg.get 'id'\n            message.inReplyTo = msgId\n\n            references = msg.references\n            if references?\n                message.references = references + msgId\n            else\n                message.references = msgId\n\n        callback = @props.callback\n        MessageActionCreator.send message, (error) ->\n            if error?\n                LayoutActionCreator.alertError(t \"message action sent ko\") + error\n            else\n                LayoutActionCreator.alertSuccess t \"message action sent ok\"\n            if callback?\n                callback error\n","{div, ul, li, span, i, p, h3, a} = React.DOM\nMessage = require './message'\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/RouterMixin'\n\nmodule.exports = React.createClass\n    displayName: 'Conversation'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        if not @props.message? or not @props.conversation\n            return p null, t \"app loading\"\n\n        expandUrl = @buildUrl\n            direction: 'left'\n            action: 'message'\n            parameters: @props.message.get 'id'\n            fullWidth: true\n\n        if window.router.previous?\n            try\n                selectedAccountID = @props.selectedAccount.get 'id'\n            catch\n                selectedAccountID = @props.conversation[0].mailbox\n        else\n            selectedAccountID = @props.conversation[0].mailbox\n\n        collapseUrl = @buildUrl\n            leftPanel:\n                action: 'account.mailbox.messages'\n                parameters: selectedAccountID\n            rightPanel:\n                action: 'message'\n                parameters: @props.conversation[0].get 'id'\n\n        if @props.layout is 'full'\n            closeUrl = @buildUrl\n                direction: 'left'\n                action: 'account.mailbox.messages'\n                parameters: selectedAccountID\n                fullWidth: true\n        else\n            closeUrl = @buildClosePanelUrl @props.layout\n\n        closeIcon = if @props.layout is 'full' then 'fa-th-list' else 'fa-times'\n\n        div className: 'conversation',\n\n            # allows multiple email open but UI is not good enough\n            #ul className: 'nav nav-tabs nav-justified',\n            #    li className: 'active',\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', 'x'\n\n            h3 null,\n                a href: closeUrl, className: 'close-conversation hidden-xs hidden-sm',\n                    i className:'fa ' + closeIcon\n                @props.message.get 'subject'\n                if @props.layout isnt 'full'\n                    a href: expandUrl, className: 'expand hidden-xs hidden-sm',\n                        i className: 'fa fa-arrows-h'\n                else\n                    a href: collapseUrl, className: 'close-conversation pull-right',\n                        i className:'fa fa-compress'\n\n            ul className: 'thread list-unstyled',\n                for message, key in @props.conversation\n                    isLast = key is @props.conversation.length - 1\n                    selectedAccount = @props.selectedAccount\n                    Message {message, key, isLast, selectedAccount}\n","{div, ul, li, span, a, button} = React.DOM\n\nRouterMixin = require '../mixins/RouterMixin'\n\nmodule.exports = React.createClass\n    displayName: 'MailboxList'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        if @props.mailboxes.length > 0 and @props.selectedMailbox?\n            firstItem = @props.selectedMailbox\n            div className: 'dropdown pull-left',\n                button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown',\n                    firstItem.get 'label'\n                    span className: 'caret', ''\n                ul className: 'dropdown-menu', role: 'menu',\n                    @props.mailboxes.map (mailbox, key) =>\n                        if mailbox.get('id') isnt @props.selectedMailbox.get('id')\n                            @getMailboxRender mailbox, key\n                    .toJS()\n        else\n            # no account selected\n            div null, \"\"\n\n\n    getMailboxRender: (mailbox, key) ->\n        url = @buildUrl\n                direction: 'left'\n                action: 'account.mailbox.messages'\n                parameters: [@props.selectedAccount.get('id'), mailbox.get('id')]\n\n        # Mark nested levels with \"--\" because plain space just doesn't work for some reason\n        pusher = \"\"\n        pusher += \"--\" for i in [1..mailbox.get('depth')] by 1\n\n        li role: 'presentation', key: key,\n            a href: url, role: 'menuitem', \"#{pusher}#{mailbox.get 'label'}\"\n","{div, ul, li, a, span, i} = React.DOM\n\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/RouterMixin'\n\nAccountStore = require '../stores/AccountStore'\n\nmodule.exports = Menu = React.createClass\n    displayName: 'Menu'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not Immutable.is(nextProps.accounts, @props.accounts) or\n               not Immutable.is(nextProps.selectedAccount, @props.selectedAccount) or\n               not _.isEqual(nextProps.layout, @props.layout) or\n               nextProps.isResponsiveMenuShown isnt @props.isResponsiveMenuShown or\n               not Immutable.is(nextProps.favoriteMailboxes, @props.favoriteMailboxes)\n\n    render: ->\n        selectedAccountUrl = @buildUrl\n            direction: 'left'\n            action: 'account.mailbox.messages'\n            parameters: @props.selectedAccount?.get 'id'\n            fullWidth: true\n\n        # the button toggles the \"compose\" screen\n        if @props.layout.leftPanel.action is 'compose' or\n           @props.layout.rightPanel?.action is 'compose'\n            composeUrl = selectedAccountUrl\n        else\n            composeUrl = @buildUrl\n                direction: 'right'\n                action: 'compose'\n                parameters: null\n                fullWidth: false\n\n        # the button toggle the \"new mailbox\" screen\n        if @props.layout.leftPanel.action is 'account.new'\n            newMailboxUrl = selectedAccountUrl\n        else\n            newMailboxUrl = @buildUrl\n                direction: 'left'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggles the \"settings\" screen\n        if @props.layout.leftPanel.action is 'settings' or\n           @props.layout.rightPanel?.action is 'settings'\n            settingsUrl = selectedAccountUrl\n        else\n            settingsUrl = @buildUrl\n                direction: 'left'\n                action: 'settings'\n                fullWidth: true\n\n        classes = classer\n            'hidden-xs hidden-sm': not @props.isResponsiveMenuShown\n            'col-xs-4 col-md-1': true\n\n        div id: 'menu', className: classes,\n            a href: composeUrl, className: 'menu-item compose-action',\n                i className: 'fa fa-edit'\n                span className: 'item-label', t 'menu compose'\n\n            ul id: 'account-list', className: 'list-unstyled',\n                @props.accounts.map (account, key) =>\n                    @getAccountRender account, key\n                .toJS()\n\n            a href: newMailboxUrl, className: 'menu-item new-account-action',\n                i className: 'fa fa-inbox'\n                span className: 'item-label', t 'menu account new'\n\n            a href: settingsUrl, className: 'menu-item settings-action',\n                i className: 'fa fa-cog'\n                span className: 'item-label', t 'menu settings'\n\n\n    # renders a single mailbox and its submenu\n    getAccountRender: (account, key) ->\n\n        isSelected = (not @props.selectedAccount? and key is 0) \\\n                     or @props.selectedAccount?.get('id') is account.get('id')\n\n        accountClasses = classer active: isSelected\n        accountID = account.get 'id'\n        defaultMailbox = AccountStore.getDefaultMailbox accountID\n        url = @buildUrl\n            direction: 'left'\n            action: 'account.mailbox.messages'\n            parameters: [accountID, defaultMailbox.get 'id']\n            fullWidth: false\n\n        li className: accountClasses, key: key,\n            a href: url, className: 'menu-item ' + accountClasses,\n                i className: 'fa fa-inbox'\n                span className: 'badge', account.get 'unreadCount'\n                span className: 'item-label', account.get 'label'\n\n            ul className: 'list-unstyled submenu mailbox-list',\n                @props.favoriteMailboxes.map (mailbox, key) =>\n                    @getMailboxRender account, mailbox, key\n                .toJS()\n\n    getMailboxRender: (account, mailbox, key) ->\n        mailboxUrl = @buildUrl\n            direction: 'left'\n            action: 'account.mailbox.messages'\n            parameters: [account.get('id'), mailbox.get('id')]\n\n        a href: mailboxUrl, className: 'menu-item', key: key,\n            # Something must be rethought about the icon\n            i className: 'fa fa-star'\n            span className: 'badge', Math.floor((Math.random() * 10) + 1) # placeholder\n            span className: 'item-label', mailbox.get 'label'\n","{div, ul, li, a, span, i, p} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin  = require '../mixins/RouterMixin'\nMessageUtils = require '../utils/MessageUtils'\n\nmodule.exports = React.createClass\n    displayName: 'MessageList'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not Immutable.is(nextProps.messages, @props.messages) or\n               not Immutable.is(nextProps.openMessage, @props.openMessage)\n\n    render: ->\n        curPage = parseInt @props.pageNum, 10\n        nbPages = Math.ceil(@props.messagesCount / @props.messagesPerPage)\n        div className: 'message-list',\n            @getPagerRender curPage, nbPages\n            if @props.messages.count() is 0\n                p null, @props.emptyListMessage\n            else\n                div null,\n                    p null, @props.counterMessage\n                    ul className: 'list-unstyled',\n                        @props.messages.map (message, key) =>\n                            # only displays initial email of a thread\n                            if true # @FIXME Mage conversation # message.get('inReplyTo').length is 0\n                                isActive = @props.openMessage? and\n                                           @props.openMessage.get('id') is message.get('id')\n                                @getMessageRender message, key, isActive\n                        .toJS()\n            @getPagerRender curPage, nbPages\n\n    getMessageRender: (message, key, isActive) ->\n        classes = classer\n            read: message.get 'isRead'\n            active: isActive\n\n        url = @buildUrl\n            direction: 'right'\n            action: 'message'\n            parameters: message.get 'id'\n\n        today = moment()\n        date = moment message.get 'createdAt'\n        if date.isBefore today, 'year'\n            formatter = 'DD/MM/YYYY'\n        else if date.isBefore today, 'day'\n            formatter = 'DD MMMM'\n        else\n            formatter = 'hh:mm'\n\n        li className: 'message ' + classes, key: key,\n            a href: url,\n                i className: 'fa fa-user'\n                span className: 'participants', @getParticipants message\n                div className: 'preview',\n                    span className: 'title', message.get 'subject'\n                    p null, message.get 'text'\n                span className: 'hour', date.format formatter\n\n    getPagerRender: (curPage, nbPages) ->\n        if nbPages < 2\n            return\n        classFirst = if curPage is 1 then 'disabled' else ''\n        classLast  = if curPage is nbPages then 'disabled' else ''\n        if nbPages < 11\n            minPage = 1\n            maxPage = nbPages\n        else\n            minPage = if curPage < 5 then 1 else curPage - 2\n            maxPage = minPage + 4\n            if maxPage > nbPages\n                maxPage = nbPages\n\n        urlFirst = @props.buildPaginationUrl 1\n        urlLast = @props.buildPaginationUrl nbPages\n\n        div className: 'pagination-box',\n            ul className: 'pagination',\n                li className: classFirst,\n                    a href: urlFirst, '«'\n                if minPage > 1\n                    li className: 'disabled',\n                        a href: urlFirst, '…'\n                for j in [minPage..maxPage] by 1\n                    classCurr = if j is curPage then 'current' else ''\n                    urlCurr = @props.buildPaginationUrl j\n                    li className: classCurr, key: j,\n                        a href: urlCurr, j\n                if maxPage < nbPages\n                    li className: 'disabled',\n                        a href: urlFirst, '…'\n                li className: classLast,\n                    a href: urlLast, '»'\n\n    getParticipants: (message) -> \"#{MessageUtils.displayAddresses(message.get 'from')}, #{MessageUtils.displayAddresses(message.get('to').concat(message.get('cc')))}\"\n","{div, ul, li, span, i, p, h3, a, button} = React.DOM\nMailboxList  = require './mailbox-list'\nCompose      = require './compose'\nMessageUtils = require '../utils/MessageUtils'\n{ComposeActions} = require '../constants/AppConstants'\nLayoutActionCreator  = require '../actions/LayoutActionCreator'\n\n# Flux stores\nAccountStore = require '../stores/AccountStore'\n\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'Message'\n\n    getInitialState: ->\n        return {\n            active: false,\n            composing: false\n            composeAction: ''\n        }\n\n    render: ->\n        clickHandler = if @props.isLast then null else @onFold\n\n        message = @props.message\n\n        classes = classer\n            message: true\n            active: @state.active\n\n        today = moment()\n        date = moment message.get 'createdAt'\n        if date.isBefore today, 'year'\n            formatter = 'DD/MM/YYYY'\n        else if date.isBefore today, 'day'\n            formatter = 'DD MMMM'\n        else\n            formatter = 'hh:mm'\n\n        li className: classes, key: @props.key, onClick: clickHandler,\n            @getToolboxRender()\n            div className: 'header',\n                i className: 'fa fa-user'\n                div className: 'participants',\n                    span  className: 'sender', MessageUtils.displayAddresses(message.get('from'), true)\n                    span className: 'receivers', t \"mail receivers\", {dest: MessageUtils.displayAddresses(message.get('to'), true)}\n                    span className: 'receivers', t \"mail receivers cc\", {dest: MessageUtils.displayAddresses(message.get('cc'), true)}\n                span className: 'hour', date.format formatter\n            div className: 'preview',\n                p null, message.get 'text'\n            div className: 'content', message.get 'text'\n            div className: 'clearfix'\n\n            # Display Compose block\n            if @state.composing\n                selectedAccount = @props.selectedAccount\n                layout          = 'right'\n                message         = message\n                action          = @state.composeAction\n                callback        = (error) =>\n                    if not error?\n                        @setState composing: false\n                Compose {selectedAccount, layout, message, action, callback}\n\n    getToolboxRender: ->\n\n        mailboxes = AccountStore.getSelectedMailboxes true\n\n        div className: 'messageToolbox',\n            div className: 'btn-toolbar', role: 'toolbar',\n                div className: 'btn-group btn-group-sm btn-group-justified',\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default', type: 'button', onClick: @onReply,\n                            span className: 'fa fa-reply'\n                            span className: 'tool-long', t 'mail action reply'\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default', type: 'button', onClick: @onReplyAll,\n                            span className: 'fa fa-reply-all'\n                            span className: 'tool-long', t 'mail action reply all'\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default', type: 'button', onClick: @onForward,\n                            span className: 'fa fa-mail-forward'\n                            span className: 'tool-long', t 'mail action forward'\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default', type: 'button', onClick: @onDelete,\n                            span className: 'fa fa-trash-o'\n                            span className: 'tool-long', t 'mail action delete'\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', onClick: @onMark, t 'mail action mark',\n                            span className: 'caret'\n                        ul className: 'dropdown-menu', role: 'menu',\n                            li null,\n                                a href: '#', t 'mail mark fav'\n                            li null,\n                                a href: '#', t 'mail mark nofav'\n                            li null,\n                                a href: '#', t 'mail mark spam'\n                            li null,\n                                a href: '#', t 'mail mark nospam'\n                            li null,\n                                a href: '#', t 'mail mark read'\n                            li null,\n                                a href: '#', t 'mail mark unread'\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', onClick: @onCopy, t 'mail action copy',\n                            span className: 'caret'\n                        ul className: 'dropdown-menu', role: 'menu',\n                            mailboxes.map (mailbox, key) =>\n                                @getMailboxRender mailbox, key\n                            .toJS()\n                    div className: 'btn-group btn-group-sm',\n                        button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', onClick: @onMove, t 'mail action move',\n                            span className: 'caret'\n                        ul className: 'dropdown-menu', role: 'menu',\n                            mailboxes.map (mailbox, key) =>\n                                @getMailboxRender mailbox, key\n                            .toJS()\n\n\n    getMailboxRender: (mailbox, key) ->\n        pusher = \"\"\n        pusher += \"--\" for j in [1..mailbox.get('depth')] by 1\n        url    = ''\n        li role: 'presentation', key: key,\n            a href: url, role: 'menuitem', \"#{pusher}#{mailbox.get 'label'}\"\n\n    onFold: (args) ->\n        @setState active: not @state.active\n\n    onReply: (args) ->\n        @setState composing: true\n        @setState composeAction: ComposeActions.REPLY\n\n    onReplyAll: (args) ->\n        @setState composing: true\n        @setState composeAction: ComposeActions.REPLY_ALL\n\n    onForward: (args) ->\n        @setState composing: true\n        @setState composeAction: ComposeActions.FORWARD\n\n    onDelete: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n\n    onCopy: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n\n    onMove: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n","{div, input, span} = React.DOM\nclasser = React.addons.classSet\n\nSearchActionCreator = require '../actions/SearchActionCreator'\n\nENTER_KEY = 13\n\nRouterMixin = require '../mixins/RouterMixin'\n\nmodule.exports = React.createClass\n    displayName: 'SearchForm'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        div className: 'form-group pull-left',\n            div className: 'input-group',\n                input className: 'form-control', type: 'text', placeholder: t('app search'), onKeyPress: @onKeyPress, ref: 'searchInput', defaultValue: @props.query\n                div className: 'input-group-addon btn btn-cozy', onClick: @onSubmit,\n                    span className: 'fa fa-search'\n\n    onSubmit: ->\n        query = encodeURIComponent @refs.searchInput.getDOMNode().value.trim()\n\n        # only submit query if it's longer than 3 characters\n        # @TODO: validate and give feedback to the user\n        if query.length > 3\n            @redirect\n                direction: 'left'\n                action: 'search'\n                parameters: [query]\n\n    onKeyPress: (evt) ->\n        if evt.charCode is ENTER_KEY\n            @onSubmit()\n            evt.preventDefault()\n            return false\n        else\n            query = @refs.searchInput.getDOMNode().value\n            SearchActionCreator.setQuery query","{div, h3, form, label, input, button} = React.DOM\nclasser = React.addons.classSet\n\nSettingsActionCreator = require '../actions/SettingsActionCreator'\nSettingsStore = require '../stores/SettingsStore'\n\nmodule.exports = React.createClass\n    displayName: 'AccountConfig'\n\n    mixins: [\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    render: ->\n        titleLabel = if @props.initialAccountConfig? then t \"mailbox edit\" else t \"mailbox new\"\n\n        div id: 'mailbox-config',\n            h3 className: null, t \"settings title\"\n\n            if @props.error\n                div className: 'error', @props.error\n\n            form className: 'form-horizontal',\n                div className: 'form-group',\n                    label htmlFor: 'settings-mpp', className: 'col-sm-2 col-sm-offset-2 control-label', t \"settings label mpp\"\n                    div className: 'col-sm-3',\n                        input id: 'settings-mpp', valueLink: @linkState('messagesPerPage'), type: 'number', min: 5, max: 100, step: 5, className: 'form-control'\n\n            form className: 'form-horizontal',\n                div className: 'form-group',\n                    label htmlFor: 'settings-compose', className: 'col-sm-2 col-sm-offset-2 control-label', t \"settings label compose\"\n                    div className: 'col-sm-3',\n                        input id: 'settings-compose', checkedLink: @linkState('composeInHTML'), type: 'checkbox', className: 'form-control'\n\n                div className: 'form-group',\n                    div className: 'col-sm-offset-2 col-sm-5 text-right',\n                        button className: 'btn btn-cozy', onClick: @onSubmit, t \"settings button save\"\n    onSubmit: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        settingsValue = @state\n        SettingsActionCreator.edit @state\n\n    getInitialState: (forceDefault) ->\n        settings = @props.settings\n\n        return settings.toObject()\n","module.exports =\n\n    ActionTypes:\n        # Account\n        'ADD_ACCOUNT'               : 'ADD_ACCOUNT'\n        'REMOVE_ACCOUNT'            : 'REMOVE_ACCOUNT'\n        'EDIT_ACCOUNT'              : 'EDIT_ACCOUNT'\n        'SELECT_ACCOUNT'            : 'SELECT_ACCOUNT'\n        'NEW_ACCOUNT_WAITING'       : 'NEW_ACCOUNT_WAITING'\n        'NEW_ACCOUNT_ERROR'         : 'NEW_ACCOUNT_ERROR'\n\n        # Message\n        'RECEIVE_RAW_MESSAGE'       : 'RECEIVE_RAW_MESSAGE'\n        'RECEIVE_RAW_MESSAGES'      : 'RECEIVE_RAW_MESSAGES'\n        'SEND_MESSAGE'              : 'SEND_MESSAGE'\n\n        # Search\n        'SET_SEARCH_QUERY'          : 'SET_SEARCH_QUERY'\n        'RECEIVE_RAW_SEARCH_RESULTS': 'RECEIVE_RAW_SEARCH_RESULTS'\n        'CLEAR_SEARCH_RESULTS'       : 'CLEAR_SEARCH_RESULTS'\n\n        # Layout\n        'SHOW_MENU_RESPONSIVE'      : 'SHOW_MENU_RESPONSIVE'\n        'HIDE_MENU_RESPONSIVE'      : 'HIDE_MENU_RESPONSIVE'\n        'SELECT_ACCOUNT'            : 'SELECT_ACCOUNT'\n        'DISPLAY_ALERT'             : 'DISPLAY_ALERT'\n\n        # Mailbox\n        'RECEIVE_RAW_MAILBOXES'     : 'RECEIVE_RAW_MAILBOXES'\n\n        # Settings\n        'SETTINGS_UPDATED'          : 'SETTINGS_UPDATED'\n\n    PayloadSources:\n        'VIEW_ACTION'   : 'VIEW_ACTION'\n        'SERVER_ACTION' : 'SERVER_ACTION'\n\n    ComposeActions:\n        'REPLY'         : 'REPLY'\n        'REPLY_ALL'     : 'REPLY_ALL'\n        'FORWARD'       : 'FORWARD'\n\n    AlertLevel:\n        'SUCCESS'      : 'SUCCESS'\n        'INFO'         : 'INFO'\n        'WARNING'      : 'WARNING'\n        'ERROR'        : 'ERROR'\n","# Waits for the DOM to be ready\nwindow.onload = ->\n\n    window.__DEV__ = window.location.hostname is 'localhost'\n    # use Cozy instance locale or navigator language or \"en\" by default\n    locale = window.locale or window.navigator.language or \"en\"\n    moment.locale locale\n    locales = {}\n    try\n        locales = require \"./locales/#{locale}\"\n    catch err\n        console.log err\n        locales = require \"./locales/en\"\n    polyglot = new Polyglot()\n    # we give polyglot the data\n    polyglot.extend locales\n    # handy shortcut\n    window.t = polyglot.t.bind polyglot\n\n\n    # Flux initialization (must be called at the begining)\n    AccountStore  = require './stores/AccountStore'\n    LayoutStore   = require './stores/LayoutStore'\n    MessageStore  = require './stores/MessageStore'\n    SettingsStore = require './stores/SettingsStore'\n    SearchStore = require './stores/SearchStore'\n\n\n    # Routing management\n    Router = require './router'\n    @router = new Router()\n    window.router = @router\n\n    # Binds the router and flux to the React application\n    Application = require './components/application'\n    application = Application router: @router\n    React.renderComponent application, document.body\n\n\n    # Starts the application by initializing the router\n    Backbone.history.start()\n\n\n    # Makes this object immuable.\n    Object.freeze this if typeof Object.freeze is 'function'\n","###\n    Routing component. We let Backbone handling browser stuff\n    and we format the varying parts of the layout.\n\n    URLs are built in the following way:\n        - a first part that represents the left panel\n        - a second part that represents the right panel\n        - if there is just one part, it represents a full width panel\n\n    Since Backbone.Router only handles one part, routes initialization mechanism\n    is overriden so we can post-process the second part of the URL.\n\n    Example: a defined pattern will generates two routes.\n        - `mailbox/a/path/:id`\n        - `mailbox/a/path/:id/*rightPanel`\n\n        Each pattern is actually the pattern itself plus the pattern itself and\n        another pattern.\n###\n\nLayoutActionCreator = require '../actions/LayoutActionCreator'\n\nmodule.exports = class Router extends Backbone.Router\n\n    patterns: {}\n\n    # default route\n    routes: {}\n\n    previous: null\n    current: null\n\n    # we store a regexified version of each patterns\n    cachedPatterns: []\n\n    initialize: (options) ->\n\n        # defines the routes from the patterns\n        for key, route of @patterns\n\n            # caches each regex' pattern to avoid to recalculate them each time\n            @cachedPatterns.push\n                key: key\n                pattern: @_routeToRegExp route.pattern\n\n            # each pattern has two routes: full-width or with a right panel\n            @routes[route.pattern] = key\n            @routes[\"#{route.pattern}/*rightPanel\"] = key\n\n        # Backbone's magic\n        @_bindRoutes()\n\n        # Updates the LayoutStore for each matched request\n        @on 'route', (name, args) =>\n\n            [leftPanelInfo, rightPanelInfo] = @_processSubRouting name, args\n\n            leftAction = @fluxActionFactory leftPanelInfo\n            rightAction = @fluxActionFactory rightPanelInfo\n\n            @previous = @current\n            @current = leftPanel: leftPanelInfo, rightPanel: rightPanelInfo\n\n            if leftAction?\n                leftAction leftPanelInfo, 'left'\n\n            if rightAction?\n                rightAction rightPanelInfo, 'right'\n            @trigger 'fluxRoute', @current\n\n\n    ###\n        Gets the Flux action to execute given a panel info.\n    ###\n    fluxActionFactory: (panelInfo) ->\n\n        fluxAction = null\n        pattern = @patterns[panelInfo?.action]\n\n        if pattern?\n            fluxAction = LayoutActionCreator[pattern.fluxAction]\n\n            if not fluxAction?\n                console.warn \"`#{pattern.fluxAction}` method not found in layout actions.\"\n\n            return fluxAction\n\n\n    ###\n        Extracts and matches the second part of the URl if it exists.\n    ###\n    _processSubRouting: (name, args) ->\n\n        # remove the last argument which is always `null`, not sure why\n        args.pop()\n\n        # next comes the rightPanel url if it exists\n        # or a leftPanel parameter there is not rightPanel\n        rightPanelString = args.pop()\n\n        # if left panel number of expected params is bigger what is left\n        # it means there are no right panel and that what we got before was a\n        # parameter of the left panel\n        params = @patterns[name].pattern.match(/:[\\w]+/g) or []\n        if params.length > args.length\n            args.push rightPanelString\n            rightPanelString = null\n\n        leftPanelParameters = args\n\n        # check all the routes for the second part of the URL\n        route = _.first _.filter @cachedPatterns, (element) ->\n            return element.pattern.test rightPanelString\n\n        # if a route has been found, we retrieve the params' value and format it\n        if route?\n            args = @_extractParameters route.pattern, rightPanelString\n            # remove the last argument which is alway `null`, not sure why\n            args.pop()\n            rightPanelInfo = action: route.key, parameters: args\n        else\n            rightPanelInfo = null\n\n        # normalize the leftPanelInfo\n        leftPanelInfo = action: name, parameters: leftPanelParameters\n        return [leftPanelInfo, rightPanelInfo]\n\n\n    ###\n        Builds a route from panel information.\n        Two modes:\n            - options has leftPanel and/or rightPanel attributes with the\n              panel(s) information.\n            - options has the panel information along a `direction` attribute\n              that can be `left` or `right`. It's the short version.\n    ###\n    buildUrl: (options) ->\n\n        # Loads the panel from the options or the current router status to keep\n        # track of current URLs\n        if options.leftPanel? or options.rightPanel?\n            leftPanelInfo = options.leftPanel or @current.leftPanel\n            rightPanelInfo = options.rightPanel or @current.rightPanel\n        else\n            # Handles short version\n            if options.direction?\n                if options.direction is 'left'\n                    leftPanelInfo = options\n                    rightPanelInfo = @current.rightPanel\n                else if options.direction is 'right'\n                    leftPanelInfo = @current.leftPanel\n                    rightPanelInfo = options\n                else\n                    console.warn '`direction` should be `left`, `right`.'\n            else\n                console.warn '`direction` parameter is mandatory when using short call.'\n\n        # if the `fullWidth` parameter is set, it ignores the right panel info\n        if (options.leftPanel? or options.direction is 'left') and options.fullWidth\n            if options.rightPanel? and options.direction is 'right'\n                console.warn \"You shouldn't use the fullWidth option with a right panel\"\n            rightPanelInfo = null\n\n        # Actual building\n        leftPart = @_getURLFromRoute leftPanelInfo\n        rightPart = @_getURLFromRoute rightPanelInfo\n\n        url = \"##{leftPart}\"\n        if rightPart? and rightPart.length > 0\n            url = \"#{url}/#{rightPart}\"\n\n        return url\n\n\n    ###\n        Closes a panel given a direction. If a full-width panel is closed,\n        the URL points to the default route.\n    ###\n    buildClosePanelUrl: (direction) ->\n\n        # If a left panel is closed, the right panel becomes full-width.\n        # If a full-width panel is closed, `@current.rightPanel` is null and\n        # the default route is loaded.\n        if direction is 'left' or direction is 'full'\n            panelInfo = @current.rightPanel\n        else\n            panelInfo = @current.leftPanel\n\n        if panelInfo?\n            panelInfo.direction = 'left'\n            panelInfo.fullWidth = true\n            return @buildUrl panelInfo\n        else\n            return '#' # loads the default route\n\n\n    # Builds the URL string from a route.\n    _getURLFromRoute: (panel) ->\n        if panel?\n            pattern = @patterns[panel.action].pattern\n\n            if panel.parameters? and not (panel.parameters instanceof Array)\n                panel.parameters = [panel.parameters]\n\n            # gets default values (if relevant) to ease `@buildUrl` usage\n            if (defaultParameters = @_getDefaultParameters(panel.action))?\n                # sets the parameters if they don't exist at all...\n                if not panel.parameters? or panel.parameters.length is 0\n                    panel.parameters = defaultParameters\n\n                # ... or adds them in the relevant place if only some of them\n                # are missing\n                else\n                    for defaultParameter, key in defaultParameters\n                        if not panel.parameters[key]?\n                            panel.parameters.splice key, 0, defaultParameter\n\n            # we default to empty array if there is no parameter in the route\n            parametersInPattern = pattern.match(/:[\\w]+/gi) or []\n\n            # the pattern is progressively filled with values\n            filledPattern = pattern\n            if panel.parameters\n                for paramInPattern, key in parametersInPattern\n                    paramValue = panel.parameters[key]\n                    filledPattern = filledPattern.replace paramInPattern, paramValue\n\n            return filledPattern\n        else\n            return ''\n","###\n\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't been\n    successful in adding a transpiler. --\n\n    Copyright (c) 2014, Facebook, Inc.\n    All rights reserved.\n\n    This source code is licensed under the BSD-style license found in the\n    LICENSE file in the root directory of this source tree. An additional grant\n    of patent rights can be found in the PATENTS file in the same directory.\n ###\n\ninvariant = require '../invariant'\n\n_lastID = 1\n_prefix = 'ID_'\n\nmodule.exports = Dispatcher = class Dispatcher\n    constructor: ->\n        this._callbacks = {};\n        this._isPending = {};\n        this._isHandled = {};\n        this._isDispatching = false;\n        this._pendingPayload = null;\n\n    ###\n        Registers a callback to be invoked with every dispatched payload. Returns\n        a token that can be used with `waitFor()`.\n\n        @param {function} callback\n        @return {string}\n    ###\n    register: (callback) ->\n        id = _prefix + _lastID++\n        this._callbacks[id] = callback\n        return id\n\n    ###\n        Removes a callback based on its token.\n\n        @param {string} id\n    ###\n    unregister: (id) ->\n        invariant(\n            this._callbacks[id],\n            'Dispatcher.unregister(...): `%s` does not map to a registered callback.',\n            id\n        )\n        delete this._callbacks[id]\n\n    ###\n        Waits for the callbacks specified to be invoked before continuing execution\n        of the current callback. This method should only be used by a callback in\n        response to a dispatched payload.\n\n        @param {array<string>} ids\n    ###\n    waitFor: (ids) ->\n        invariant(\n            this._isDispatching,\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n        )\n        for ii in [0..ids.length - 1] by 1\n            id = ids[ii]\n            if this._isPending[id]\n                invariant(\n                    this._isHandled[id],\n                    'Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.',\n                    id\n                )\n                continue\n\n            invariant(\n                this._callbacks[id],\n                'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',\n                id\n            )\n            this._invokeCallback id\n\n    ###\n        Dispatches a payload to all registered callbacks.\n\n        @param {object} payload\n    ###\n    dispatch: (payload) ->\n        invariant(\n            !this._isDispatching,\n            'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'\n        );\n        this._startDispatching(payload);\n        try\n            for id of this._callbacks\n                if this._isPending[id]\n                    continue\n                this._invokeCallback id\n        finally\n          this._stopDispatching()\n\n    ###\n        Is this Dispatcher currently dispatching.\n\n        @return {boolean}\n    ###\n    isDispatching: -> return this._isDispatching\n\n    ###\n        Call the callback stored with the given id. Also do some internal\n        bookkeeping.\n\n        @param {string} id\n        @internal\n    ###\n    _invokeCallback: (id) ->\n        this._isPending[id] = true\n        this._callbacks[id](this._pendingPayload)\n        this._isHandled[id] = true\n\n    ###\n        Set up bookkeeping needed when dispatching.\n\n        @param {object} payload\n        @internal\n    ###\n    _startDispatching: (payload) ->\n        for id of this._callbacks\n          this._isPending[id] = false\n          this._isHandled[id] = false\n\n        this._pendingPayload = payload\n        this._isDispatching = true\n\n    ###\n        Clear bookkeeping used for dispatching.\n\n        @internal\n    ###\n    _stopDispatching: ->\n        this._pendingPayload = null\n        this._isDispatching = false\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (__DEV__) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","AppDispatcher = require '../../../AppDispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items by subclass\n    # we don't use `@constructor.name` because it breaks when mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID][type])? then callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            throw new Error \"The store #{@constructor.name} must define a `__bindHandlers` method\"\n\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Chargement…\"\n      \"app back\"                : \"Back\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Search…\"\n      \"app alert close\"         : \"Close\"\n      \"app unimplemented\"       : \"Not implemented yet\"\n\n      # Compose window\n      \"compose\"                   : \"Compose new email\"\n      \"compose default\"           : 'Hello, how are you doing today ?'\n      \"compose from\"              : \"From\"\n      \"compose to\"                : \"To\"\n      \"compose to help\"           : \"Reciepients list\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Copy list\"\n      \"compose bcc\"               : \"Bcc\"\n      \"compose bcc help\"          : \"Hidden copy list\"\n      \"compose subject\"           : \"Subject\"\n      \"compose subject help\"      : \"Message subject\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose action draft\"      : \"Enregistrer le brouillon\"\n      \"compose action send\"       : \"Envoyer\"\n\n      # Menu\n      \"menu compose\"            : \"Compose\"\n      \"menu account new\"        : \"New account\"\n      \"menu settings\"           : \"Paramètres\"\n\n      # List\n      \"list empty\"              : \"No email in this box.\"\n      \"list search empty\"       : \"No result found for the query \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message in this box |||| %{smart_count} messages in this box\"\n      \"list search count\"       : \"%{smart_count} result found. |||| %{smart_count} results found.\"\n\n      # Mail\n      \"mail receivers\"          : \"To %{dest}\"\n      \"mail receivers cc\"       : \"Cc %{dest}\"\n      \"mail action reply\"       : \"Reply\"\n      \"mail action reply all\"   : \"Reply all\"\n      \"mail action forward\"     : \"Forward\"\n      \"mail action delete\"      : \"Delete\"\n      \"mail action mark\"        : \"Mark as…\"\n      \"mail action copy\"        : \"Copy…\"\n      \"mail action move\"        : \"Move…\"\n      \"mail mark spam\"          : \"Spam\"\n      \"mail mark nospam\"        : \"No spam\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Not important\"\n      \"mail mark read\"          : \"Read\"\n      \"mail mark unread\"        : \"Not read\"\n\n      # Account\n      \"mailbox new\"                 : \"New account\"\n      \"mailbox edit\"                : \"Edit account\"\n      \"mailbox add\"                 : \"Add\"\n      \"mailbox label\"               : \"Label\"\n      \"mailbox name short\"          : \"A short mailbox name\"\n      \"mailbox user name\"           : \"Your name\"\n      \"mailbox user fullname\"       : \"Your name, as it will be displayed\"\n      \"mailbox address\"             : \"Email address\"\n      \"mailbox address placeholder\" : \"Your email address\"\n      \"mailbox password\"            : \"Password\"\n      \"mailbox sending server\"      : \"Sending server\"\n      \"mailbox receiving server\"    : \"IMAP server\"\n      \"mailbox remove\"              : \"Remove\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Message sent\"\n      \"message action sent ko\"      : \"Error sending message: \"\n\n      # Settings\n      \"settings title\"             : \"Settings\"\n      \"settings button save\"       : \"Save\"\n      \"settings label mpp\"         : \"Messages per page\"\n      \"settings label compose\"     : \"Rich message editor\"\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Chargement…\"\n      \"app back\"                : \"Retour\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Rechercher…\"\n      \"app alert close\"         : \"Fermer\"\n      \"app unimplemented\"       : \"Non implémenté\"\n\n      # Compose window\n      \"compose\"                   : \"Écrire un nouveau message\"\n      \"compose default\"           : \"Bonjour, comment ça va ?\"\n      \"compose from\"              : \"De\"\n      \"compose to\"                : \"À\"\n      \"compose to help\"           : \"Liste des destinataires principaux\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Liste des destinataires en copie\"\n      \"compose bcc\"               : \"Cci\"\n      \"compose bcc help\"          : \"Liste des destinataires en copie caché\"\n      \"compose subject\"           : \"Objet\"\n      \"compose subject help\"      : \"Objet du message\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose action draft\"      : \"Save as draft\"\n      \"compose action send\"       : \"Send\"\n\n      # Menu\n      \"menu compose\"            : \"Nouveau\"\n      \"menu account new\"        : \"Ajouter un compte\"\n      \"menu settings\"           : \"Paramètres\"\n\n      # List\n      \"list empty\"              : \"Pas d'email dans cette boîte..\"\n      \"list search empty\"       : \"Aucun résultat trouvé pour la requête \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message dans cette boite |||| %{smart_count} messages dans cette boite\"\n      \"list search count\"       : \"%{smart_count} résultat trouvé. |||| %{smart_count} résultats trouvés.\"\n\n      # Mail\n      \"mail receivers\"          : \"À %{dest}\"\n      \"mail receivers cc\"       : \"Copie %{dest}\"\n      \"mail action reply\"       : \"Répondre\"\n      \"mail action reply all\"   : \"Répondre à tous\"\n      \"mail action forward\"     : \"Transférer\"\n      \"mail action delete\"      : \"Supprimer\"\n      \"mail action mark\"        : \"Marquer comme\"\n      \"mail action copy\"        : \"Copier…\"\n      \"mail action move\"        : \"Déplacer…\"\n      \"mail mark spam\"          : \"Pourriel\"\n      \"mail mark nospam\"        : \"Légitime\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Normal\"\n      \"mail mark read\"          : \"Lu\"\n      \"mail mark unread\"        : \"Non lu\"\n\n      # Account\n      \"mailbox new\"                 : \"Nouveau compte\"\n      \"mailbox edit\"                : \"Modifier le compte\"\n      \"mailbox add\"                 : \"Créer\"\n      \"mailbox label\"               : \"Nom\"\n      \"mailbox name short\"          : \"Nom abbrégé\"\n      \"mailbox user name\"           : \"Votre nom\"\n      \"mailbox user fullname\"       : \"Votre nom, tel qu'il sera affiché\"\n      \"mailbox address\"             : \"Adresse\"\n      \"mailbox address placeholder\" : \"Votre adresse électronique\"\n      \"mailbox password\"            : \"Maot de passe\"\n      \"mailbox sending server\"      : \"Serveur sortant\"\n      \"mailbox receiving server\"    : \"Serveur IMAP\"\n      \"mailbox remove\"              : \"Supprimer\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Message envoyé !\"\n      \"message action sent ko\"      : \"Une erreur est survenue : \"\n\n      # Settings\n      \"settings title\"             : \"Paramètres\"\n      \"settings button save\"       : \"Enregistrer\"\n      \"settings label mpp\"         : \"Nombre de messages par page\"\n      \"settings label compose\"     : \"Éditeur riche\"\n      \n","###\n    Router mixin.\n    Aliases `buildUrl` and `buildClosePanelUrl`\n###\n\nrouter = window.router\n\nmodule.exports =\n\n    buildUrl: (options) ->\n        router.buildUrl.call router, options\n\n    buildClosePanelUrl: (direction) ->\n        router.buildClosePanelUrl.call router, direction\n\n    # Builds the URL (based on options) and redirect to it.\n    # If `options` is a string, it will be considered as the target URL.\n    redirect: (options) ->\n        url = if typeof options is \"string\" then options else @buildUrl options\n        router.navigate url, true\n\n\n","module.exports = StoreWatchMixin = (stores) ->\n\n    return {\n        componentDidMount: ->\n            stores.forEach (store) => store.on 'change', @_setStateFromStores\n\n        componentWillUnmount: ->\n            stores.forEach (store) => store.removeListener 'change', @_setStateFromStores\n\n        getInitialState: -> return @getStateFromStores()\n\n        _setStateFromStores: -> @setState @getStateFromStores()\n    }","PanelRouter = require './libs/PanelRouter'\n\nAccountStore = require './stores/AccountStore'\n\nmodule.exports = class Router extends PanelRouter\n\n    patterns:\n        'account.config':\n            pattern: 'account/:id/config'\n            fluxAction: 'showConfigAccount'\n        'account.new':\n            pattern: 'account/new'\n            fluxAction: 'showCreateAccount'\n        'account.mailbox.messages':\n            pattern: 'account/:id/mailbox/:mailbox/page/:page'\n            fluxAction: 'showMessageList'\n\n        'search':\n            pattern: 'search/:query/page/:page'\n            fluxAction: 'showSearch'\n\n        'message':\n            pattern: 'message/:id'\n            fluxAction: 'showConversation'\n        'compose':\n            pattern: 'compose'\n            fluxAction: 'showComposeNewMessage'\n\n        'settings':\n            pattern: 'settings'\n            fluxAction: 'showSettings'\n\n    # default route\n    routes: '': 'account.mailbox.messages'\n\n    # Determines and gets the default parameters regarding a specific action\n    _getDefaultParameters: (action) ->\n        switch action\n            when 'account.mailbox.messages'\n                defaultAccount = AccountStore.getDefault()\n                defaultMailbox = defaultAccount?.get('mailboxes').first()\n                defaultParameters = [\n                    defaultAccount?.get('id')\n                    defaultMailbox?.get('id')\n                    1\n                ]\n            when 'account.config'\n                defaultAccount = AccountStore.getDefault()?.get 'id'\n                defaultParameters = [defaultAccount]\n            when 'search'\n                defaultParameters = [\"\", 1]\n            else\n                defaultParameters = null\n        return defaultParameters\n","Store = require '../libs/flux/store/Store'\n\n{ActionTypes} = require '../constants/AppConstants'\n\nAccountTranslator = require '../utils/translators/AccountTranslator'\n\nclass AccountStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    # Creates an OrderedMap of accounts\n    _accounts = Immutable.Sequence window.accounts\n\n        # sort first\n        .sort (mb1, mb2) ->\n            if mb1.label > mb2.label then return 1\n            else if mb1.label < mb2.label then return -1\n            else return 0\n\n        # sets account ID as index\n        .mapKeys (_, account) -> return account.id\n\n        # makes account object an immutable Map\n        .map (account) -> AccountTranslator.toImmutable account\n\n        .toOrderedMap()\n\n    _selectedAccount = null\n    _newAccountWaiting = false\n    _newAccountError = null\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.ADD_ACCOUNT, (account) ->\n            account = _makeAccountImmutable account\n            _accounts = _accounts.set account.get('id'), account\n            @emit 'change'\n\n        handle ActionTypes.SELECT_ACCOUNT, (accountID) ->\n            _selectedAccount = _accounts.get(accountID) or null\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_WAITING, (payload) ->\n            _newAccountWaiting = payload\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_ERROR, (error) ->\n            _newAccountError = error\n            @emit 'change'\n\n        handle ActionTypes.EDIT_ACCOUNT, (rawAccount) ->\n            account = AccountTranslator.toImmutable rawAccount\n            _accounts = _accounts.set account.get('id'), account\n            _selectedAccount = _accounts.get account.get 'id'\n            @emit 'change'\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            _accounts = _accounts.delete accountID\n            _selectedAccount = @getDefault()\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getAll: -> return _accounts\n\n    getByID: (accountID) -> return _accounts.get accountID\n\n    getDefault: -> return _accounts.first() or null\n\n    getDefaultMailbox: (accountID) ->\n\n        account = _accounts.get(accountID) or @getDefault()\n\n        return account.get('mailboxes').first()\n\n    getSelected: -> return _selectedAccount\n\n    getSelectedMailboxes: (flatten = false) ->\n\n        return Immutable.OrderedMap.empty() unless _selectedAccount?\n\n        if flatten\n            rawMailboxesTree = _selectedAccount.get('mailboxes').toJS()\n            # @FIXME Should be done with iterator when they are fixed\n            getFlattenMailboxes = (childrenMailboxes, depth = 0) ->\n                result = Immutable.OrderedMap()\n                for id, rawMailbox of childrenMailboxes\n                    children = rawMailbox.children\n                    delete rawMailbox.children\n                    mailbox = Immutable.Map rawMailbox\n                    # we add a depth indicator for display\n                    mailbox = mailbox.set 'depth', depth\n                    result = result.set mailbox.get('id'), mailbox\n                    result = result.merge getFlattenMailboxes children, (depth + 1)\n                return result.toOrderedMap()\n\n            return getFlattenMailboxes(rawMailboxesTree).toOrderedMap()\n        else\n            return _selectedAccount?.get('mailboxes') or Immutable.OrderedMap.empty()\n\n    getSelectedMailbox: (selectedID) ->\n        mailboxes = @getSelectedMailboxes()\n        if selectedID?\n            return mailboxes.get selectedID\n        else\n            return mailboxes.first()\n\n    # Takes the 3 first mailboxes to show as \"favorite\".\n    # Skip the first 1, assumed to be the inbox\n    # Should be made configurable.\n    getSelectedFavorites: ->\n        return @getSelectedMailboxes()\n            .skip 1\n            .take 3\n            .toOrderedMap()\n\n    getError: -> return _newAccountError\n\n    isWaiting: -> return _newAccountWaiting\n\nmodule.exports = new AccountStore()\n","Store = require '../libs/flux/store/Store'\n\n{ActionTypes} = require '../constants/AppConstants'\n\nclass LayoutStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _responsiveMenuShown = false\n    _alert =\n        level: null\n        message: null\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SHOW_MENU_RESPONSIVE, ->\n            _responsiveMenuShown = true\n            @emit 'change'\n\n        handle ActionTypes.HIDE_MENU_RESPONSIVE, ->\n            _responsiveMenuShown = false\n            @emit 'change'\n\n        handle ActionTypes.DISPLAY_ALERT, (value) ->\n            _alert.level   = value.level\n            _alert.message = value.message\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    isMenuShown: -> return _responsiveMenuShown\n\n    getAlert: -> return _alert\n\nmodule.exports = new LayoutStore()\n","Store = require '../libs/flux/store/Store'\nAppDispatcher = require '../AppDispatcher'\n\nAccountStore = require './AccountStore'\n\n{ActionTypes}       = require '../constants/AppConstants'\n\nLayoutActionCreator = require '../actions/LayoutActionCreator'\n\nclass MessageStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    # Creates an OrderedMap of messages\n    _messages = Immutable.Sequence()\n\n        # sets message ID as index\n        .mapKeys (_, message) -> message.id\n\n        # makes message object an immutable Map\n        .map (message) -> Immutable.fromJS message\n        .toOrderedMap()\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGE, onReceiveRawMessage = (message, silent = false) ->\n            # create or update\n            message = Immutable.Map message\n            message.getReplyToAddress = ->\n                reply = this.get 'replyTo'\n                reply = if reply.length == 0 then this.get 'from' else reply\n                return reply\n            _messages = _messages.set message.get('id'), message\n\n            @emit 'change' unless silent\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGES, (messages) ->\n            onReceiveRawMessage message, true for message in messages\n            @emit 'change'\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            AppDispatcher.waitFor [AccountStore.dispatchToken]\n            messages = @getMessagesByAccount accountID\n            _messages = _messages.withMutations (map) ->\n                messages.forEach (message) -> map.remove message.get 'id'\n\n            @emit 'change'\n\n        handle ActionTypes.SEND_MESSAGE, (message) ->\n            # message should have been copied to Sent mailbox,\n            # so it seems reasonable to emit change\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    getAll: -> return _messages\n\n    getByID: (messageID) -> _messages.get(messageID) or null\n\n    ###*\n    * Get messages from account, with optional pagination\n    *\n    * @param {String} accountID\n    * @param {Number} first     index of first message\n    * @param {Number} last      index of last message\n    *\n    * @return {Array}\n    ###\n    getMessagesByAccount: (accountID, first = null, last = null) ->\n        sequence = _messages.filter (message) -> message.get('account') is accountID\n        if first? and last?\n            sequence = sequence.slice first, last\n\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\n        return sequence.toOrderedMap()\n\n\n    getMessagesCountByAccount: (accountID) ->\n        return @getMessagesByAccount(accountID).count()\n\n    ###*\n    * Get messages from mailbox, with optional pagination\n    *\n    * @param {String} mailboxID\n    * @param {Number} first     index of first message\n    * @param {Number} last      index of last message\n    *\n    * @return {Array}\n    ###\n    getMessagesByMailbox: (mailboxID, first = null, last = null) ->\n        sequence = _messages.filter (message) -> mailboxID in message.get('mailboxIDs')\n        if first? and last?\n            sequence = sequence.slice first, last\n\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\n        return sequence.toOrderedMap()\n\n    getMessagesCountByMailbox: (mailboxID) ->\n        return @getMessagesByMailbox(mailboxID).count()\n\n    getMessagesByConversation: (messageID) ->\n        idsToLook = [messageID]\n        conversation = []\n        while idToLook = idsToLook.pop()\n            conversation.push @getByID idToLook\n            temp = _messages.filter (message) -> message.get('inReplyTo') is idToLook\n            idsToLook = idsToLook.concat temp.map((item) -> item.get('id')).toArray()\n\n        return conversation\n\nmodule.exports = new MessageStore()\n","Store = require '../libs/flux/store/Store'\n\n{ActionTypes} = require '../constants/AppConstants'\n\nclass SearchStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # search results are a list of message\n    _results = Immutable.OrderedMap.empty()\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_SEARCH_RESULTS, (rawResults) ->\n            _results = _results.withMutations (map) ->\n                rawResults.forEach (rawResult) ->\n                    message = Immutable.Map rawResult\n                    map.set message.get('id'), message\n            @emit 'change'\n\n        handle ActionTypes.CLEAR_SEARCH_RESULTS, ->\n            _results = Immutable.OrderedMap.empty()\n            @emit 'change'\n\n        handle ActionTypes.SET_SEARCH_QUERY, (query) ->\n            _query = query\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    getResults: -> return _results\n\n    getQuery: -> return _query\n\nmodule.exports = new SearchStore()\n","Store = require '../libs/flux/store/Store'\n\n{ActionTypes} = require '../constants/AppConstants'\n\nclass SettingsStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _settings = Immutable.Map\n        messagesPerPage: 5\n        displayConversation: false\n        composeInHTML: true\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SETTINGS_UPDATED, (settings) ->\n            _settings = Immutable.Map settings\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    get: (settingName = null) ->\n        if settingName?\n            return _settings.get settingName\n        else\n            return _settings\n\nmodule.exports = new SettingsStore()\n","module.exports =\n\n    displayAddresses: (addresses, full = false) ->\n        res = []\n        for item in addresses\n            if full\n                if item.name?\n                    res.push \"\\\"#{item.name}\\\" <#{item.address}>\"\n                else\n                    res.push \"<#{item.address}>\"\n            else\n                if item.name?\n                    res.push item.name\n                else\n                    res.push item.address.split('@')[0]\n        return res.join \", \"\n\n    generateReplyText: (text) ->\n        text = text.split '\\n'\n        res  = []\n        text.forEach (line) ->\n            res.push \"> #{line}\"\n        return res.join \"\\n\"\n","request = superagent\n\nAccountTranslator = require './translators/AccountTranslator'\n\nSettingsStore = require '../stores/SettingsStore'\n\nmodule.exports =\n\n    fetchConversation: (emailID, callback) ->\n        request.get \"message/#{emailID}\"\n               .set 'Accept', 'application/json'\n               .end (res) ->\n                   if res.ok\n                       callback null, res.body\n                   else\n                       callback \"Something went wrong -- #{res.body}\"\n\n\n    fetchMessagesByFolder: (mailboxID, callback) ->\n        request.get \"mailbox/#{mailboxID}\"\n               .set 'Accept', 'application/json'\n               .end (res) ->\n                   if res.ok\n                       callback null, res.body\n                   else\n                       callback \"Something went wrong -- #{res.body}\"\n\n    messageSend: (message, callback) ->\n        request.post \"/message\"\n               .send message\n               .set 'Accept', 'application/json'\n               .end (res) ->\n                   if res.ok\n                       callback null, res.body\n                   else\n                       callback \"Something went wrong -- #{res.body}\"\n\n    createAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n\n        request.post 'account'\n               .send account\n               .set 'Accept', 'application/json'\n               .end (res) ->\n                   if res.ok\n                       callback null, res.body\n                   else\n                       callback res.body, null\n\n    editAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n        rawAccount = AccountTranslator.toRawObject account\n\n        request.put \"account/#{rawAccount.id}\"\n               .send rawAccount\n               .set 'Accept', 'application/json'\n               .end (res) ->\n                   if res.ok\n                       callback null, res.body\n                   else\n                       callback res.body, null\n\n    removeAccount: (accountID) ->\n\n        request.del \"account/#{accountID}\"\n               .set 'Accept', 'application/json'\n               .end (res) -> # nothing\n\n    search: (query, numPage, callback) ->\n        encodedQuery = encodeURIComponent query\n        numByPage = SettingsStore.get 'messagesPerPage'\n        request.get \"search/#{encodedQuery}/page/#{numPage}/limit/#{numByPage}\"\n            .end (res) ->\n                if res.ok\n                    callback null, res.body\n                else\n                    callback res.body, null\n","module.exports =\n\n    # Creates an immutable account from a raw account object\n    toImmutable: (rawAccount) ->\n\n        # Recursively creates Immutable OrderedMap of mailboxes\n        _createImmutableMailboxes = (children) ->\n            Immutable.Sequence children\n                .mapKeys (_, mailbox) -> mailbox.id\n                .map (mailbox) ->\n                    mailbox.children = _createImmutableMailboxes mailbox.children\n                    return Immutable.Map mailbox\n                .toOrderedMap()\n\n        rawAccount.mailboxes = _createImmutableMailboxes rawAccount.mailboxes\n        return Immutable.Map rawAccount\n\n\n    toRawObject: toRawObject = (account) ->\n\n        _createRawObjectMailboxes = (children) ->\n            children?.map (child) ->\n                return child.set 'children', _createRawObjectMailboxes child.get 'children'\n            .toVector()\n\n        account = account.set 'mailboxes', _createRawObjectMailboxes account.get 'mailboxes'\n\n        return account.toJS()"]}