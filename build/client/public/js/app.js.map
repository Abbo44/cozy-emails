{"version":3,"file":"public/js/app.js","sources":["app/actions/account_action_creator.coffee","app/actions/conversation_action_creator.coffee","app/actions/layout_action_creator.coffee","app/actions/message_action_creator.coffee","app/actions/search_action_creator.coffee","app/actions/settings_action_creator.coffee","app/app_dispatcher.coffee","app/components/account-config.coffee","app/components/account_picker.coffee","app/components/alert.coffee","app/components/application.coffee","app/components/compose.coffee","app/components/conversation.coffee","app/components/file_picker.coffee","app/components/mailbox-list.coffee","app/components/mails_input.coffee","app/components/menu.coffee","app/components/message-list.coffee","app/components/message.coffee","app/components/search-form.coffee","app/components/settings.coffee","app/components/toast.coffee","app/components/topbar.coffee","app/constants/app_constants.coffee","app/initialize.coffee","app/libs/flux/dispatcher/dispatcher.coffee","app/libs/flux/invariant.js","app/libs/flux/store/store.coffee","app/libs/panel_router.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/mixins/router_mixin.coffee","app/mixins/store_watch_mixin.coffee","app/router.coffee","app/stores/account_store.coffee","app/stores/layout_store.coffee","app/stores/message_store.coffee","app/stores/search_store.coffee","app/stores/settings_store.coffee","app/stores/tasks_store.coffee","app/utils/message_utils.coffee","app/utils/plugin_utils.coffee","app/utils/socketio_utils.coffee","app/utils/translators/account_translator.coffee","app/utils/xhr_utils.coffee"],"names":[],"mappings":"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","sourcesContent":["XHRUtils = require '../utils/xhr_utils'\r\nAppDispatcher = require '../app_dispatcher'\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nAccountStore = require '../stores/account_store'\r\nLayoutActionCreator = null\r\n\r\nmodule.exports = AccountActionCreator =\r\n\r\n    create: (inputValues, afterCreation) ->\r\n        AccountActionCreator._setNewAccountWaitingStatus true\r\n\r\n        XHRUtils.createAccount inputValues, (error, account) ->\r\n            AccountActionCreator._setNewAccountWaitingStatus false\r\n            if error? or not account?\r\n                AccountActionCreator._setNewAccountError error\r\n            else\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.ADD_ACCOUNT\r\n                    value: account\r\n\r\n                afterCreation account\r\n\r\n\r\n    edit: (inputValues, accountID) ->\r\n        AccountActionCreator._setNewAccountWaitingStatus true\r\n\r\n        account = AccountStore.getByID accountID\r\n        newAccount = account.mergeDeep inputValues\r\n\r\n        XHRUtils.editAccount newAccount, (error, rawAccount) ->\r\n            AccountActionCreator._setNewAccountWaitingStatus false\r\n            if error?\r\n                AccountActionCreator._setNewAccountError error\r\n            else\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.EDIT_ACCOUNT\r\n                    value: rawAccount\r\n\r\n\r\n    remove: (accountID) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.REMOVE_ACCOUNT\r\n            value: accountID\r\n        XHRUtils.removeAccount accountID\r\n        window.router.navigate '', true\r\n\r\n    _setNewAccountWaitingStatus: (status) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.NEW_ACCOUNT_WAITING\r\n            value: status\r\n\r\n    _setNewAccountError: (errorMessage) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.NEW_ACCOUNT_ERROR\r\n            value: errorMessage\r\n\r\n    selectAccount: (accountID) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.SELECT_ACCOUNT\r\n            value: accountID\r\n\r\n    discover: (domain, callback) ->\r\n        XHRUtils.accountDiscover domain, (err, infos) ->\r\n            if not infos?\r\n                infos = []\r\n            callback err, infos\r\n\r\n    mailboxCreate: (inputValues, callback) ->\r\n        XHRUtils.mailboxCreate inputValues, (error, account) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.MAILBOX_CREATE\r\n                    value: account\r\n            if callback?\r\n                callback error\r\n\r\n    mailboxUpdate: (inputValues, callback) ->\r\n        XHRUtils.mailboxUpdate inputValues, (error, account) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.MAILBOX_UPDATE\r\n                    value: account\r\n            if callback?\r\n                callback error\r\n\r\n\r\n    mailboxDelete: (inputValues, callback) ->\r\n        XHRUtils.mailboxDelete inputValues, (error, account) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.MAILBOX_DELETE\r\n                    value: account\r\n            if callback?\r\n                callback error\r\n","AppDispatcher  = require '../app_dispatcher'\r\n{ActionTypes}  = require '../constants/app_constants'\r\nXHRUtils       = require '../utils/xhr_utils'\r\n{MessageFlags} = require '../constants/app_constants'\r\n\r\nmodule.exports =\r\n\r\n    delete: (conversationId, callback) ->\r\n        XHRUtils.conversationDelete conversationId, (error, messages) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\r\n                    value: messages\r\n            if callback?\r\n                callback error\r\n\r\n    move: (conversationId, to, callback) ->\r\n        conversation =\r\n            mailboxIDs: []\r\n        observer = jsonpatch.observe conversation\r\n        conversation.mailboxIDs.push to\r\n        patches = jsonpatch.generate observer\r\n        XHRUtils.conversationPatch conversationId, patches, (error, messages) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\r\n                    value: messages\r\n            if callback?\r\n                callback error\r\n\r\n    seen: (conversationId, flags, callback) ->\r\n        conversation =\r\n            flags: []\r\n        observer = jsonpatch.observe conversation\r\n        conversation.flags.push(MessageFlags.SEEN)\r\n        patches = jsonpatch.generate observer\r\n        XHRUtils.conversationPatch conversationId, patches, (error, messages) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\r\n                    value: messages\r\n            if callback?\r\n                callback error\r\n\r\n    unseen: (conversationId, flags, callback) ->\r\n        conversation =\r\n            flags: [MessageFlags.SEEN]\r\n        observer = jsonpatch.observe conversation\r\n        conversation.flags = []\r\n        patches = jsonpatch.generate observer\r\n        XHRUtils.conversationPatch conversationId, patches, (error, messages) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\r\n                    value: messages\r\n            if callback?\r\n                callback error\r\n","XHRUtils = require '../utils/xhr_utils'\r\n\r\nAccountStore  = require '../stores/account_store'\r\nLayoutStore   = require '../stores/layout_store'\r\n\r\nAppDispatcher = require '../app_dispatcher'\r\n\r\n{ActionTypes, AlertLevel} = require '../constants/app_constants'\r\n\r\nAccountActionCreator = require './account_action_creator'\r\nMessageActionCreator = require './message_action_creator'\r\nSearchActionCreator = require './search_action_creator'\r\n\r\nmodule.exports = LayoutActionCreator =\r\n\r\n    showReponsiveMenu: ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.SHOW_MENU_RESPONSIVE\r\n            value: null\r\n\r\n    hideReponsiveMenu: ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.HIDE_MENU_RESPONSIVE\r\n            value: null\r\n\r\n    alert: (level, message) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.DISPLAY_ALERT\r\n            value:\r\n                level: level\r\n                message: message\r\n\r\n    alertSuccess: (message) ->\r\n        LayoutActionCreator.alert AlertLevel.SUCCESS, message\r\n    alertInfo:    (message) ->\r\n        LayoutActionCreator.alert AlertLevel.INFO, message\r\n    alertWarning: (message) ->\r\n        LayoutActionCreator.alert AlertLevel.WARNING, message\r\n    alertError:   (message) ->\r\n        LayoutActionCreator.alert AlertLevel.ERROR, message\r\n\r\n    getDefaultRoute: ->\r\n        # if there is no account, we display the configAccount\r\n        if AccountStore.getAll().length is 0 then 'account.new'\r\n        # else go directly to first account\r\n        else 'account.mailbox.messages'\r\n        \r\n\r\n    showMessageList: (panelInfo, direction) ->\r\n        LayoutActionCreator.hideReponsiveMenu()\r\n\r\n        {accountID, mailboxID, page} = panelInfo.parameters\r\n        selectedAccount = AccountStore.getSelected()\r\n        if not selectedAccount? or selectedAccount.get('id') isnt accountID\r\n            AccountActionCreator.selectAccount accountID\r\n\r\n        XHRUtils.fetchMessagesByFolder mailboxID, page, (err, rawMessage) ->\r\n            if err?\r\n                LayoutActionCreator.alertError err\r\n            else\r\n                MessageActionCreator.receiveRawMessages rawMessage\r\n\r\n    showConversation: (panelInfo, direction) ->\r\n        LayoutActionCreator.hideReponsiveMenu()\r\n        messageID = panelInfo.parameters.messageID\r\n        XHRUtils.fetchConversation messageID, (err, rawMessage) ->\r\n\r\n            if err?\r\n                LayoutActionCreator.alertError err\r\n            else\r\n                MessageActionCreator.receiveRawMessage rawMessage\r\n                # if there isn't a selected account (page loaded directly),\r\n                # select the message's account\r\n                selectedAccount = AccountStore.getSelected()\r\n                if  not selectedAccount? and rawMessage?.mailbox\r\n                    AccountActionCreator.selectAccount rawMessage.mailbox\r\n\r\n\r\n    showComposeNewMessage: (panelInfo, direction) ->\r\n        LayoutActionCreator.hideReponsiveMenu()\r\n\r\n        # if there isn't a selected account (page loaded directly),\r\n        # select the default account\r\n        selectedAccount = AccountStore.getSelected()\r\n        if not selectedAccount?\r\n            defaultAccount = AccountStore.getDefault()\r\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\r\n\r\n    showCreateAccount: (panelInfo, direction) ->\r\n        LayoutActionCreator.hideReponsiveMenu()\r\n        AccountActionCreator.selectAccount -1\r\n\r\n    showConfigAccount: (panelInfo, direction) ->\r\n        LayoutActionCreator.hideReponsiveMenu()\r\n        AccountActionCreator.selectAccount panelInfo.parameters.accountID\r\n\r\n    showSearch: (panelInfo, direction) ->\r\n        AccountActionCreator.selectAccount -1\r\n\r\n        {query, page} = panelInfo.parameters\r\n\r\n        SearchActionCreator.setQuery query\r\n\r\n        XHRUtils.search query, page, (err, results) ->\r\n            if err?\r\n                console.log err\r\n            else\r\n                SearchActionCreator.receiveRawSearchResults results\r\n\r\n    showSettings: (panelInfo, direction) ->\r\n        LayoutActionCreator.hideReponsiveMenu()\r\n\r\n\r\n","AppDispatcher        = require '../app_dispatcher'\r\n{ActionTypes}        = require '../constants/app_constants'\r\nXHRUtils             = require '../utils/xhr_utils'\r\n\r\n\r\nmodule.exports =\r\n\r\n    receiveRawMessages: (messages) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\r\n            value: messages\r\n\r\n    receiveRawMessage: (message) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.RECEIVE_RAW_MESSAGE\r\n            value: message\r\n\r\n    send: (message, callback) ->\r\n        XHRUtils.messageSend message, (error, message) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.MESSAGE_SEND\r\n                    value: message\r\n            if callback?\r\n                callback error, message\r\n\r\n    delete: (message, account, callback) ->\r\n        # Move message to Trash folder\r\n        trash = account.get 'trashMailbox'\r\n        if not trash?\r\n            LayoutActionCreator  = require './layout_action_creator'\r\n            LayoutActionCreator.alertError t 'message idelete no trash'\r\n        else\r\n            msg = message.toObject()\r\n            observer = jsonpatch.observe msg\r\n            delete msg.mailboxIDs[id] for id of msg.mailboxIDs\r\n            msg.mailboxIDs[trash] = -1\r\n            patches = jsonpatch.generate observer\r\n            XHRUtils.messagePatch message.get('id'), patches, (error, message) ->\r\n                if not error?\r\n                    AppDispatcher.handleViewAction\r\n                        type: ActionTypes.MESSAGE_DELETE\r\n                        value: message\r\n                if callback?\r\n                    callback error\r\n\r\n    move: (message, from, to, callback) ->\r\n        msg = message.toObject()\r\n        observer = jsonpatch.observe msg\r\n        delete msg.mailboxIDs[from]\r\n        msg.mailboxIDs[to] = -1\r\n        patches = jsonpatch.generate observer\r\n        XHRUtils.messagePatch message.get('id'), patches, (error, message) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.RECEIVE_RAW_MESSAGE\r\n                    value: message\r\n            if callback?\r\n                callback error\r\n\r\n    updateFlag: (message, flags, callback) ->\r\n        msg = message.toObject()\r\n        patches = jsonpatch.compare {flags: msg.flags}, {flags}\r\n        XHRUtils.messagePatch message.get('id'), patches, (error, message) ->\r\n            if not error?\r\n                AppDispatcher.handleViewAction\r\n                    type: ActionTypes.RECEIVE_RAW_MESSAGE\r\n                    value: message\r\n            if callback?\r\n                callback error\r\n","AppDispatcher = require '../app_dispatcher'\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nmodule.exports = SearchActionCreator =\r\n\r\n    setQuery: (query) ->\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.SET_SEARCH_QUERY\r\n            value: query\r\n\r\n    receiveRawSearchResults: (results) ->\r\n\r\n        # first clear the previous results\r\n        SearchActionCreator.clearSearch false\r\n\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.RECEIVE_RAW_SEARCH_RESULTS\r\n            value: results\r\n\r\n    clearSearch: (clearQuery = true) ->\r\n        if clearQuery then SearchActionCreator.setQuery \"\"\r\n\r\n        AppDispatcher.handleViewAction\r\n            type: ActionTypes.CLEAR_SEARCH_RESULTS\r\n            value: null\r\n\r\n","XHRUtils = require '../utils/xhr_utils'\r\nAppDispatcher = require '../app_dispatcher'\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nSettingsStore = require '../stores/settings_store'\r\nLayoutActionCreator = require './layout_action_creator'\r\n\r\nmodule.exports = SettingsActionCreator =\r\n\r\n    edit: (inputValues) ->\r\n    \tXHRUtils.changeSettings inputValues, (err, values) ->\r\n    \t\tif err\r\n    \t\t\tLayoutActionCreator.alertError t('error cannot save') + err\r\n\r\n    \t\telse\r\n\t\t        AppDispatcher.handleViewAction\r\n\t\t            type: ActionTypes.SETTINGS_UPDATED\r\n\t\t            value: values\r\n\r\n\r\n","Dispatcher = require './libs/flux/dispatcher/dispatcher'\r\n{PayloadSources} = require './constants/app_constants'\r\n\r\n###\r\n    Custom dispatcher class to add semantic method.\r\n###\r\nclass AppDispatcher extends Dispatcher\r\n\r\n    handleViewAction: (action) ->\r\n        payload =\r\n            source: PayloadSources.VIEW_ACTION\r\n            action: action\r\n\r\n        @dispatch payload\r\n\r\n        # create and dispatch a DOM event for plugins\r\n        domEvent = new CustomEvent PayloadSources.VIEW_ACTION, detail: action\r\n        window.dispatchEvent domEvent\r\n\r\n    handleServerAction: (action) ->\r\n        payload =\r\n            source: PayloadSources.SERVER_ACTION\r\n            action: action\r\n\r\n        @dispatch payload\r\n\r\n        # create and dispatch a DOM event for plugins\r\n        domEvent = new CustomEvent PayloadSources.SERVER_ACTION, detail: action\r\n        window.dispatchEvent domEvent\r\n\r\n\r\nmodule.exports = new AppDispatcher()\r\n","{div, h3, h4, form, label, input, button, ul, li, a, span, i, fieldset, legend} =\r\n    React.DOM\r\nclasser = React.addons.classSet\r\n\r\nMailboxList   = require './mailbox-list'\r\nAccountActionCreator = require '../actions/account_action_creator'\r\nRouterMixin = require '../mixins/router_mixin'\r\nLAC  = require '../actions/layout_action_creator'\r\nclasser = React.addons.classSet\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'AccountConfig'\r\n\r\n    mixins: [\r\n        RouterMixin\r\n        React.addons.LinkedStateMixin # two-way data binding\r\n    ]\r\n\r\n    _accountFields: [\r\n        'id', 'label', 'name', 'login', 'password',\r\n        'imapServer', 'imapPort', 'imapSSL', 'imapTLS',\r\n        'smtpServer', 'smtpPort', 'smtpSSL', 'smtpTLS',\r\n        'draftMailbox', 'sentMailbox', 'trashMailbox'\r\n    ]\r\n    _accountSchema:\r\n        properties:\r\n            'label':\r\n                allowEmpty: false\r\n                #type: 'string'\r\n            'name':\r\n                allowEmpty: false\r\n                #type: 'string'\r\n            'login':\r\n                allowEmpty: false\r\n                #type: 'string'\r\n            'password':\r\n                allowEmpty: false\r\n                #type: 'string'\r\n            'imapServer':\r\n                allowEmpty: false\r\n                #type: 'string'\r\n            'imapPort':\r\n                allowEmpty: false\r\n                #type: 'integer'\r\n            'imapSSL':\r\n                allowEmpty: true\r\n                #type: 'boolean'\r\n            'imapTLS':\r\n                allowEmpty: true\r\n                #type: 'boolean'\r\n            'smtpServer':\r\n                allowEmpty: false\r\n                #type: 'string'\r\n            'smtpPort':\r\n                allowEmpty: false\r\n                #type: 'integer'\r\n            'smtpSSL':\r\n                allowEmpty: true\r\n                #type: 'boolean'\r\n            'smtpTLS':\r\n                allowEmpty: true\r\n                #type: 'boolean'\r\n            'draftMailbox':\r\n                allowEmpty: true\r\n                #type: 'string'\r\n            'sentMailbox':\r\n                allowEmpty: true\r\n                #type: 'string'\r\n            'trashMailbox':\r\n                allowEmpty: true\r\n                #type: 'string'\r\n\r\n    shouldComponentUpdate: (nextProps, nextState) ->\r\n        if not Immutable.is(nextState, @state)\r\n            return true\r\n        else\r\n            if not nextProps.selectedAccount?\r\n                should = nextProps.layout isnt @props.layout or\r\n                    nextProps.error     isnt @props.error or\r\n                    nextProps.isWaiting isnt @props.isWaiting\r\n            else\r\n                should = nextProps.layout isnt @props.layout or\r\n                    nextProps.error     isnt @props.error or\r\n                    nextProps.isWaiting isnt @props.isWaiting or\r\n                    not Immutable.is(nextProps.selectedAccount, @props.selectedAccount) or\r\n                    not Immutable.is(nextProps.mailboxes, @props.mailboxes) or\r\n                    not Immutable.is(nextProps.favoriteMailboxes, @props.favoriteMailboxes)\r\n        return should\r\n\r\n    render: ->\r\n        if @props.selectedAccount?\r\n            titleLabel = t \"account edit\"\r\n        else\r\n            titleLabel = t \"account new\"\r\n\r\n        classes = {}\r\n        ['account', 'mailboxes'].map (e) =>\r\n            classes[e] = classer active: @state.tab is e\r\n\r\n        div id: 'mailbox-config',\r\n            h3 className: null, titleLabel\r\n\r\n            if @state.tab?\r\n                ul className: \"nav nav-tabs\", role: \"tablist\",\r\n                    li className: classes['account'],\r\n                        a\r\n                            'data-target': 'account'\r\n                            onClick: @tabChange,\r\n                            t \"account tab account\"\r\n                    li className: classes['mailboxes'],\r\n                        a\r\n                            'data-target': 'mailboxes'\r\n                            onClick: @tabChange,\r\n                            t \"account tab mailboxes\"\r\n\r\n            if not @state.tab or @state.tab is 'account'\r\n                @renderMain()\r\n            if @state.tab is 'mailboxes'\r\n                @renderMailboxes()\r\n\r\n    renderMain: ->\r\n\r\n        if @props.isWaiting then buttonLabel = 'Saving...'\r\n        else if @props.selectedAccount? then buttonLabel = t \"account save\"\r\n        else buttonLabel = t \"account add\"\r\n\r\n        renderError = =>\r\n            if @props.error and @props.error.name is 'AccountConfigError'\r\n                message = t 'config error ' + @props.error.field\r\n                div className: 'alert alert-warning', message\r\n            else if @props.error\r\n                console.log @props.error.stack\r\n                div className: 'alert alert-warning', @props.error.message\r\n\r\n        hasError = (field) =>\r\n            if @state.errors[field]?\r\n                return ' has-error'\r\n            else\r\n                return ''\r\n        getError = (field) =>\r\n            if @state.errors[field]?\r\n                div className: 'col-sm-5 col-sm-offset-2 control-label', @state.errors[field]\r\n\r\n        form className: 'form-horizontal',\r\n            renderError()\r\n            div className: 'form-group' + hasError('label'),\r\n\r\n                label\r\n                    htmlFor: 'mailbox-label',\r\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                    t \"account label\"\r\n                div className: 'col-sm-3',\r\n                    input id: 'mailbox-label',\r\n                    valueLink: @linkState('label'),\r\n                    type: 'text',\r\n                    className: 'form-control',\r\n                    placeholder: t \"account name short\"\r\n                getError 'label'\r\n\r\n            div className: 'form-group' + hasError('name'),\r\n                label\r\n                    htmlFor: 'mailbox-name',\r\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                    t \"account user name\"\r\n                div className: 'col-sm-3',\r\n                    input\r\n                        id: 'mailbox-name',\r\n                        valueLink: @linkState('name'),\r\n                        type: 'text',\r\n                        className: 'form-control',\r\n                        placeholder: t \"account user fullname\"\r\n                getError 'name'\r\n\r\n            div className: 'form-group' + hasError('login') + hasError('auth'),\r\n                label\r\n                    htmlFor: 'mailbox-email-address',\r\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                    t \"account address\"\r\n                div className: 'col-sm-3',\r\n                    input\r\n                        id: 'mailbox-email-address',\r\n                        valueLink: @linkState('login'),\r\n                        ref: 'login',\r\n                        onBlur: @discover,\r\n                        type: 'email',\r\n                        className: 'form-control',\r\n                        placeholder: t \"account address placeholder\"\r\n                getError 'login'\r\n\r\n            div className: 'form-group' + hasError('password') + hasError('auth'),\r\n                label\r\n                    htmlFor: 'mailbox-password',\r\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                    t 'account password'\r\n                div className: 'col-sm-3',\r\n                    input\r\n                        id: 'mailbox-password',\r\n                        valueLink: @linkState('password'),\r\n                        type: 'password',\r\n                        className: 'form-control'\r\n                getError 'password'\r\n\r\n            fieldset null,\r\n                legend null, t 'account sending server'\r\n                div className: 'form-group' + hasError('smtp') + hasError('smtpServer') + hasError('smtpPort'),\r\n                    label\r\n                        htmlFor: 'mailbox-smtp-server',\r\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                        t \"account sending server\"\r\n                    div className: 'col-sm-3',\r\n                        input\r\n                            id: 'mailbox-smtp-server',\r\n                            valueLink: @linkState('smtpServer'),\r\n                            type: 'text',\r\n                            className: 'form-control',\r\n                            placeholder: 'smtp.provider.tld'\r\n                    label\r\n                        htmlFor: 'mailbox-smtp-port',\r\n                        className: 'col-sm-1 control-label',\r\n                        t 'account port'\r\n                    div className: 'col-sm-1',\r\n                        input\r\n                            id: 'mailbox-smtp-port',\r\n                            valueLink: @linkState('smtpPort'),\r\n                            type: 'text',\r\n                            className: 'form-control'\r\n                            onBlur: @_onSMTPPort,\r\n                            onInput: => @setState(smtpManualPort: true)\r\n                    getError 'smtpServer'\r\n                    getError 'smtpPort'\r\n                div className: 'form-group',\r\n                    label\r\n                        htmlFor: 'mailbox-smtp-ssl',\r\n                        className: 'col-sm-4 control-label',\r\n                        t 'account SSL'\r\n                    div className: 'col-sm-1',\r\n                        input\r\n                            id: 'mailbox-smtp-ssl',\r\n                            checkedLink: @linkState('smtpSSL'),\r\n                            type: 'checkbox',\r\n                            className: 'form-control'\r\n                            onClick: (ev) => @_onServerParam ev.target, 'smtp', 'ssl'\r\n                    label\r\n                        htmlFor: 'mailbox-smtp-tls',\r\n                        className: 'col-sm-2 control-label',\r\n                        t 'account TLS'\r\n                    div className: 'col-sm-1',\r\n                        input\r\n                            id: 'mailbox-smtp-tls',\r\n                            checkedLink: @linkState('smtpTLS'),\r\n                            type: 'checkbox',\r\n                            className: 'form-control'\r\n                            onClick: (ev) => @_onServerParam ev.target, 'smtp', 'tls'\r\n\r\n            fieldset null,\r\n                legend null, t 'account receiving server'\r\n                div className: 'form-group' + hasError('imap') + hasError('imapServer') + hasError('imapPort'),\r\n                    label\r\n                        htmlFor: 'mailbox-imap-server',\r\n                        className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                        t \"account receiving server\"\r\n                    div className: 'col-sm-3',\r\n                        input\r\n                            id: 'mailbox-imap-server',\r\n                            valueLink: @linkState('imapServer'),\r\n                            type: 'text',\r\n                            className: 'form-control',\r\n                            placeholder: 'imap.provider.tld'\r\n                    label\r\n                        htmlFor: 'mailbox-imap-port',\r\n                        className: 'col-sm-1 control-label',\r\n                        'Port'\r\n                    div className: 'col-sm-1',\r\n                        input\r\n                            id: 'mailbox-imap-port',\r\n                            valueLink: @linkState('imapPort'),\r\n                            type: 'text',\r\n                            className: 'form-control',\r\n                            onBlur: @_onIMAPPort\r\n                            onInput: => @setState(imapManualPort: true)\r\n                    getError 'imapServer'\r\n                    getError 'imapPort'\r\n                div className: 'form-group',\r\n                    label\r\n                        htmlFor: 'mailbox-imap-ssl',\r\n                        className: 'col-sm-4 control-label',\r\n                        t 'account SSL'\r\n                    div className: 'col-sm-1',\r\n                        input\r\n                            id: 'mailbox-imap-ssl',\r\n                            checkedLink: @linkState('imapSSL'),\r\n                            type: 'checkbox',\r\n                            className: 'form-control'\r\n                            onClick: (ev) => @_onServerParam ev.target, 'imap', 'ssl'\r\n                    label\r\n                        htmlFor: 'mailbox-imap-tls',\r\n                        className: 'col-sm-2 control-label',\r\n                        t 'account TLS'\r\n                    div className: 'col-sm-1',\r\n                        input\r\n                            id: 'mailbox-imap-tls',\r\n                            checkedLink: @linkState('imapTLS'),\r\n                            type: 'checkbox',\r\n                            className: 'form-control'\r\n                            onClick: (ev) => @_onServerParam ev.target, 'imap', 'tls'\r\n\r\n            div className: 'form-group',\r\n                div className: 'col-sm-offset-2 col-sm-5 text-right',\r\n                    if @props.selectedAccount?\r\n                        button\r\n                            className: 'btn btn-cozy',\r\n                            onClick: @onRemove,\r\n                            t \"account remove\"\r\n                    button\r\n                        className: 'btn btn-cozy',\r\n                        onClick: @onSubmit, buttonLabel\r\n\r\n    renderMailboxes: ->\r\n        favorites = @props.favoriteMailboxes\r\n        if @props.mailboxes?\r\n            mailboxes = @props.mailboxes.map (mailbox, key) =>\r\n                favorite = true if favorites.get(mailbox.get('id'))\r\n                MailboxItem {account: @props.selectedAccount, mailbox, favorite}\r\n            .toJS()\r\n        form className: 'form-horizontal',\r\n\r\n            @_renderMailboxChoice 'account draft mailbox', \"draftMailbox\"\r\n            @_renderMailboxChoice 'account sent mailbox',  \"sentMailbox\"\r\n            @_renderMailboxChoice 'account trash mailbox', \"trashMailbox\"\r\n\r\n            h4 null, t \"account tab mailboxes\"\r\n            ul className: \"list-unstyled boxes\",\r\n                mailboxes\r\n                li null\r\n                    div className: \"box edited\",\r\n                        span\r\n                            className: \"box-action\"\r\n                            onClick: @addMailbox\r\n                            title: t(\"mailbox title add\"),\r\n                                i className: 'fa fa-plus'\r\n                        span\r\n                            className: \"box-action\"\r\n                            onClick: @undoMailbox\r\n                            title: t(\"mailbox title add cancel\"),\r\n                                i className: 'fa fa-undo'\r\n                        div null,\r\n                            input\r\n                                id: 'newmailbox',\r\n                                ref: 'newmailbox',\r\n                                type: 'text',\r\n                                className: 'form-control',\r\n                                placeholder: t \"account newmailbox placeholder\"\r\n                        label\r\n                            className: 'col-sm-1 control-label',\r\n                            t \"account newmailbox parent\"\r\n                        div className: 'col-sm-1',\r\n                            MailboxList\r\n                                allowUndefined: true\r\n                                mailboxes: @props.mailboxes\r\n                                selectedMailbox: @state.newMailboxParent\r\n                                onChange: (mailbox) =>\r\n                                    @setState newMailboxParent: mailbox\r\n\r\n    _renderMailboxChoice: (labelText, box) ->\r\n        if @props.selectedAccount?\r\n            div className: 'form-group',\r\n                label\r\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\r\n                    t labelText\r\n                div className: 'col-sm-3',\r\n                    MailboxList\r\n                        allowUndefined: true\r\n                        mailboxes: @props.mailboxes\r\n                        selectedMailbox: @state[box]\r\n                        onChange: (mailbox) =>\r\n                            newState = {}\r\n                            newState[box] = mailbox\r\n                            @setState newState\r\n\r\n\r\n    onSubmit: (event) ->\r\n        # prevents the page from reloading\r\n        event.preventDefault()\r\n\r\n        accountValue = {}\r\n        init = (field) =>\r\n            accountValue[field] = @state[field]\r\n        init field for field in @_accountFields\r\n\r\n        validOptions =\r\n            additionalProperties: true\r\n\r\n        valid = validate accountValue, @_accountSchema, validOptions\r\n\r\n        if valid.valid\r\n            @setState errors: {}\r\n            afterCreation = (id) =>\r\n                @setState tab: 'mailboxes'\r\n\r\n\r\n            if @props.selectedAccount?\r\n                AccountActionCreator.edit accountValue,\r\n                    @props.selectedAccount.get 'id'\r\n            else\r\n                AccountActionCreator.create accountValue, afterCreation\r\n        else\r\n            errors = {}\r\n            setError = (error) ->\r\n                errors[error.property] = t \"validate #{error.message}\"\r\n            setError error for error in valid.errors\r\n            @setState errors: errors\r\n\r\n    onRemove: (event) ->\r\n        # prevents the page from reloading\r\n        event.preventDefault()\r\n\r\n        if window.confirm(t 'account remove confirm')\r\n            AccountActionCreator.remove @props.selectedAccount.get 'id'\r\n\r\n\r\n    tabChange: (e) ->\r\n        e.preventDefault\r\n        @setState tab: e.target.dataset.target\r\n\r\n\r\n    addMailbox: (event) ->\r\n        event.preventDefault()\r\n\r\n        mailbox =\r\n            label: @refs.newmailbox.getDOMNode().value.trim()\r\n            accountID: @props.selectedAccount.get 'id'\r\n            parentID: @state.newMailboxParent\r\n\r\n        AccountActionCreator.mailboxCreate mailbox, (error) ->\r\n            if error?\r\n                LAC.alertError \"#{t(\"mailbox create ko\")} #{error}\"\r\n            else\r\n                LAC.alertSuccess t \"mailbox create ok\"\r\n\r\n    undoMailbox: (event) ->\r\n        event.preventDefault()\r\n\r\n        @refs.newmailbox.getDOMNode().value = ''\r\n        @setState newMailboxParent: null\r\n\r\n\r\n    discover: ->\r\n        login = @refs.login.getDOMNode().value.trim()\r\n\r\n        AccountActionCreator.discover login.split('@')[1], (err, provider) =>\r\n            if not err?\r\n                infos = {}\r\n                getInfos = (server) ->\r\n                    if server.type is 'imap' and not infos.imapServer?\r\n                        infos.imapServer = server.hostname\r\n                        infos.imapPort   = server.port\r\n                    if server.type is 'smtp' and not infos.smtpServer?\r\n                        infos.smtpServer = server.hostname\r\n                        infos.smtpPort   = server.port\r\n                getInfos server for server in provider\r\n                if not infos.imapServer?\r\n                    infos.imapServer = ''\r\n                    infos.imapPort   = '993'\r\n                if not infos.smtpServer?\r\n                    infos.smtpServer = ''\r\n                    infos.smtpPort   = '465'\r\n                switch infos.imapPort\r\n                    when '993'\r\n                        infos.imapSSL = true\r\n                        infos.imapTLS = false\r\n                    else\r\n                        infos.imapSSL = false\r\n                        infos.imapTLS = false\r\n                switch infos.smtpPort\r\n                    when '465'\r\n                        infos.smtpSSL = true\r\n                        infos.smtpTLS = false\r\n                    when '587'\r\n                        infos.smtpSSL = false\r\n                        infos.smtpTLS = true\r\n                    else\r\n                        infos.smtpSSL = false\r\n                        infos.smtpTLS = false\r\n                @setState infos\r\n\r\n    _onServerParam: (target, server, type) ->\r\n        if (server is 'imap' and @state.imapManualPort) or\r\n        (server is 'smtp' and @state.smtpManualPort)\r\n            # port has been set manually, don't update it\r\n            return\r\n        if server is 'smtp'\r\n            if type is 'ssl' and target.checked\r\n                @setState smtpPort: 465\r\n            else if type is 'tls' and target.checked\r\n                @setState smtpPort: 587\r\n        else\r\n            if target.checked\r\n                @setState imapPort: 993\r\n            else\r\n                @setState imapPort: 143\r\n\r\n    _onIMAPPort: (ev) ->\r\n        port = ev.target.value.trim()\r\n        infos =\r\n            imapPort: port\r\n        switch port\r\n            when '993'\r\n                infos.imapSSL = true\r\n                infos.imapTLS = false\r\n            else\r\n                infos.imapSSL = false\r\n                infos.imapTLS = false\r\n        @setState infos\r\n\r\n    _onSMTPPort: (ev) ->\r\n        port = ev.target.value.trim()\r\n        infos = {}\r\n        switch port\r\n            when '465'\r\n                infos.smtpSSL = true\r\n                infos.smtpTLS = false\r\n            when '587'\r\n                infos.smtpSSL = false\r\n                infos.smtpTLS = true\r\n            else\r\n                infos.smtpSSL = false\r\n                infos.smtpTLS = false\r\n        console.log port, infos\r\n        @setState infos\r\n\r\n    componentWillReceiveProps: (props) ->\r\n\r\n\r\n        # prevents the form from changing during submission\r\n        if not props.isWaiting\r\n            # display the account values\r\n            if not props.selectedAccount? or\r\n            @state.id isnt props.selectedAccount.get 'id'\r\n                tab = \"account\"\r\n            else\r\n                tab = @state.tab\r\n            if props.selectedAccount?\r\n                @setState @_accountToState(tab)\r\n            else\r\n                state =\r\n                    tab: null\r\n                    errors: {}\r\n                if props.error?\r\n                    if props.error.name is 'AccountConfigError'\r\n                        field = props.error.field\r\n                        state.errors[field] = t 'config error ' + field\r\n                @setState state\r\n\r\n    getInitialState: (forceDefault) ->\r\n        return @_accountToState(\"account\")\r\n\r\n    _accountToState: (tab)->\r\n        account = @props.selectedAccount\r\n        state =\r\n            errors: {}\r\n        if @props.error?\r\n            if @props.error.name is 'AccountConfigError'\r\n                field = @props.error.field\r\n                errors[field] = t 'config error ' + @props.field\r\n        if account?\r\n            init = (field) ->\r\n                state[field] = account.get field\r\n            init field for field in @_accountFields\r\n            state.newMailboxParent = null\r\n            state.tab = tab\r\n        else\r\n            init = (field) ->\r\n                state[field] = ''\r\n            init field for field in @_accountFields\r\n            state.smtpPort = 465\r\n            state.smtpSSL  = true\r\n            state.smtpTLS  = false\r\n            state.imapPort = 993\r\n            state.imapSSL  = true\r\n            state.imapTLS  = false\r\n            state.newMailboxParent = null\r\n            state.tab = null\r\n\r\n        return state\r\n\r\nMailboxItem = React.createClass\r\n    displayName: 'MailboxItem'\r\n\r\n    propTypes:\r\n        mailbox: React.PropTypes.object\r\n\r\n    componentWillReceiveProps: (props) ->\r\n        @setState edited: false\r\n\r\n    getInitialState: ->\r\n        return {\r\n            edited: false\r\n            favorite: @props.favorite\r\n        }\r\n\r\n    render: ->\r\n        pusher = \"\"\r\n        pusher += \"    \" for j in [1..@props.mailbox.get('depth')] by 1\r\n        key = @props.mailbox.get 'id'\r\n        \"#{pusher}#{@props.mailbox.get 'label'}\"\r\n        if @state.favorite\r\n            favoriteClass = \"fa fa-eye\"\r\n            favoriteTitle = t \"mailbox title favorite\"\r\n        else\r\n            favoriteClass = \"fa fa-eye-slash\"\r\n            favoriteTitle = t \"mailbox title not favorite\"\r\n        li key: key,\r\n            if @state.edited\r\n                div className: \"box edited\",\r\n                    span\r\n                        className: \"box-action\"\r\n                        onClick: @updateMailbox\r\n                        title: t(\"mailbox title edit save\"),\r\n                            i className: 'fa fa-check'\r\n                    span\r\n                        className: \"box-action\"\r\n                        onClick: @undoMailbox\r\n                        title: t(\"mailbox title edit cancel\"),\r\n                            i className: 'fa fa-undo'\r\n                    input\r\n                        className: \"box-label form-control\"\r\n                        ref: 'label',\r\n                        defaultValue: @props.mailbox.get 'label'\r\n                        type: 'text'\r\n            else\r\n                div className: \"box\",\r\n                    span\r\n                        className: \"box-action\",\r\n                        onClick: @editMailbox,\r\n                        title: t(\"mailbox title edit\"),\r\n                            i className: 'fa fa-pencil'\r\n                    span\r\n                        className: \"box-action\",\r\n                        onClick: @deleteMailbox,\r\n                        title: t(\"mailbox title delete\"),\r\n                            i className: 'fa fa-trash-o'\r\n                    span\r\n                        className: \"box-label\",\r\n                        onClick: @editMailbox,\r\n                        \"#{pusher}#{@props.mailbox.get 'label'}\"\r\n                    span\r\n                        className: \"box-action\",\r\n                        title: favoriteTitle\r\n                        onClick: @toggleFavorite,\r\n                            i className: favoriteClass\r\n\r\n    editMailbox: (e) ->\r\n        e.preventDefault()\r\n        @setState edited: true\r\n\r\n    undoMailbox: (e) ->\r\n        e.preventDefault()\r\n        @setState edited: false\r\n\r\n    updateMailbox: (e) ->\r\n        e.preventDefault()\r\n\r\n        mailbox =\r\n            label: @refs.label.getDOMNode().value.trim()\r\n            mailboxID: @props.mailbox.get 'id'\r\n            accountID: @props.account.get 'id'\r\n\r\n        AccountActionCreator.mailboxUpdate mailbox, (error) ->\r\n            if error?\r\n                LAC.alertError \"#{t(\"mailbox update ko\")} #{error}\"\r\n            else\r\n                LAC.alertSuccess t \"mailbox update ok\"\r\n\r\n    toggleFavorite: (e) ->\r\n\r\n        mailbox =\r\n            favorite: not @state.favorite\r\n            mailboxID: @props.mailbox.get 'id'\r\n            accountID: @props.account.get 'id'\r\n\r\n        AccountActionCreator.mailboxUpdate mailbox, (error) ->\r\n            if error?\r\n                LAC.alertError \"#{t(\"mailbox update ko\")} #{error}\"\r\n            else\r\n                LAC.alertSuccess t \"mailbox update ok\"\r\n\r\n        @setState favorite: not @state.favorite\r\n\r\n    deleteMailbox: (e) ->\r\n        e.preventDefault()\r\n\r\n        if window.confirm(t 'account confirm delbox')\r\n            mailbox =\r\n                mailboxID: @props.mailbox.get 'id'\r\n                accountID: @props.account.get 'id'\r\n\r\n            AccountActionCreator.mailboxDelete mailbox, (error) ->\r\n                if error?\r\n                    LAC.alertError \"#{t(\"mailbox delete ko\")} #{error}\"\r\n                else\r\n                    LAC.alertSuccess t \"mailbox delete ok\"\r\n","{div, ul, li, span, a, button, input} = React.DOM\r\n\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'AccountPicker'\r\n\r\n\r\n\r\n    render: ->\r\n        if accounts.length is 1\r\n            @renderNoChoice()\r\n        else\r\n            @renderPicker()\r\n\r\n    onChange: ({target: dataset: value: accountID})->\r\n        @props.valueLink.requestChange accountID\r\n\r\n\r\n    renderNoChoice: ->\r\n        account = @props.accounts.get @props.valueLink.value\r\n\r\n        div style: width: \"30%\",\r\n            input className: 'form-control col-sm-3', type: \"text\", disabled: true, value: account.get 'label'\r\n\r\n\r\n    renderPicker:  ->\r\n        accounts = @props.accounts\r\n        account = accounts.get @props.valueLink.value\r\n\r\n        div null,\r\n            button id: 'compose-from', className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', null,\r\n                span ref: 'account', account.get 'label'\r\n                span className: 'caret'\r\n            ul className: 'dropdown-menu', role: 'menu',\r\n                for key, account of accounts.toJS() when key isnt @props.valueLink.value\r\n                    li role: 'presentation', key: key, a role: 'menuitem', onClick: @onChange, 'data-value': key, \r\n                        account.label\r\n            \r\n\r\n","{div, button, span, strong} = React.DOM\r\n{AlertLevel}     = require '../constants/app_constants'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'Alert'\r\n\r\n    render: ->\r\n\r\n        alert = @props.alert\r\n        if alert.level?\r\n            levels = {}\r\n            levels[AlertLevel.SUCCESS] = 'alert-success'\r\n            levels[AlertLevel.INFO]    = 'alert-info'\r\n            levels[AlertLevel.WARNING] = 'alert-warning'\r\n            levels[AlertLevel.ERROR]   = 'alert-danger'\r\n\r\n        div className: 'row',\r\n            if alert.level?\r\n                div className: \"alert #{levels[alert.level]} alert-dismissible\", role: \"alert\",\r\n                    button type: \"button\", className: \"close\", \"data-dismiss\": \"alert\",\r\n                        span 'aria-hidden': \"true\", \"×\"\r\n                        span className: \"sr-only\", t \"app alert close\"\r\n                    strong> null, alert.message\r\n","# React components\r\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\r\nAccountConfig = require './account-config'\r\nAlert         = require './alert'\r\nTopbar        = require './topbar'\r\nToastContainer = require('./toast').Container\r\nCompose       = require './compose'\r\nConversation  = require './conversation'\r\nMailboxList   = require './mailbox-list'\r\nMenu          = require './menu'\r\nMessageList   = require './message-list'\r\nSettings      = require './settings'\r\nSearchForm = require './search-form'\r\n\r\n# React addons\r\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\r\nclasser = React.addons.classSet\r\n\r\n# React Mixins\r\nRouterMixin = require '../mixins/router_mixin'\r\nStoreWatchMixin = require '../mixins/store_watch_mixin'\r\n\r\n# Flux stores\r\nAccountStore  = require '../stores/account_store'\r\nMessageStore  = require '../stores/message_store'\r\nLayoutStore   = require '../stores/layout_store'\r\nSettingsStore = require '../stores/settings_store'\r\nSearchStore   = require '../stores/search_store'\r\nTasksStore = require '../stores/tasks_store'\r\n\r\n# Flux actions\r\nLayoutActionCreator = require '../actions/layout_action_creator'\r\n\r\n###\r\n    This component is the root of the React tree.\r\n\r\n    It has two functions:\r\n        - building the layout based on the router\r\n        - listening for changes in  the model (Flux stores)\r\n          and re-render accordingly\r\n\r\n    About routing: it uses Backbone.Router as a source of truth for the layout.\r\n    (based on: https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\r\n###\r\nmodule.exports = Application = React.createClass\r\n    displayName: 'Application'\r\n\r\n    mixins: [\r\n        StoreWatchMixin [AccountStore, MessageStore, LayoutStore, SearchStore, TasksStore]\r\n        RouterMixin\r\n    ]\r\n\r\n    render: ->\r\n        # Shortcut\r\n        layout = @props.router.current\r\n        if not layout?\r\n            return div null, t \"app loading\"\r\n\r\n        # is the layout a full-width panel or two panels sharing the width\r\n        isFullWidth = not layout.secondPanel?\r\n\r\n        firstPanelLayoutMode = if isFullWidth then 'full' else 'first'\r\n\r\n        # css classes are a bit long so we use a subfunction to get them\r\n        panelClasses = @getPanelClasses isFullWidth\r\n\r\n        # classes for page-content\r\n        responsiveClasses = classer\r\n            'col-xs-12 col-md-11': true\r\n            'pushed': @state.isResponsiveMenuShown\r\n\r\n        alert = @state.alertMessage\r\n\r\n        getUrl = (mailbox) =>\r\n            @buildUrl\r\n                direction: 'first'\r\n                action: 'account.mailbox.messages'\r\n                parameters: [@state.selectedAccount?.get('id'), mailbox.get('id')]\r\n\r\n        # Actual layout\r\n        div className: 'container-fluid',\r\n            div className: 'row',\r\n\r\n                # Menu is self-managed because this part of the layout\r\n                # is always the same.\r\n                Menu\r\n                    accounts: @state.accounts\r\n                    selectedAccount: @state.selectedAccount\r\n                    selectedMailboxID: @state.selectedMailboxID\r\n                    isResponsiveMenuShown: @state.isResponsiveMenuShown\r\n                    layout: @props.router.current\r\n                    favoriteMailboxes: @state.favoriteMailboxes\r\n                    unreadCounts: @state.unreadCounts\r\n\r\n                div id: 'page-content', className: responsiveClasses,\r\n\r\n                    # Display feedback\r\n                    Alert { alert }\r\n                    ToastContainer toasts: @state.toasts\r\n\r\n                    # The quick actions bar \r\n                    Topbar \r\n                        layout: @props.router.current\r\n                        mailboxes: @state.mailboxes\r\n                        selectedAccount: @state.selectedAccount\r\n                        selectedMailboxID: @state.selectedMailboxID\r\n                        searchQuery: @state.searchQuery\r\n\r\n                    # Two layout modes: one full-width panel or two panels\r\n                    div id: 'panels', className: 'row',\r\n                        div className: panelClasses.firstPanel, key: 'left-panel-' + layout.firstPanel.action + '-' + Object.keys(layout.firstPanel.parameters).join('-'),\r\n                            @getPanelComponent layout.firstPanel, firstPanelLayoutMode\r\n                        if not isFullWidth and layout.secondPanel?\r\n                            div className: panelClasses.secondPanel, key: 'right-panel-' + layout.secondPanel.action + '-' + Object.keys(layout.secondPanel.parameters).join('-'),\r\n                                @getPanelComponent layout.secondPanel, 'second'\r\n\r\n\r\n    # Panels CSS classes are a bit long so we get them from a this subfunction\r\n    # Also, it manages transitions between screens by adding relevant classes\r\n    getPanelClasses: (isFullWidth) ->\r\n        previous = @props.router.previous\r\n        layout   = @props.router.current\r\n        first     = layout.firstPanel\r\n        second   = layout.secondPanel\r\n\r\n        # Two cases: the layout has a full-width panel...\r\n        if isFullWidth\r\n            classes = firstPanel: 'panel col-xs-12 col-md-12'\r\n\r\n            # custom case for mailbox.config action (top right cog button)\r\n            if previous? and first.action is 'account.config'\r\n                classes.firstPanel += ' moveFromTopRightCorner'\r\n\r\n            # (default) when full-width panel is shown after a two-panels structure\r\n            else if previous? and previous.secondPanel\r\n\r\n                # if the full-width panel was on right right before, it expands\r\n                if previous.secondPanel.action is layout.firstPanel.action and\r\n                   _.difference(previous.secondPanel.parameters, layout.firstPanel.parameters).length is 0\r\n                    classes.firstPanel += ' expandFromRight'\r\n\r\n            # (default) when full-width panel is shown after a full-width panel\r\n            else if previous?\r\n                classes.firstPanel += ' moveFromLeft'\r\n\r\n\r\n        # ... or a two panels layout.\r\n        else\r\n            classes =\r\n                firstPanel: 'panel col-xs-12 col-md-6 hidden-xs hidden-sm'\r\n                secondPanel: 'panel col-xs-12 col-md-6'\r\n\r\n            # we don't animate in the first render\r\n            if previous?\r\n                wasFullWidth = not previous.secondPanel?\r\n\r\n                # transition from full-width to two-panels layout\r\n                if wasFullWidth and not isFullWidth\r\n\r\n                    # expanded second panel collapses\r\n                    if previous.firstPanel.action is second.action and\r\n                       _.difference(previous.firstPanel.parameters, second.parameters).length is 0\r\n                        classes.firstPanel += ' moveFromLeft'\r\n                        classes.secondPanel += ' slide-in-from-left'\r\n\r\n                    # (default) opens second panel sliding from the right\r\n                    else\r\n                        classes.secondPanel += ' slide-in-from-right'\r\n\r\n                # (default) opens second panel sliding from the left\r\n                else if not isFullWidth\r\n                    classes.secondPanel += ' slide-in-from-left'\r\n\r\n        return classes\r\n\r\n\r\n    # Factory of React components for panels\r\n    getPanelComponent: (panelInfo, layout) ->\r\n\r\n        # -- Generates a list of messages for a given account and mailbox\r\n        if panelInfo.action is 'account.mailbox.messages'\r\n            accountID = panelInfo.parameters.accountID\r\n            mailboxID = panelInfo.parameters.mailboxID\r\n            pageNum   = panelInfo.parameters.page ? 1\r\n            numPerPage      = @state.settings.get 'messagesPerPage'\r\n            firstOfPage     = ( pageNum - 1 ) * numPerPage\r\n            lastOfPage      = ( pageNum * numPerPage )\r\n\r\n            # gets the selected message if any\r\n            openMessage = null\r\n            direction = if layout is 'first' then 'secondPanel' else 'firstPanel'\r\n            otherPanelInfo = @props.router.current[direction]\r\n            if otherPanelInfo?.action is 'message'\r\n                openMessage = MessageStore.getByID otherPanelInfo.parameters.messageID\r\n\r\n            messagesCount = MessageStore.getMessagesCounts().get mailboxID\r\n            return MessageList\r\n                messages: MessageStore.getMessagesByMailbox mailboxID, firstOfPage, lastOfPage\r\n                messagesCount: messagesCount\r\n                accountID: accountID\r\n                mailboxID: mailboxID\r\n                layout: layout\r\n                openMessage: openMessage\r\n                messagesPerPage: numPerPage\r\n                pageNum: pageNum\r\n                emptyListMessage: t 'list empty'\r\n                counterMessage: t 'list count', messagesCount\r\n                buildPaginationUrl: (numPage) =>\r\n                    @buildUrl\r\n                        direction: 'first'\r\n                        action: 'account.mailbox.messages'\r\n                        parameters: [accountID, mailboxID, numPage]\r\n\r\n        # -- Generates a configuration window for a given account\r\n        else if panelInfo.action is 'account.config'\r\n            selectedAccount   = @state.selectedAccount\r\n            error             = AccountStore.getError()\r\n            isWaiting         = AccountStore.isWaiting()\r\n            mailboxes         = AccountStore.getSelectedMailboxes true\r\n            favoriteMailboxes = @state.favoriteMailboxes\r\n            return AccountConfig {layout, error, isWaiting, selectedAccount, mailboxes, favoriteMailboxes}\r\n\r\n        # -- Generates a configuration window to create a new account\r\n        else if panelInfo.action is 'account.new'\r\n            error = AccountStore.getError()\r\n            isWaiting = AccountStore.isWaiting()\r\n            return AccountConfig {layout, error, isWaiting}\r\n\r\n        # -- Generates a conversation\r\n        else if panelInfo.action is 'message'\r\n\r\n            if messageID = panelInfo.parameters.messageID\r\n                message = MessageStore.getByID messageID\r\n\r\n            return Conversation\r\n                layout            : layout\r\n                settings          : @state.settings\r\n                accounts          : @state.accounts\r\n                mailboxes         : @state.mailboxes\r\n                selectedAccount   : @state.selectedAccount\r\n                selectedMailboxID : @state.selectedMailboxID\r\n                message           : MessageStore.getByID messageID\r\n                conversation      : MessageStore.getMessagesByConversation messageID\r\n\r\n        # -- Generates the new message composition form\r\n        else if panelInfo.action is 'compose'\r\n\r\n            if messageID = panelInfo.parameters.messageID\r\n                message = MessageStore.getByID messageID\r\n\r\n            return Compose\r\n                layout          : layout\r\n                action          : null\r\n                inReplyTo       : null\r\n                settings        : @state.settings\r\n                accounts        : @state.accounts\r\n                selectedAccount : @state.selectedAccount\r\n                message         : message or null\r\n\r\n        # -- Display the settings form\r\n        else if panelInfo.action is 'settings'\r\n            settings = @state.settings\r\n            return Settings {settings}\r\n\r\n        # -- Generates a message list based on search result\r\n        else if panelInfo.action is 'search'\r\n            accountID = null\r\n            mailboxID = null\r\n            pageNum   = panelInfo.parameters.page\r\n            numPerPage      = @state.settings.get 'messagesPerPage'\r\n            firstOfPage     = ( pageNum - 1 ) * numPerPage\r\n            lastOfPage      = ( pageNum * numPerPage )\r\n\r\n            # gets the selected message if any\r\n            openMessage = null\r\n            direction = if layout is 'first' then 'secondPanel' else 'firstPanel'\r\n            otherPanelInfo = @props.router.current[direction]\r\n            if otherPanelInfo?.action is 'message'\r\n                messageID = otherPanelInfo.parameters.messageID\r\n                openMessage = MessageStore.getByID messageID\r\n\r\n            results = SearchStore.getResults()\r\n            return MessageList\r\n                messages: results\r\n                messagesCount: results.count()\r\n                accountID: accountID\r\n                mailboxID: mailboxID\r\n                layout: layout\r\n                openMessage: openMessage\r\n                messagesPerPage: numPerPage\r\n                pageNum: pageNum\r\n                emptyListMessage: t 'list search empty', query: @state.searchQuery\r\n                counterMessage: t 'list search count', results.count()\r\n                buildPaginationUrl: (numPage) =>\r\n                    @buildUrl\r\n                        direction: 'first'\r\n                        action: 'search'\r\n                        parameters: [@state.searchQuery, numPage]\r\n\r\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\r\n        else return div null, 'Unknown component'\r\n\r\n    getStateFromStores: ->\r\n\r\n        selectedAccount = AccountStore.getSelected()\r\n        # When selecting compose in Menu, we may not have a selected account\r\n        if not selectedAccount?\r\n            selectedAccount = AccountStore.getDefault()\r\n        selectedAccountID = selectedAccount?.get('id') or null\r\n\r\n        firstPanelInfo = @props.router.current?.firstPanel\r\n        if firstPanelInfo?.action is 'account.mailbox.messages'\r\n            selectedMailboxID = firstPanelInfo.parameters.mailboxID\r\n        else\r\n            selectedMailboxID = null\r\n\r\n        return {\r\n            accounts: AccountStore.getAll()\r\n            selectedAccount: selectedAccount\r\n            isResponsiveMenuShown: LayoutStore.isMenuShown()\r\n            alertMessage: LayoutStore.getAlert()\r\n            toasts: TasksStore.getTasks()\r\n            mailboxes: AccountStore.getSelectedMailboxes true\r\n            selectedMailboxID: selectedMailboxID\r\n            selectedMailbox: AccountStore.getSelectedMailbox selectedMailboxID\r\n            favoriteMailboxes: AccountStore.getSelectedFavorites()\r\n            unreadCounts: MessageStore.getUnreadMessagesCounts()\r\n            searchQuery: SearchStore.getQuery()\r\n            settings: SettingsStore.get()\r\n            plugins: window.plugins\r\n        }\r\n\r\n\r\n    # Listens to router changes. Renders the component on changes.\r\n    componentWillMount: ->\r\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\r\n        # to rebind its scope on the fly\r\n        @onRoute = (params) =>\r\n            {firstPanelInfo, secondPanelInfo} = params\r\n            @forceUpdate()\r\n\r\n        @props.router.on 'fluxRoute', @onRoute\r\n\r\n\r\n    # Stops listening to router changes\r\n    componentWillUnmount: ->\r\n        @props.router.off 'fluxRoute', @onRoute\r\n\r\n","{div, h3, a, i, textarea, form, label, button, span, ul, li, input} = React.DOM\r\nclasser = React.addons.classSet\r\n\r\nFilePicker = require './file_picker'\r\nMailsInput = require './mails_input'\r\n\r\nAccountPicker = require './account_picker'\r\n\r\n{ComposeActions} = require '../constants/app_constants'\r\n\r\nMessageUtils = require '../utils/message_utils'\r\n\r\nLayoutActionCreator  = require '../actions/layout_action_creator'\r\nMessageActionCreator = require '../actions/message_action_creator'\r\n\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nmodule.exports = Compose = React.createClass\r\n    displayName: 'Compose'\r\n\r\n    mixins: [\r\n        RouterMixin,\r\n        React.addons.LinkedStateMixin # two-way data binding\r\n    ]\r\n\r\n    propTypes:\r\n        selectedAccount: React.PropTypes.object.isRequired\r\n        layout:          React.PropTypes.string.isRequired\r\n        accounts:        React.PropTypes.object.isRequired\r\n        message:         React.PropTypes.object\r\n        action:          React.PropTypes.string\r\n        callback:        React.PropTypes.func\r\n        settings:        React.PropTypes.object.isRequired\r\n\r\n    render: ->\r\n\r\n        return unless @props.accounts\r\n\r\n        expandUrl = @buildUrl\r\n            direction: 'first'\r\n            action: 'compose'\r\n            fullWidth: true\r\n\r\n        collapseUrl = @buildUrl\r\n            firstPanel:\r\n                action: 'account.mailbox.messages'\r\n                parameters: @state.accountID\r\n            secondPanel:\r\n                action: 'compose'\r\n\r\n        closeUrl = @buildClosePanelUrl @props.layout\r\n\r\n        classLabel = 'col-sm-2 col-sm-offset-0 control-label'\r\n        classInput = 'col-sm-8'\r\n\r\n        div id: 'email-compose',\r\n            h3 null,\r\n                a href: closeUrl, className: 'close-email hidden-xs hidden-sm',\r\n                    i className:'fa fa-times'\r\n                t 'compose'\r\n                if @props.layout isnt 'full'\r\n                    a href: expandUrl, className: 'expand hidden-xs hidden-sm',\r\n                        i className: 'fa fa-arrows-h'\r\n                else\r\n                    a href: collapseUrl, className: 'close-email pull-right',\r\n                        i className:'fa fa-compress'\r\n            form className: 'form-horizontal',\r\n                div className: 'form-group',\r\n                    label htmlFor: 'compose-from', className: classLabel, t \"compose from\"\r\n                    div className: classInput,\r\n                        div className: 'btn-toolbar compose-toggle', role: 'toolbar',\r\n                            div className: 'btn-group btn-group-sm',\r\n                                button className: 'btn btn-default', type: 'button', onClick: @onToggleCc,\r\n                                    span className: 'tool-long', t 'compose toggle cc'\r\n                            div className: 'btn-group btn-group-sm',\r\n                                button className: 'btn btn-default', type: 'button', onClick: @onToggleBcc,\r\n                                    span className: 'tool-long', t 'compose toggle bcc'\r\n                        \r\n                        AccountPicker\r\n                            accounts: @props.accounts\r\n                            valueLink: @linkState 'accountID'\r\n\r\n\r\n                MailsInput\r\n                    id: 'compose-to'\r\n                    valueLink: @linkState 'to'\r\n                    label: t 'compose to'\r\n                    placeholder: t 'compose to help'\r\n\r\n                MailsInput\r\n                    id: 'compose-cc'\r\n                    className: 'compose-cc'\r\n                    valueLink: @linkState 'cc'\r\n                    label: t 'compose cc'\r\n                    placeholder: t 'compose cc help'\r\n\r\n                MailsInput\r\n                    id: 'compose-bcc'\r\n                    className: 'compose-bcc'\r\n                    valueLink: @linkState 'bcc'\r\n                    label: t 'compose bcc'\r\n                    placeholder: t 'compose bcc help'\r\n\r\n                div className: 'form-group',\r\n                    label htmlFor: 'compose-subject', className: classLabel, t \"compose subject\"\r\n                    div className: classInput,\r\n                        input id: 'compose-subject', ref: 'subject', valueLink: @linkState('subject'), type: 'text', className: 'form-control', placeholder: t \"compose subject help\"\r\n                div className: 'form-group',\r\n                    if @state.composeInHTML\r\n                        div className: 'rt-editor form-control', ref: 'html', contentEditable: true, dangerouslySetInnerHTML: {__html: @linkState('html').value}\r\n                    else\r\n                        textarea className: 'editor', ref: 'content', defaultValue: @linkState('body').value\r\n                \r\n                div className: 'attachements', FilePicker \r\n                    editable: true\r\n                    form: false\r\n                    valueLink: @linkState 'attachments'\r\n                \r\n                div className: 'composeToolbox',\r\n                    div className: 'btn-toolbar', role: 'toolbar',\r\n                        div className: 'btn-group btn-group-sm',\r\n                            button className: 'btn btn-default', type: 'button', onClick: @onDraft,\r\n                                span className: 'fa fa-save'\r\n                                span className: 'tool-long', t 'compose action draft'\r\n                        div className: 'btn-group btn-group-lg',\r\n                            button className: 'btn btn-default', type: 'button', onClick: @onSend,\r\n                                span className: 'fa fa-send'\r\n                                span className: 'tool-long', t 'compose action send'\r\n\r\n    componentDidMount: ->\r\n        # scroll compose window into view\r\n        node = @getDOMNode()\r\n        node.scrollIntoView()\r\n        if @state.composeInHTML\r\n            # Some DOM manipulation when replying inside the message.\r\n            # When inserting a new line, we must close all blockquotes,\r\n            # insert a blank line and then open again blockquotes\r\n            jQuery('#email-compose .rt-editor').on('keypress', (e) ->\r\n                if e.keyCode is 13\r\n                    # timeout to let the editor perform its own stuff\r\n                    setTimeout ->\r\n                        matchesSelector = document.documentElement.matches or\r\n                              document.documentElement.matchesSelector or\r\n                              document.documentElement.webkitMatchesSelector or\r\n                              document.documentElement.mozMatchesSelector or\r\n                              document.documentElement.oMatchesSelector or\r\n                              document.documentElement.msMatchesSelector\r\n\r\n                        target = document.getSelection().anchorNode\r\n                        if matchesSelector? and not matchesSelector.call(target, '.rt-editor blockquote *')\r\n                            # we are not inside a blockquote, nothing to do\r\n                            return\r\n\r\n                        if target.lastChild\r\n                            target = target.lastChild.previousElementSibling\r\n                        parent = target\r\n\r\n                        # alternative 1\r\n                        # we create 2 ranges, one from the begining of message\r\n                        # to the caret position, the second from caret to the\r\n                        # end. We then create fragments from the ranges and\r\n                        # override message with first fragment, a blank line\r\n                        # and second fragment\r\n                        process = ->\r\n                            current = parent\r\n                            parent = parent?.parentNode\r\n                        process()\r\n                        process() while (parent? and\r\n                            not parent.classList.contains 'rt-editor')\r\n                        rangeBefore = document.createRange()\r\n                        rangeBefore.setEnd target, 0\r\n                        rangeBefore.setStartBefore parent.firstChild\r\n                        rangeAfter = document.createRange()\r\n                        if target.nextSibling?\r\n                            # remove the BR the <enter> key probably inserted\r\n                            rangeAfter.setStart target.nextSibling, 0\r\n                        else\r\n                            rangeAfter.setStart target, 0\r\n                        rangeAfter.setEndAfter parent.lastChild\r\n                        before = rangeBefore.cloneContents()\r\n                        after = rangeAfter.cloneContents()\r\n                        inserted = document.createElement 'p'\r\n                        inserted.innerHTML = \"<br />\"\r\n                        parent.innerHTML = \"\"\r\n                        parent.appendChild before\r\n                        parent.appendChild inserted\r\n                        parent.appendChild after\r\n\r\n                        ###\r\n                        # alternative 2\r\n                        # We move every node from the caret to the end of the\r\n                        # message to a new DOM tree, then insert a blank line\r\n                        # and the new tree\r\n                        parent = target\r\n                        p2 = null\r\n                        p3 = null\r\n                        process = ->\r\n                            p3 = p2\r\n                            current = parent\r\n                            parent = parent.parentNode\r\n                            p2 = parent.cloneNode false\r\n                            if p3?\r\n                                p2.appendChild p3\r\n                            s = current.nextSibling\r\n                            while s?\r\n                                p2.appendChild(s.cloneNode(true))\r\n                                s2 = s.nextSibling\r\n                                parent.removeChild s\r\n                                s = s2\r\n                        process()\r\n                        process() while (parent.parentNode? and\r\n                            not parent.parentNode.classList.contains 'rt-editor')\r\n                        after = p2\r\n                        inserted = document.createElement 'p'\r\n                        inserted.innerHTML = \"<br />\"\r\n                        if parent.nextSibling\r\n                            parent.parentNode.insertBefore inserted, parent.nextSibling\r\n                            parent.parentNode.insertBefore after, parent.nextSibling\r\n                        else\r\n                            parent.parentNode.appendChild inserted\r\n                            parent.parentNode.appendChild after\r\n                        ###\r\n\r\n                        inserted.focus()\r\n                        sel = window.getSelection()\r\n                        sel.collapse inserted, 0\r\n\r\n                    , 0\r\n            )\r\n\r\n    getInitialState: (forceDefault) ->\r\n\r\n        # edition of an existing draft\r\n        if message = @props.message\r\n            state = \r\n                composeInHTML: message.get('html')?\r\n\r\n            # TODO : smarter ?\r\n            state[key] = value for key, value of message.toJS()\r\n                \r\n        # new draft\r\n        else\r\n            state = MessageUtils.makeReplyMessage @props.inReplyTo, @props.action\r\n            state.composeInHTML = @props.settings.get 'composeInHTML'\r\n            state.accountID ?= @props.selectedAccount.get 'id'\r\n\r\n        state.attachments ?= []\r\n        \r\n        return state\r\n\r\n    onDraft: (args) ->\r\n        @_doSend true\r\n\r\n    onSend: (args) ->\r\n        @_doSend false\r\n\r\n    _doSend: (isDraft) ->\r\n\r\n        account = @props.accounts.get @state.accountID\r\n\r\n        from = \r\n            name: account?.get('name') or undefined\r\n            address: account.get('login')\r\n\r\n        unless ~from.address.indexOf '@'\r\n            from.address += '@' + account.get('imapServer')\r\n\r\n        message =\r\n            accountID   : @state.accountID\r\n            from        : [from]\r\n            to          : @state.to\r\n            cc          : @state.cc\r\n            bcc         : @state.bcc\r\n            subject     : @state.subject\r\n            isDraft     : isDraft\r\n            attachments : @state.attachments\r\n\r\n        if @state.id\r\n            message.id = @state.id\r\n\r\n        if @state.composeInHTML\r\n            message.html    = this.refs.html.getDOMNode().innerHTML\r\n            message.content = toMarkdown(message.html)\r\n        else\r\n            message.content = this.refs.content.getDOMNode().value.trim()\r\n\r\n        callback = @props.callback\r\n\r\n        MessageActionCreator.send message, (error, message) =>\r\n            if isDraft\r\n                msgKo = t \"message action draft ko\"\r\n                msgOk = t \"message action draft ok\"\r\n            else\r\n                msgKo = t \"message action sent ko\"\r\n                msgOk = t \"message action sent ok\"\r\n            if error?\r\n                LayoutActionCreator.alertError \"#{msgKo} :  error\"\r\n            else\r\n                LayoutActionCreator.alertSuccess msgOk\r\n                @setState message\r\n                \r\n                if callback?\r\n                    callback error\r\n                else if not isDraft\r\n                    # mail sent close the pane\r\n                    @redirect @buildClosePanelUrl @props.layout\r\n\r\n    onToggleCc: (e) ->\r\n        toggle = (e) -> e.classList.toggle 'shown'\r\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-cc'\r\n\r\n    onToggleBcc: (e) ->\r\n        toggle = (e) -> e.classList.toggle 'shown'\r\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-bcc'\r\n","{div, ul, li, span, i, p, h3, a} = React.DOM\r\nMessage = require './message'\r\nclasser = React.addons.classSet\r\n\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'Conversation'\r\n\r\n    mixins: [RouterMixin]\r\n\r\n    propTypes:\r\n        message           : React.PropTypes.object\r\n        conversation      : React.PropTypes.array\r\n        selectedAccount   : React.PropTypes.object.isRequired\r\n        layout            : React.PropTypes.string.isRequired\r\n        selectedMailboxID : React.PropTypes.string.isRequired\r\n        mailboxes         : React.PropTypes.object.isRequired\r\n        settings          : React.PropTypes.object.isRequired\r\n        accounts          : React.PropTypes.object.isRequired\r\n\r\n    shouldComponentUpdate: (nextProps, nextState) ->\r\n\r\n        comp = (a, b) ->\r\n            if (a? and not b?) or (not a? and b?) then return false\r\n            if typeof b.toJSON isnt 'function' or typeof b.toJSON isnt 'function'\r\n                return JSON.stringify(a) is JSON.stringify(b)\r\n            return JSON.stringify(a.toJSON()) is JSON.stringify(b.toJSON())\r\n\r\n        shouldUpdate =\r\n            not comp nextProps.message, @props.message or\r\n            not comp nextProps.conversation, @props.conversation or\r\n            not comp nextProps.selectedAccount, @props.selectedAccount or\r\n            not comp nextProps.selectedMailbox, @props.selectedMailbox or\r\n            not comp nextProps.mailboxes, @props.mailboxes or\r\n            not comp nextProps.settings, @props.settings or\r\n            not comp nextProps.accounts, @props.accounts or\r\n            nextProps.layout isnt @props.layout\r\n\r\n        return shouldUpdate\r\n\r\n    render: ->\r\n        if not @props.message? or not @props.conversation\r\n            return p null, t \"app loading\"\r\n\r\n        expandUrl = @buildUrl\r\n            direction: 'first'\r\n            action: 'message'\r\n            parameters: @props.message.get 'id'\r\n            fullWidth: true\r\n\r\n        if window.router.previous?\r\n            try\r\n                selectedAccountID = @props.selectedAccount.get 'id'\r\n            catch\r\n                selectedAccountID = @props.conversation[0].mailbox\r\n        else\r\n            selectedAccountID = @props.conversation[0].mailbox\r\n\r\n        collapseUrl = @buildUrl\r\n            firstPanel:\r\n                action: 'account.mailbox.messages'\r\n                parameters: selectedAccountID\r\n            secondPanel:\r\n                action: 'message'\r\n                parameters: @props.conversation[0].get 'id'\r\n\r\n        if @props.layout is 'full'\r\n            closeUrl = @buildUrl\r\n                direction: 'first'\r\n                action: 'account.mailbox.messages'\r\n                parameters: selectedAccountID\r\n                fullWidth: true\r\n        else\r\n            closeUrl = @buildClosePanelUrl @props.layout\r\n\r\n        closeIcon = if @props.layout is 'full' then 'fa-th-list' else 'fa-times'\r\n\r\n        div className: 'conversation',\r\n\r\n            # allows multiple email open but UI is not good enough\r\n            #ul className: 'nav nav-tabs nav-justified',\r\n            #    li className: 'active',\r\n            #        a href: '#', 'Responsive Cozy Emails'\r\n            #        span className: 'close', 'x'\r\n            #    li null,\r\n            #        a href: '#', 'Responsive Cozy Emails'\r\n            #        span className: 'close', 'x'\r\n            #    li null,\r\n            #        a href: '#', 'Responsive Cozy Emails'\r\n            #        span className: 'close', 'x'\r\n            #    li null,\r\n            #        a href: '#', 'Responsive Cozy Emails'\r\n            #        span className: 'close', 'x'\r\n            #    li null,\r\n            #        a href: '#', 'Responsive Cozy Emails'\r\n            #        span className: 'close', 'x'\r\n\r\n            h3 null,\r\n                a href: closeUrl, className: 'close-conversation hidden-xs hidden-sm',\r\n                    i className:'fa ' + closeIcon\r\n                @props.message.get 'subject'\r\n                if @props.layout isnt 'full'\r\n                    a href: expandUrl, className: 'expand hidden-xs hidden-sm',\r\n                        i className: 'fa fa-arrows-h'\r\n                else\r\n                    a href: collapseUrl, className: 'close-conversation pull-right',\r\n                        i className:'fa fa-compress'\r\n\r\n            ul className: 'thread list-unstyled',\r\n                for message, key in @props.conversation\r\n                    isLast = key is @props.conversation.length - 1\r\n                    Message \r\n                        key: key\r\n                        isLast: isLast\r\n                        message: message\r\n                        settings: @props.settings\r\n                        accounts: @props.accounts \r\n                        mailboxes: @props.mailboxes\r\n                        selectedAccount: @props.selectedAccount\r\n                        selectedMailboxID: @props.selectedMailboxID\r\n","{div, form, input, ul, li, span, i, a} = React.DOM\r\n\r\nMessageUtils = require '../utils/message_utils'\r\n\r\n###\r\n# File picker\r\n#\r\n# Available props\r\n# - editable: boolean (false)\r\n# - files: array\r\n# - form: boolean (true) embed component inside a form element\r\n# - valueLink: a ReactLink for files\r\n###\r\n\r\nFilePicker = React.createClass\r\n    displayName: 'FilePicker'\r\n\r\n    propTypes:\r\n        editable: React.PropTypes.bool\r\n        form:     React.PropTypes.bool\r\n        display:  React.PropTypes.func\r\n        value:    React.PropTypes.array\r\n        valueLink: React.PropTypes.shape\r\n            value: React.PropTypes.array\r\n            requestChange: React.PropTypes.func\r\n\r\n    getDefaultProps: ->\r\n        editable: false\r\n        form: true\r\n        value: []\r\n        valueLink:\r\n            value: []\r\n            requestChange: ->\r\n\r\n    getInitialState: ->\r\n        files: @_convertFileList @props.value or @props.valueLink.value\r\n\r\n    componentWillReceiveProps: (props) ->\r\n        files = @_convertFileList @props.value or @props.valueLink.value\r\n        @setState files: files\r\n\r\n    render: ->\r\n        files = @state.files.map (file) =>\r\n            doDelete = =>\r\n                updated = @state.files.filter (f) ->\r\n                    return f.name isnt file.name\r\n                @props.valueLink.requestChange updated\r\n                @setState {files: updated }\r\n            options =\r\n                key: file.name\r\n                file: file\r\n                editable: @props.editable\r\n                delete: doDelete\r\n\r\n            if @props.display?\r\n                options.display = =>\r\n                    @props.display file\r\n\r\n            FileItem options\r\n\r\n        container = if @props.form then form else div\r\n\r\n        container className: 'file-picker',\r\n            ul className: 'files list-unstyled',\r\n                files\r\n            if @props.editable\r\n                div null,\r\n                    # triggering \"click\" won't work if file input is hidden\r\n                    span className: \"file-wrapper\",\r\n                        input\r\n                            type: \"file\",\r\n                            multiple: \"multiple\",\r\n                            ref: \"file\",\r\n                            onChange: @handleFiles\r\n                    div className: \"dropzone\",\r\n                        ref: \"dropzone\",\r\n                        onDragOver: @allowDrop,\r\n                        onDrop: @handleFiles,\r\n                        onClick: @onOpenFile,\r\n                            i className: \"fa fa-paperclip\"\r\n                            span null, t \"picker drop here\"\r\n\r\n    onOpenFile: (e) ->\r\n        e.preventDefault()\r\n        jQuery(@refs.file.getDOMNode()).trigger \"click\"\r\n\r\n    allowDrop: (e) ->\r\n        e.preventDefault()\r\n\r\n    handleFiles: (e) ->\r\n        e.preventDefault()\r\n        files = e.target.files or e.dataTransfer.files\r\n        currentFiles = @state.files\r\n        parsed = 0\r\n\r\n        # convert file content to data url to store it later in local storage\r\n        handle = (file) =>\r\n            reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onloadend = (e) =>\r\n                txt = e.target.result\r\n                file.content = txt\r\n                currentFiles.push file\r\n                parsed++\r\n                if parsed is files.length\r\n                    @props.valueLink.requestChange currentFiles\r\n                    @setState {files: currentFiles }\r\n\r\n        handle file for file in @_convertFileList files\r\n\r\n\r\n    #\r\n    # \"private\" methods\r\n    #\r\n    _convertFileList: (files) ->\r\n        convert = (file) =>\r\n            if File.prototype.isPrototypeOf(file)\r\n                @_fromDOM file\r\n            return file\r\n\r\n        Array.prototype.map.call files, convert\r\n\r\n    _fromDOM: (file) ->\r\n        return {\r\n            name:               file.name\r\n            size:               file.size\r\n            type:               file.type\r\n            originalName:       null\r\n            contentDisposition: null\r\n            contentId:          null\r\n            transferEncoding:   null\r\n            content:            null\r\n            url:                null\r\n        }\r\n\r\n\r\nmodule.exports = FilePicker\r\n\r\n###\r\n# Display a file item\r\n#\r\n# Props:\r\n#  - file\r\n#  - editable: boolean (false) allow to delete file\r\n#  - (display): function\r\n#  - (delete): function\r\n###\r\nFileItem = React.createClass\r\n    displayName: 'FileItem'\r\n\r\n    propTypes:\r\n        file: React.PropTypes.shape({\r\n            name: React.PropTypes.string\r\n            type: React.PropTypes.string\r\n            size: React.PropTypes.number\r\n        }).isRequired\r\n        editable: React.PropTypes.bool\r\n        display:  React.PropTypes.func\r\n        delete:   React.PropTypes.func\r\n\r\n    getDefaultProps: ->\r\n        return {\r\n            editable: false\r\n        }\r\n\r\n    getInitialState: ->\r\n        return {}\r\n\r\n    render: ->\r\n        file = @props.file\r\n        type = MessageUtils.getAttachmentType file.type\r\n        icons =\r\n            'archive'      : 'fa-file-archive-o'\r\n            'audio'        : 'fa-file-audio-o'\r\n            'code'         : 'fa-file-code-o'\r\n            'image'        : 'fa-file-image-o'\r\n            'pdf'          : 'fa-file-pdf-o'\r\n            'word'         : 'fa-file-word-o'\r\n            'presentation' : 'fa-file-powerpoint-o'\r\n            'spreadsheet'  : 'fa-file-excel-o'\r\n            'text'         : 'fa-file-text-o'\r\n            'video'        : 'fa-file-video-o'\r\n            'word'         : 'fa-file-word-o'\r\n        iconClass = icons[type] or 'fa-file-o'\r\n\r\n        if @props.display?\r\n            name = a\r\n                className: 'file-name',\r\n                target: '_blank',\r\n                onClick: @doDisplay,\r\n                file.name\r\n        else\r\n            name = span className: 'file-name', file.name\r\n\r\n        li className: \"file-item\", key: file.name,\r\n            i className: \"mime fa #{iconClass}\"\r\n            if @props.editable\r\n                i className: \"fa fa-times delete\", onClick: @doDelete\r\n            name\r\n            div className: 'file-detail',\r\n                span\r\n                    'data-file-url': file.url,\r\n                    \"#{(file.size / 1000).toFixed(2)}Ko\"\r\n\r\n    doDisplay: (e) ->\r\n        e.preventDefault\r\n        @props.display()\r\n\r\n    doDelete: (e) ->\r\n        e.preventDefault\r\n        @props.delete()\r\n","{div, ul, li, span, a, button} = React.DOM\r\n\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'MailboxList'\r\n\r\n    mixins: [RouterMixin]\r\n\r\n    onChange: (boxid) ->\r\n        @props.onChange? boxid\r\n\r\n    render: ->\r\n        selectedId = @props.selectedMailbox\r\n        if selectedId?\r\n            selected = @props.mailboxes.get selectedId\r\n        if @props.mailboxes.length > 0\r\n            div className: 'dropdown pull-left',\r\n                button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown',\r\n                    selected?.get('label') or t 'mailbox pick one'\r\n                    span className: 'caret', ''\r\n                ul className: 'dropdown-menu', role: 'menu',\r\n                    if @props.allowUndefined and selected\r\n                        li role: 'presentation', key: null, onClick: @onChange.bind(this, null),\r\n                            a role: 'menuitem', t 'mailbox pick null'\r\n\r\n                    @props.mailboxes.map (mailbox, key) =>\r\n                        if mailbox.get('id') isnt selectedId\r\n                            @getMailboxRender mailbox, key\r\n                    .toJS()\r\n        else\r\n            # no account selected\r\n            div null, \"\"\r\n\r\n\r\n    getMailboxRender: (mailbox, key) ->\r\n        url = @props.getUrl?(mailbox)\r\n        onChange = @onChange.bind(this, key)\r\n\r\n        # Mark nested levels with \"--\" because plain space just doesn't work for some reason\r\n        pusher = \"\"\r\n        pusher += \"--\" for i in [1..mailbox.get('depth')] by 1\r\n\r\n        li role: 'presentation', key: key, onClick: onChange,\r\n            if url?\r\n                a href: url, role: 'menuitem', \"#{pusher}#{mailbox.get 'label'}\"\r\n            else\r\n                a role: 'menuitem', \"#{pusher}#{mailbox.get 'label'}\"\r\n\r\n","MessageUtils = require '../utils/message_utils'\r\n{div, label, input} = React.DOM\r\n\r\n# Public: input to enter multiple mails\r\n# @TODO : use something tag-it like\r\n# @TODO : autocomplete contacts\r\n\r\nmodule.exports = MailsInput = React.createClass\r\n    displayName: 'MailsInput'\r\n\r\n    mixins: [\r\n        React.addons.LinkedStateMixin # two-way data binding\r\n    ]\r\n\r\n    # convert mailslist between human-readable and [{address, name}]\r\n    proxyValueLink: ->\r\n        value: MessageUtils.displayAddresses @props.valueLink.value, true\r\n        requestChange: (newValue) =>\r\n            # reverse of MessageUtils.displayAddresses full\r\n            result = newValue.split(',').map (tupple) ->\r\n                if match = tupple.match /\"(.*)\" <(.*)>/\r\n                    name: match[1], address: match[2]\r\n                else\r\n                    address: tupple\r\n            \r\n            @props.valueLink.requestChange result\r\n\r\n    render: ->\r\n        className = (@props.className or '') + ' form-group'\r\n        classLabel = 'col-sm-2 col-sm-offset-0 control-label'\r\n        classInput = 'col-sm-8'\r\n\r\n        div className: className,\r\n            label htmlFor: @props.id, className: classLabel, \r\n                @props.label\r\n            div className: classInput,\r\n                input \r\n                    id: @props.id,\r\n                    className: 'form-control', \r\n                    ref: @props.ref, \r\n                    valueLink: @proxyValueLink(), \r\n                    type: 'text', \r\n                    placeholder: @props.placeholder","{div, ul, li, a, span, i} = React.DOM\r\n\r\nclasser = React.addons.classSet\r\n\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nAccountStore = require '../stores/account_store'\r\n\r\nmodule.exports = Menu = React.createClass\r\n    displayName: 'Menu'\r\n\r\n    mixins: [RouterMixin]\r\n\r\n    shouldComponentUpdate: (nextProps, nextState) ->\r\n        return not Immutable.is(nextProps.accounts, @props.accounts) or\r\n               not Immutable.is(nextProps.selectedAccount, @props.selectedAccount) or\r\n               not _.isEqual(nextProps.layout, @props.layout) or\r\n               nextProps.isResponsiveMenuShown isnt @props.isResponsiveMenuShown or\r\n               not Immutable.is(nextProps.favoriteMailboxes, @props.favoriteMailboxes) or\r\n               not Immutable.is(nextProps.unreadCounts, @props.unreadCounts)\r\n\r\n    render: ->\r\n\r\n\r\n        if @props.accounts.length\r\n            selectedAccountUrl = @buildUrl\r\n                direction: 'first'\r\n                action: 'account.mailbox.messages'\r\n                parameters: @props.selectedAccount?.get 'id'\r\n                fullWidth: true\r\n        else\r\n            selectedAccountUrl = @buildUrl\r\n                direction: 'first'\r\n                action: 'account.new'\r\n                fullWidth: true\r\n\r\n        # the button toggles the \"compose\" screen\r\n        if @props.layout.firstPanel.action is 'compose' or\r\n           @props.layout.secondPanel?.action is 'compose'\r\n            composeClass = 'active'\r\n            composeUrl = selectedAccountUrl\r\n        else\r\n            composeClass = ''\r\n            composeUrl = @buildUrl\r\n                direction: 'first'\r\n                action: 'compose'\r\n                parameters: null\r\n                fullWidth: true\r\n\r\n        # the button toggle the \"new account\" screen\r\n        if @props.layout.firstPanel.action is 'account.new'\r\n            newMailboxClass = 'active'\r\n            newMailboxUrl = selectedAccountUrl\r\n        else\r\n            newMailboxClass = ''\r\n            newMailboxUrl = @buildUrl\r\n                direction: 'first'\r\n                action: 'account.new'\r\n                fullWidth: true\r\n\r\n        # the button toggles the \"settings\" screen\r\n        if @props.layout.firstPanel.action is 'settings' or\r\n           @props.layout.secondPanel?.action is 'settings'\r\n            settingsClass = 'active'\r\n            settingsUrl = selectedAccountUrl\r\n        else\r\n            settingsClass = ''\r\n            settingsUrl = @buildUrl\r\n                direction: 'first'\r\n                action: 'settings'\r\n                fullWidth: true\r\n\r\n        classes = classer\r\n            'hidden-xs hidden-sm': not @props.isResponsiveMenuShown\r\n            'col-xs-4 col-md-1': true\r\n\r\n        div id: 'menu', className: classes,\r\n            unless @props.accounts.length is 0\r\n                a href: composeUrl, className: 'menu-item compose-action ' + composeClass,\r\n                    i className: 'fa fa-edit'\r\n                    span className: 'item-label', t 'menu compose'\r\n\r\n            ul id: 'account-list', className: 'list-unstyled',\r\n                @props.accounts.map (account, key) =>\r\n                    @getAccountRender account, key\r\n                .toJS()\r\n\r\n            a href: newMailboxUrl, className: 'menu-item new-account-action ' + newMailboxClass,\r\n                i className: 'fa fa-inbox'\r\n                span className: 'item-label', t 'menu account new'\r\n\r\n            a href: settingsUrl, className: 'menu-item settings-action ' + settingsClass,\r\n                i className: 'fa fa-cog'\r\n                span className: 'item-label', t 'menu settings'\r\n\r\n\r\n    # renders a single mailbox and its submenu\r\n    getAccountRender: (account, key) ->\r\n\r\n        isSelected = (not @props.selectedAccount? and key is 0) \\\r\n                     or @props.selectedAccount?.get('id') is account.get('id')\r\n\r\n        accountClasses = classer active: isSelected\r\n        accountID = account.get 'id'\r\n        defaultMailbox = AccountStore.getDefaultMailbox accountID\r\n        unread = @props.unreadCounts.get defaultMailbox?.get 'id'\r\n\r\n        url = @buildUrl\r\n            direction: 'first'\r\n            action: 'account.mailbox.messages'\r\n            parameters: [accountID, defaultMailbox?.get 'id']\r\n            fullWidth: true # /!\\ Hide second panel when switching account\r\n\r\n        li className: accountClasses, key: key,\r\n            a href: url, className: 'menu-item account ' + accountClasses,\r\n                i className: 'fa fa-inbox'\r\n                if unread > 0\r\n                    span className: 'badge', unread\r\n                span 'data-account-id': key, className: 'item-label', account.get 'label'\r\n\r\n            ul className: 'list-unstyled submenu mailbox-list',\r\n                @props.favoriteMailboxes?.map (mailbox, key) =>\r\n                    @getMailboxRender account, mailbox, key\r\n                .toJS()\r\n\r\n    getMailboxRender: (account, mailbox, key) ->\r\n        mailboxUrl = @buildUrl\r\n            direction: 'first'\r\n            action: 'account.mailbox.messages'\r\n            parameters: [account.get('id'), mailbox.get('id')]\r\n\r\n        unread = @props.unreadCounts.get mailbox.get('id')\r\n        selectedClass = if mailbox.get('id') is @props.selectedMailboxID then 'active'\r\n        else ''\r\n        specialUse = mailbox.get('attribs')?[0]\r\n        icon = switch specialUse\r\n            when '\\\\All' then 'fa-archive'\r\n            when '\\\\Drafts' then 'fa-edit'\r\n            when '\\\\Sent' then 'fa-share-square-o'\r\n            else 'fa-folder'\r\n\r\n        li className: selectedClass,\r\n            a href: mailboxUrl, className: 'menu-item', key: key,\r\n                # Something must be rethought about the icon\r\n                i className: 'fa ' + icon\r\n                if unread and unread > 0\r\n                    span className: 'badge', unread\r\n                span className: 'item-label', mailbox.get 'label'\r\n","{div, ul, li, a, span, i, p} = React.DOM\r\nclasser = React.addons.classSet\r\n\r\nRouterMixin  = require '../mixins/router_mixin'\r\nMessageUtils = require '../utils/message_utils'\r\n{MessageFlags} = require '../constants/app_constants'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'MessageList'\r\n\r\n    mixins: [RouterMixin]\r\n\r\n    shouldComponentUpdate: (nextProps, nextState) ->\r\n        return not Immutable.is(nextProps.messages, @props.messages) or\r\n               not Immutable.is(nextProps.openMessage, @props.openMessage)\r\n\r\n    render: ->\r\n        curPage = parseInt @props.pageNum, 10\r\n        nbPages = Math.ceil(@props.messagesCount / @props.messagesPerPage)\r\n        div className: 'message-list',\r\n            if @props.messages.count() is 0\r\n                p null, @props.emptyListMessage\r\n            else\r\n                div null,\r\n                    @getPagerRender curPage, nbPages\r\n                    p null, @props.counterMessage\r\n                    ul className: 'list-unstyled',\r\n                        @props.messages.map (message, key) =>\r\n                            # only displays initial email of a thread\r\n                            if true # @FIXME Mage conversation # message.get('inReplyTo').length is 0\r\n                                isActive = @props.openMessage? and\r\n                                           @props.openMessage.get('id') is message.get('id')\r\n                                @getMessageRender message, key, isActive\r\n                        .toJS()\r\n                    @getPagerRender curPage, nbPages\r\n\r\n    getMessageRender: (message, key, isActive) ->\r\n        classes = classer\r\n            read: message.get 'isRead'\r\n            active: isActive\r\n            'unseen': message.get('flags').indexOf(MessageFlags.SEEN) is -1\r\n            'has-attachments': message.get 'hasAttachments'\r\n            'is-fav': message.get('flags').indexOf(MessageFlags.FLAGGED) isnt -1\r\n\r\n        isDraft = message.get('flags').indexOf(MessageFlags.DRAFT) isnt -1\r\n\r\n        url = @buildUrl\r\n            direction: 'second'\r\n            action: if isDraft then 'compose' else 'message'\r\n            parameters: message.get 'id'\r\n\r\n        date = MessageUtils.formatDate message.get 'createdAt'\r\n\r\n        li className: 'message ' + classes, key: key,\r\n            a href: url,\r\n                i className: 'fa fa-user'\r\n                span className: 'participants', @getParticipants message\r\n                div className: 'preview',\r\n                    span className: 'title', message.get 'subject'\r\n                    p null, message.get 'text'\r\n                span className: 'hour', date\r\n                span className: \"flags\",\r\n                    i className: 'attach fa fa-paperclip'\r\n                    i className: 'fav fa fa-star'\r\n\r\n    getPagerRender: (curPage, nbPages) ->\r\n        if nbPages < 2\r\n            return\r\n        classFirst = if curPage is 1 then 'disabled' else ''\r\n        classLast  = if curPage is nbPages then 'disabled' else ''\r\n        if nbPages < 11\r\n            minPage = 1\r\n            maxPage = nbPages\r\n        else\r\n            minPage = if curPage < 5 then 1 else curPage - 2\r\n            maxPage = minPage + 4\r\n            if maxPage > nbPages\r\n                maxPage = nbPages\r\n\r\n        urlFirst = @props.buildPaginationUrl 1\r\n        urlLast = @props.buildPaginationUrl nbPages\r\n\r\n        div className: 'pagination-box',\r\n            ul className: 'pagination',\r\n                li className: classFirst,\r\n                    a href: urlFirst, '«'\r\n                if minPage > 1\r\n                    li className: 'disabled',\r\n                        a href: urlFirst, '…'\r\n                for j in [minPage..maxPage] by 1\r\n                    classCurr = if j is curPage then 'current' else ''\r\n                    urlCurr = @props.buildPaginationUrl j\r\n                    li className: classCurr, key: j,\r\n                        a href: urlCurr, j\r\n                if maxPage < nbPages\r\n                    li className: 'disabled',\r\n                        a href: urlFirst, '…'\r\n                li className: classLast,\r\n                    a href: urlLast, '»'\r\n\r\n    getParticipants: (message) -> \"#{MessageUtils.displayAddresses(message.get 'from')}, #{MessageUtils.displayAddresses(message.get('to').concat(message.get('cc')))}\"\r\n","{div, ul, li, span, i, p, h3, a, button, pre, iframe} = React.DOM\r\nCompose      = require './compose'\r\nFilePicker   = require './file_picker'\r\nMessageUtils = require '../utils/message_utils'\r\n{ComposeActions, MessageFlags} = require '../constants/app_constants'\r\nLayoutActionCreator       = require '../actions/layout_action_creator'\r\nConversationActionCreator = require '../actions/conversation_action_creator'\r\nMessageActionCreator      = require '../actions/message_action_creator'\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nFlagsConstants =\r\n    SEEN   : MessageFlags.SEEN\r\n    UNSEEN : \"Unseen\"\r\n    FLAGGED: MessageFlags.FLAGGED\r\n    NOFLAG : \"Noflag\"\r\n\r\nclasser = React.addons.classSet\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'Message'\r\n\r\n    mixins: [\r\n        RouterMixin\r\n    ]\r\n\r\n    getInitialState: ->\r\n        return {\r\n            active: false,\r\n            composing: false\r\n            composeAction: ''\r\n            messageDisplayHTML:   @props.settings.get 'messageDisplayHTML'\r\n            messageDisplayImages: @props.settings.get 'messageDisplayImages'\r\n        }\r\n\r\n    propTypes:\r\n        message           : React.PropTypes.object.isRequired\r\n        key               : React.PropTypes.number.isRequired\r\n        isLast            : React.PropTypes.bool.isRequired\r\n        selectedAccount   : React.PropTypes.object.isRequired\r\n        selectedMailboxID : React.PropTypes.string.isRequired\r\n        mailboxes         : React.PropTypes.object.isRequired\r\n        settings          : React.PropTypes.object.isRequired\r\n        accounts          : React.PropTypes.object.isRequired\r\n\r\n    shouldComponentUpdate: (nextProps, nextState) ->\r\n\r\n        shouldUpdate =\r\n            JSON.stringify(nextProps.message.toJSON()) isnt JSON.stringify(@props.message.toJSON()) or\r\n            #not Immutable.is(nextProps.message, @props.message) or\r\n            not Immutable.is(nextProps.key, @props.key) or\r\n            not Immutable.is(nextProps.isLast, @props.isLast) or\r\n            not Immutable.is(nextProps.selectedAccount, @props.selectedAccount) or\r\n            not Immutable.is(nextProps.selectedMailbox, @props.selectedMailbox) or\r\n            not Immutable.is(nextProps.mailboxes, @props.mailboxes) or\r\n            not Immutable.is(nextProps.settings, @props.settings) or\r\n            not Immutable.is(nextProps.accounts, @props.accounts)\r\n\r\n        return shouldUpdate\r\n\r\n    _prepareMessage: ->\r\n        message = @props.message\r\n\r\n        # display full headers\r\n        fullHeaders = []\r\n        for key, value of message.get 'headers'\r\n            if Array.isArray(value)\r\n                fullHeaders.push \"#{key}: #{value.join('\\n    ')}\"\r\n            else\r\n                fullHeaders.push \"#{key}: #{value}\"\r\n\r\n        text = message.get 'text'\r\n        html = message.get 'html'\r\n\r\n        # @TODO Do we want to convert text only messages to HTML ?\r\n        #if text and not html and @state.messageDisplayHTML\r\n        #    html = markdown.toHTML text\r\n\r\n        if html and not text and not @state.messageDisplayHTML\r\n            text = toMarkdown html\r\n\r\n        return {\r\n            attachments: message.get('attachments') or []\r\n            flags      : message.get('flags') or []\r\n            fullHeaders: fullHeaders\r\n            text       : text\r\n            html       : html\r\n            date       : MessageUtils.formatDate message.get 'createdAt'\r\n        }\r\n\r\n    componentWillMount: ->\r\n        @_markRead @props.message\r\n\r\n    componentWillReceiveProps: ->\r\n        @_markRead @props.message\r\n        @setState @getInitialState()\r\n\r\n    _markRead: (message) ->\r\n        # Hack to prevent infinite loop if server side mark as read fails\r\n        if @_currentMessageId is message.get 'id'\r\n            return\r\n        @_currentMessageId = message.get 'id'\r\n\r\n        # Mark message as seen if needed\r\n        flags = message.get('flags').slice()\r\n        if flags.indexOf(MessageFlags.SEEN) is -1\r\n            flags.push MessageFlags.SEEN\r\n            MessageActionCreator.updateFlag message, flags\r\n\r\n    render: ->\r\n\r\n        message  = @props.message\r\n        prepared = @_prepareMessage()\r\n        hasAttachments = prepared.attachments.length\r\n        if @state.messageDisplayHTML and prepared.html\r\n            parser = new DOMParser()\r\n            doc = parser.parseFromString prepared.html, \"text/html\"\r\n            if doc and not @state.messageDisplayImages\r\n                hideImage = (img) ->\r\n                    img.dataset.src = img.getAttribute 'src'\r\n                    img.setAttribute 'src', ''\r\n                images = doc.querySelectorAll 'IMG[src]'\r\n                hideImage img for img in images\r\n            else\r\n                images = []\r\n            if doc?\r\n                @_htmlContent = doc.body.innerHTML\r\n            else\r\n                @_htmlContent = prepared.html\r\n                #htmluri = \"data:text/html;charset=utf-8;base64,#{btoa(unescape(encodeURIComponent(doc.body.innerHTML)))}\"\r\n\r\n        clickHandler = if @props.isLast then null else @onFold\r\n\r\n        classes = classer\r\n            message: true\r\n            active: @state.active\r\n        leftClass = if hasAttachments then 'col-md-8' else 'col-md-12'\r\n\r\n        # display attachment\r\n        display = (file) ->\r\n            url = \"/message/#{message.get 'id'}/attachments/#{file.name}\"\r\n            window.open url\r\n\r\n        li className: classes, key: @props.key, onClick: clickHandler, 'data-id': @props.message.get('id'),\r\n            @getToolboxRender message.get('id'), prepared\r\n            div className: 'header row',\r\n                div className: leftClass,\r\n                    i className: 'sender-avatar fa fa-user'\r\n                    div className: 'participants',\r\n                        span  className: 'sender', MessageUtils.displayAddresses(message.get('from'), true)\r\n                        span className: 'receivers', t \"mail receivers\", {dest: MessageUtils.displayAddresses(message.get('to'), true)}\r\n                        span className: 'receivers', t \"mail receivers cc\", {dest: MessageUtils.displayAddresses(message.get('cc'), true)}\r\n                    span className: 'hour', prepared.date\r\n                if hasAttachments\r\n                    div className: 'col-md-4',\r\n                        FilePicker\r\n                            editable: false\r\n                            value: prepared.attachments.map(MessageUtils.convertAttachments)\r\n                            display: display\r\n            div className: 'full-headers',\r\n                pre null, prepared.fullHeaders.join \"\\n\"\r\n            if @state.messageDisplayHTML and prepared.html\r\n                div null,\r\n                    if images.length > 0 and not @state.messageDisplayImages\r\n                        div className: \"imagesWarning content-action\", ref: \"imagesWarning\",\r\n                            span null, t 'message images warning'\r\n                            button className: 'btn btn-default', type: \"button\", ref: 'imagesDisplay', t 'message images display'\r\n                    iframe className: 'content', ref: 'content', sandbox: 'allow-same-origin', allowTransparency: true, frameBorder: 0, ''\r\n            else\r\n                div null,\r\n                    #div className: \"content-action\",\r\n                    #    button className: 'btn btn-default', type: \"button\", onClick: @displayHTML, t 'message html display'\r\n                    div className: 'preview',\r\n                        p null, prepared.text\r\n            div className: 'clearfix'\r\n\r\n            # Display Compose block\r\n            @getComposeRender()\r\n\r\n    getComposeRender: ->\r\n        if @state.composing\r\n            Compose\r\n                inReplyTo       : @props.inReplyTo\r\n                accounts        : @props.accounts\r\n                settings        : @props.settings\r\n                selectedAccount : @props.selectedAccount\r\n                action          : @state.composeAction\r\n                layout          : 'second'\r\n                callback: (error) =>\r\n                    if not error?\r\n                        @setState composing: false\r\n\r\n    getToolboxRender: (id, prepared) ->\r\n\r\n        div className: 'messageToolbox',\r\n            div className: 'btn-toolbar', role: 'toolbar',\r\n                div className: 'btn-group btn-group-sm btn-group-justified',\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default', type: 'button', onClick: @onReply,\r\n                            span className: 'fa fa-reply'\r\n                            span className: 'tool-long', t 'mail action reply'\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default', type: 'button', onClick: @onReplyAll,\r\n                            span className: 'fa fa-reply-all'\r\n                            span className: 'tool-long', t 'mail action reply all'\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default', type: 'button', onClick: @onForward,\r\n                            span className: 'fa fa-mail-forward'\r\n                            span className: 'tool-long', t 'mail action forward'\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default', type: 'button', onClick: @onDelete,\r\n                            span className: 'fa fa-trash-o'\r\n                            span className: 'tool-long', t 'mail action delete'\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', t 'mail action mark',\r\n                            span className: 'caret'\r\n                        ul className: 'dropdown-menu', role: 'menu',\r\n                            if prepared.flags.indexOf(FlagsConstants.SEEN) is -1\r\n                                li null,\r\n                                    a role: 'menuitem', onClick: @onMark, 'data-value': FlagsConstants.SEEN, t 'mail mark read'\r\n                            else\r\n                                li null,\r\n                                    a role: 'menuitem', onClick: @onMark, 'data-value': FlagsConstants.UNSEEN, t 'mail mark unread'\r\n                            if prepared.flags.indexOf(FlagsConstants.FLAGGED) is -1\r\n                                li null,\r\n                                    a role: 'menuitem', onClick: @onMark, 'data-value': FlagsConstants.FLAGGED, t 'mail mark fav'\r\n                            else\r\n                                li null,\r\n                                    a role: 'menuitem', onClick: @onMark, 'data-value': FlagsConstants.NOFLAG, t 'mail mark nofav'\r\n                            #li null,\r\n                            #    a role: 'menuitem', onClick: @onMark, 'data-value': '', t 'mail mark spam'\r\n                            #li null,\r\n                            #    a role: 'menuitem', onClick: @onMark, 'data-value': '', t 'mail mark nospam'\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', t 'mail action move',\r\n                            span className: 'caret'\r\n                        ul className: 'dropdown-menu', role: 'menu',\r\n                            @props.mailboxes.map (mailbox, key) =>\r\n                                @getMailboxRender mailbox, key\r\n                            .toJS()\r\n                    div className: 'btn-group btn-group-sm',\r\n                        button className: 'btn btn-default dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', t 'mail action more',\r\n                            span className: 'caret'\r\n                        ul className: 'dropdown-menu', role: 'menu',\r\n                            li role: 'presentation',\r\n                                a onClick: @onHeaders, 'data-message-id': id, t 'mail action headers'\r\n                            li role: 'presentation',\r\n                                a onClick: @onConversation, 'data-action' : 'delete', t 'mail action conversation delete'\r\n                            li role: 'presentation',\r\n                                a onClick: @onConversation, 'data-action' : 'seen',   t 'mail action conversation seen'\r\n                            li role: 'presentation',\r\n                                a onClick: @onConversation, 'data-action' : 'unseen', t 'mail action conversation unseen'\r\n                            li role: 'presentation', className: 'divider'\r\n                            li role: 'presentation', t 'mail action conversation move'\r\n                            @props.mailboxes.map (mailbox, key) =>\r\n                                @getMailboxRender mailbox, key, true\r\n                            .toJS()\r\n                            li role: 'presentation', className: 'divider'\r\n\r\n\r\n    getMailboxRender: (mailbox, key, conversation) ->\r\n        # Don't display current mailbox\r\n        if mailbox.get('id') is @props.selectedMailboxID\r\n            return\r\n        pusher = \"\"\r\n        pusher += \"--\" for j in [1..mailbox.get('depth')] by 1\r\n        li role: 'presentation', key: key,\r\n            a role: 'menuitem', onClick: @onMove, 'data-value': key, 'data-conversation': conversation, \"#{pusher}#{mailbox.get 'label'}\"\r\n\r\n    _initFrame: ->\r\n        # - resize the frame to the height of its content\r\n        # - if images are not displayed, create the function to display them and resize the frame\r\n        if @refs.content\r\n            frame = @refs.content.getDOMNode()\r\n            doc = frame.contentDocument or frame.contentWindow.document\r\n            if doc?\r\n                s = document.createElement 'style'\r\n                doc.head.appendChild(s)\r\n                font = \"\"\"\r\n@font-face{\r\n  font-family: 'Source Sans Pro';\r\n  font-weight: 400;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  src: url('../fonts/sourcesanspro/SourceSansPro-Regular.eot') format('embedded-opentype'),\r\n       url('../fonts/sourcesanspro/SourceSansPro-Regular.otf.woff') format('woff'),\r\n       url('../fonts/sourcesanspro/SourceSansPro-Regular.otf') format('opentype'),\r\n       url('../fonts/sourcesanspro/SourceSansPro-Regular.ttf') format('truetype');\r\n}\r\n                \"\"\"\r\n                s.sheet.insertRule font, 0\r\n                s.sheet.insertRule \"body { font-family: 'Source Sans Pro'; }\", 1\r\n                s.sheet.insertRule \"blockquote { margin-left: .5em; padding-left: .5em; border-left: 2px solid blue;}\", 2\r\n                doc.body.innerHTML = @_htmlContent\r\n                rect = doc.body.getBoundingClientRect()\r\n                frame.style.height = \"#{rect.height + 40}px\"\r\n                if not @state.messageDisplayImages and @refs.imagesDisplay?\r\n                    @refs.imagesDisplay.getDOMNode().addEventListener 'click', =>\r\n                        @setState messageDisplayImages: true\r\n            else\r\n                # try to display text only\r\n                @setState messageDisplayHTML: false\r\n\r\n    componentDidMount: ->\r\n        @_initFrame()\r\n\r\n    componentDidUpdate: ->\r\n        @_initFrame()\r\n\r\n    onFold: (args) ->\r\n        @setState active: not @state.active\r\n\r\n    onReply: (args) ->\r\n        @setState composing: true\r\n        @setState composeAction: ComposeActions.REPLY\r\n\r\n    onReplyAll: (args) ->\r\n        @setState composing: true\r\n        @setState composeAction: ComposeActions.REPLY_ALL\r\n\r\n    onForward: (args) ->\r\n        @setState composing: true\r\n        @setState composeAction: ComposeActions.FORWARD\r\n\r\n    onDelete: (args) ->\r\n        if window.confirm(t 'mail confirm delete')\r\n            MessageActionCreator.delete @props.message, @props.selectedAccount, (error) =>\r\n                if error?\r\n                    LayoutActionCreator.alertError \"#{t(\"message action delete ko\")} #{error}\"\r\n                else\r\n                    LayoutActionCreator.alertSuccess t \"message action delete ok\"\r\n                    @redirect\r\n                        direction: 'first'\r\n                        action: 'account.mailbox.messages'\r\n                        parameters: [@props.selectedAccount.get('id'), @props.selectedMailboxID, 1]\r\n                        fullWidth: true\r\n\r\n    onCopy: (args) ->\r\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\r\n\r\n    onMove: (args) ->\r\n        newbox = args.target.dataset.value\r\n        if args.target.dataset.conversation?\r\n            ConversationActionCreator.move @props.message.get('conversationID'), newbox, (error) =>\r\n                if error?\r\n                    LayoutActionCreator.alertError \"#{t(\"conversation move ko\")} #{error}\"\r\n                else\r\n                    LayoutActionCreator.alertSuccess t \"conversation move ok\"\r\n                    @redirect\r\n                        direction: 'first'\r\n                        action: 'account.mailbox.messages'\r\n                        parameters: [@props.selectedAccount.get('id'), @props.selectedMailboxID, 1]\r\n                        fullWidth: true\r\n        else\r\n            oldbox = @props.selectedMailboxID\r\n            MessageActionCreator.move @props.message, oldbox, newbox, (error) =>\r\n                if error?\r\n                    LayoutActionCreator.alertError \"#{t(\"message action move ko\")} #{error}\"\r\n                else\r\n                    LayoutActionCreator.alertSuccess t \"message action move ok\"\r\n                    @redirect\r\n                        direction: 'first'\r\n                        action: 'account.mailbox.messages'\r\n                        parameters: [@props.selectedAccount.get('id'), @props.selectedMailboxID, 1]\r\n                        fullWidth: true\r\n\r\n    onMark: (args) ->\r\n        flags = @props.message.get('flags').slice()\r\n        flag = args.target.dataset.value\r\n        switch flag\r\n            when FlagsConstants.SEEN\r\n                flags.push MessageFlags.SEEN\r\n            when FlagsConstants.UNSEEN\r\n                flags = flags.filter (e) -> return e isnt FlagsConstants.SEEN\r\n            when FlagsConstants.FLAGGED\r\n                flags.push MessageFlags.FLAGGED\r\n            when FlagsConstants.NOFLAG\r\n                flags = flags.filter (e) -> return e isnt FlagsConstants.FLAGGED\r\n        MessageActionCreator.updateFlag @props.message, flags, (error) ->\r\n            if error?\r\n                LayoutActionCreator.alertError \"#{t(\"message action mark ko\")} #{error}\"\r\n            else\r\n                LayoutActionCreator.alertSuccess t \"message action mark ok\"\r\n\r\n    onConversation: (args) ->\r\n        id     = @props.message.get 'conversationID'\r\n        action = args.target.dataset.action\r\n        switch action\r\n            when 'delete'\r\n                ConversationActionCreator.delete id, (error) ->\r\n                    if error?\r\n                        LayoutActionCreator.alertError \"#{t(\"conversation delete ko\")} #{error}\"\r\n                    else\r\n                        LayoutActionCreator.alertSuccess t \"conversation delete ok\"\r\n            when 'seen'\r\n                ConversationActionCreator.seen id, (error) ->\r\n                    if error?\r\n                        LayoutActionCreator.alertError \"#{t(\"conversation seen ok \")} #{error}\"\r\n                    else\r\n                        LayoutActionCreator.alertSuccess t \"conversation seen ko \"\r\n            when 'unseen'\r\n                ConversationActionCreator.unseen id, (error) ->\r\n                    if error?\r\n                        LayoutActionCreator.alertError \"#{t(\"conversation unseen ok\")} #{error}\"\r\n                    else\r\n                        LayoutActionCreator.alertSuccess t \"conversation unseen ko\"\r\n\r\n    onHeaders: (event) ->\r\n        event.preventDefault()\r\n        messageId = event.target.dataset.messageId\r\n        document.querySelector(\".conversation [data-id='#{messageId}']\").classList.toggle('with-headers')\r\n\r\n    displayHTML: (event) ->\r\n        event.preventDefault()\r\n        @setState messageDisplayHTML: true\r\n\r\n","{div, input, span} = React.DOM\r\nclasser = React.addons.classSet\r\n\r\nSearchActionCreator = require '../actions/search_action_creator'\r\n\r\nENTER_KEY = 13\r\n\r\nRouterMixin = require '../mixins/router_mixin'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'SearchForm'\r\n\r\n    mixins: [RouterMixin]\r\n\r\n    render: ->\r\n        div className: 'form-group pull-left',\r\n            div className: 'input-group',\r\n                input className: 'form-control', type: 'text', placeholder: t('app search'), onKeyPress: @onKeyPress, ref: 'searchInput', defaultValue: @props.query\r\n                div className: 'input-group-addon btn btn-cozy', onClick: @onSubmit,\r\n                    span className: 'fa fa-search'\r\n\r\n    onSubmit: ->\r\n        query = encodeURIComponent @refs.searchInput.getDOMNode().value.trim()\r\n\r\n        # only submit query if it's longer than 3 characters\r\n        # @TODO: validate and give feedback to the user\r\n        if query.length > 3\r\n            @redirect\r\n                direction: 'first'\r\n                action: 'search'\r\n                parameters: [query]\r\n\r\n    onKeyPress: (evt) ->\r\n        if evt.charCode is ENTER_KEY\r\n            @onSubmit()\r\n            evt.preventDefault()\r\n            return false\r\n        else\r\n            query = @refs.searchInput.getDOMNode().value\r\n            SearchActionCreator.setQuery query\r\n","{div, h3, form, label, input, button, fieldset, legend, ul, li, a} = React.DOM\r\nclasser = React.addons.classSet\r\n\r\nSettingsActionCreator = require '../actions/settings_action_creator'\r\nPluginUtils   = require '../utils/plugin_utils'\r\n\r\nmodule.exports = React.createClass\r\n    displayName: 'Settings'\r\n\r\n    mixins: [\r\n        React.addons.LinkedStateMixin # two-way data binding\r\n    ]\r\n\r\n    render: ->\r\n\r\n        classLabel = 'col-sm-2 col-sm-offset-2 control-label'\r\n\r\n        div id: 'mailbox-config',\r\n            h3 className: null, t \"settings title\"\r\n\r\n            if @props.error\r\n                div className: 'error', @props.error\r\n\r\n            form className: 'form-horizontal',\r\n                div className: 'form-group',\r\n                    label htmlFor: 'settings-mpp', className: classLabel,\r\n                        t \"settings label mpp\"\r\n                    div className: 'col-sm-3',\r\n                        input\r\n                            id: 'settings-mpp',\r\n                            value: @state.settings.messagesPerPage,\r\n                            onChange: @handleChange,\r\n                            'data-target': 'messagesPerPage',\r\n                            type: 'number',\r\n                            min: 5,\r\n                            max: 100,\r\n                            step: 5,\r\n                            className: 'form-control'\r\n\r\n                # Lang\r\n                div className: 'form-group',\r\n                    label htmlFor: 'settings-mpp', className: classLabel,\r\n                        t \"settings lang\"\r\n                    div className: 'col-sm-3',\r\n                        div className: \"dropdown\",\r\n                            button\r\n                                className: \"btn btn-default dropdown-toggle\"\r\n                                type: \"button\"\r\n                                \"data-toggle\": \"dropdown\",\r\n                                t \"settings lang #{@state.settings.lang}\"\r\n                            ul className: \"dropdown-menu\", role: \"menu\",\r\n                                li\r\n                                    role: \"presentation\",\r\n                                    'data-target': 'lang',\r\n                                    'data-lang': 'en',\r\n                                    onClick: @handleChange,\r\n                                        a role: \"menuitem\", t \"settings lang en\"\r\n                                li\r\n                                    role: \"presentation\",\r\n                                    'data-target': 'lang',\r\n                                    'data-lang': 'fr',\r\n                                    onClick: @handleChange,\r\n                                        a role: \"menuitem\", t \"settings lang fr\"\r\n\r\n            @_renderOption 'composeInHTML'\r\n            @_renderOption 'messageDisplayHTML'\r\n            @_renderOption 'messageDisplayImages'\r\n\r\n            fieldset null,\r\n                legend null, t 'settings plugins'\r\n                for own pluginName, pluginConf of @state.settings.plugins\r\n                    form className: 'form-horizontal', key: pluginName,\r\n                        div className: 'form-group',\r\n                            label className: classLabel, pluginConf.name\r\n                            div className: 'col-sm-3',\r\n                                input\r\n                                    checked: pluginConf.active,\r\n                                    onChange: @handleChange,\r\n                                    'data-target': 'plugin',\r\n                                    'data-plugin': pluginName,\r\n                                    type: 'checkbox',\r\n                                    className: 'form-control'\r\n\r\n    _renderOption: (option) ->\r\n        classLabel = 'col-sm-2 col-sm-offset-2 control-label'\r\n        form className: 'form-horizontal',\r\n            div className: 'form-group',\r\n                label\r\n                    htmlFor: 'settings-' + option,\r\n                    className: classLabel,\r\n                    t \"settings label \" + option\r\n                div className: 'col-sm-3',\r\n                    input\r\n                        id: 'settings-' + option,\r\n                        checked: @state.settings[option],\r\n                        onChange: @handleChange,\r\n                        'data-target': option,\r\n                        type: 'checkbox',\r\n                        className: 'form-control'\r\n\r\n    handleChange: (event) ->\r\n        target = event.currentTarget\r\n        switch target.dataset.target\r\n            when 'messagesPerPage'\r\n                settings = @state.settings\r\n                settings.messagesPerPage = target.value\r\n                @setState({settings: settings})\r\n                SettingsActionCreator.edit settings\r\n            when 'composeInHTML', 'messageDisplayHTML', 'messageDisplayImages'\r\n                settings = @state.settings\r\n                settings[target.dataset.target] = target.checked\r\n                @setState({settings: settings})\r\n                SettingsActionCreator.edit settings\r\n            when 'lang'\r\n                lang = target.dataset.lang\r\n                settings = @state.settings\r\n                settings.lang = lang\r\n                @setState({settings: settings})\r\n                moment.locale lang\r\n                try\r\n                    locales = require \"../locales/#{lang}\"\r\n                catch err\r\n                    console.log err\r\n                    locales = require \"../locales/en\"\r\n                polyglot = new Polyglot()\r\n                polyglot.extend locales\r\n                window.t = polyglot.t.bind polyglot\r\n                SettingsActionCreator.edit settings\r\n            when 'plugin'\r\n                name = target.dataset.plugin\r\n                settings = @state.settings\r\n                if target.checked\r\n                    PluginUtils.activate name\r\n                else\r\n                    PluginUtils.deactivate name\r\n                for own pluginName, pluginConf of settings.plugins\r\n                    pluginConf.active = window.plugins[pluginName].active\r\n                @setState({settings: settings})\r\n                SettingsActionCreator.edit settings\r\n\r\n    getInitialState: (forceDefault) ->\r\n        settings = @props.settings.toObject()\r\n        return {\r\n            settings: @props.settings.toObject()\r\n        }\r\n","{a, h4,  pre, div, button, span, strong, i} = React.DOM\r\nSocketUtils = require '../utils/socketio_utils'\r\n\r\nclasser = React.addons.classSet\r\n\r\nmodule.exports = Toast = React.createClass\r\n    displayName: 'Toast'\r\n\r\n    getInitialState: ->\r\n        return modalErrors: false\r\n\r\n    closeModal: ->\r\n        @setState modalErrors: false\r\n\r\n    showModal: (errors) ->\r\n        @setState modalErrors: errors\r\n\r\n    acknowledge: ->\r\n        SocketUtils.acknowledgeTask @props.toast.id\r\n\r\n    renderErrorModal: ->\r\n        div className: \"modal fade in\", role: \"dialog\", style: display: 'block',\r\n            div className: \"modal-dialog\",\r\n                div className: \"modal-content\",\r\n                    div className: \"modal-header\",\r\n                        h4 className: \"modal-title\", t 'modal please contribute'\r\n                    div className: \"modal-body\",\r\n                        span null, t 'modal please report'\r\n                        pre style: \"max-height\": \"300px\", \"word-wrap\": \"normal\",\r\n                            @state.modalErrors.join \"\\n\\n\"\r\n                    div className: \"modal-footer\",\r\n                        button type: 'button', className: 'btn', onClick: @closeModal,\r\n                            t 'app alert close'\r\n\r\n    render: ->\r\n        toast = @props.toast\r\n        classes = classer\r\n            alert: true\r\n            toast: true\r\n            'alert-dismissible': toast.finished\r\n            'alert-info': not toast.errors.length\r\n            'alert-warning': toast.errors.length\r\n        percent = parseInt(100 * toast.done / toast.total) + '%'\r\n        showModal = @showModal.bind(this, toast.errors)\r\n\r\n        div className: classes, role: \"alert\",\r\n            if @state.modalErrors\r\n                @renderErrorModal()\r\n\r\n            div className:\"progress\",\r\n                div className: 'progress-bar', style: width: percent\r\n                div className: 'progress-bar-label start', style: width: percent,\r\n                    \"#{t \"task \" + toast.code, toast} : #{percent}\"\r\n                div className: 'progress-bar-label end',\r\n                    \"#{t \"task \" + toast.code, toast} : #{percent}\"\r\n\r\n            if toast.finished\r\n                button type: \"button\", className: \"close\", onClick: @acknowledge,\r\n                    span 'aria-hidden': \"true\", \"×\"\r\n                    span className: \"sr-only\", t \"app alert close\"\r\n\r\n            if len = toast.errors.length\r\n                a onClick: showModal,\r\n                    t 'there were errors', smart_count: len\r\n\r\nmodule.exports.Container = ToastContainer =  React.createClass\r\n    displayName: 'ToastContainer'\r\n\r\n    getInitialState: ->\r\n        return hidden: false\r\n\r\n    render: ->\r\n        toasts = @props.toasts.toJS?() or @props.toasts\r\n\r\n        classes = classer\r\n            'toasts-container': true\r\n            'action-hidden': @state.hidden\r\n            'has-toasts': Object.keys(toasts).length isnt 0\r\n\r\n        div className: classes,\r\n            Toast {toast} for id, toast of toasts\r\n            div className: 'alert alert-success toast toast-actions',\r\n                span\r\n                    className: \"toast-action hide-action\",\r\n                    title: t 'toast hide'\r\n                    onClick: @toggleHidden,\r\n                        i className: 'fa fa-eye-slash'\r\n                span\r\n                    className: \"toast-action show-action\",\r\n                    title: t 'toast show'\r\n                    onClick: @toggleHidden,\r\n                        i className: 'fa fa-eye'\r\n                span\r\n                    className: \"toast-action close-action\",\r\n                    title: t 'toast close all'\r\n                    onClick: @closeAll,\r\n                        i className: 'fa fa-times'\r\n\r\n    toggleHidden: ->\r\n        @setState hidden: not @state.hidden\r\n\r\n    closeAll: ->\r\n        toasts = @props.toasts.toJS?() or @props.toasts\r\n        close = (toast) ->\r\n            SocketUtils.acknowledgeTask toast.id\r\n        close toast for id, toast of toasts\r\n        @props.toasts.clear()\r\n","# React components\r\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\r\nMailboxList   = require './mailbox-list'\r\nSearchForm = require './search-form'\r\n\r\n# mixins & action creator\r\nRouterMixin = require '../mixins/router_mixin'\r\nLayoutActionCreator = require '../actions/layout_action_creator'\r\n\r\n# React addons\r\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\r\n\r\nmodule.exports = Topbar = React.createClass\r\n    displayName: 'Topbar'\r\n\r\n    mixins: [RouterMixin]\r\n\r\n    # Toggle the menu in responsive mode\r\n    onResponsiveMenuClick: (event) ->\r\n        event.preventDefault()\r\n        if @state.isResponsiveMenuShown\r\n            LayoutActionCreator.hideReponsiveMenu()\r\n        else\r\n            LayoutActionCreator.showReponsiveMenu()\r\n\r\n    render: ->\r\n\r\n        {layout, selectedAccount, selectedMailboxID, mailboxes, searchQuery} = @props\r\n        \r\n        responsiveBackUrl = @buildUrl\r\n            firstPanel: layout.firstPanel\r\n            fullWidth: true\r\n\r\n        getUrl = (mailbox) => \r\n            @buildUrl\r\n                direction: 'first'\r\n                action: 'account.mailbox.messages'\r\n                parameters: [selectedAccount?.get('id'), mailbox.get('id')]\r\n\r\n        if selectedAccount and layout.firstPanel.action isnt 'account.new'\r\n            # the button toggles the mailbox config\r\n            if layout.firstPanel.action is 'account.config'\r\n                configMailboxUrl = @buildUrl\r\n                    direction: 'first'\r\n                    action: 'account.mailbox.messages'\r\n                    parameters: selectedAccount.get 'id'\r\n                    fullWidth: true\r\n            else\r\n                configMailboxUrl = @buildUrl\r\n                    direction: 'first'\r\n                    action: 'account.config'\r\n                    parameters: selectedAccount.get 'id'\r\n                    fullWidth: true\r\n        \r\n\r\n        div id: 'quick-actions', className: 'row',\r\n            # responsive menu icon\r\n            if layout.secondPanel\r\n                a href: responsiveBackUrl, className: 'responsive-handler hidden-md hidden-lg',\r\n                    i className: 'fa fa-chevron-left hidden-md hidden-lg pull-left'\r\n                    t \"app back\"\r\n            else\r\n                a onClick: @onResponsiveMenuClick, className: 'responsive-handler hidden-md hidden-lg',\r\n                    i className: 'fa fa-bars pull-left'\r\n                    t \"app menu\"\r\n\r\n            if layout.firstPanel.action is 'account.mailbox.messages'\r\n                div className: 'col-md-6 hidden-xs hidden-sm pull-left',\r\n                    form className: 'form-inline col-md-12',\r\n                        MailboxList\r\n                            getUrl: getUrl\r\n                            mailboxes: mailboxes\r\n                            selectedMailbox: selectedMailboxID\r\n                        SearchForm query: searchQuery\r\n\r\n            if layout.firstPanel.action is 'account.mailbox.messages'\r\n                div id: 'contextual-actions', className: 'col-md-6 hidden-xs hidden-sm pull-left text-right',\r\n                    ReactCSSTransitionGroup transitionName: 'fade',\r\n                        if configMailboxUrl\r\n                            a href: configMailboxUrl, className: 'btn btn-cozy mailbox-config',\r\n                                i className: 'fa fa-cog'","module.exports =\r\n\r\n    ActionTypes:\r\n        # Account\r\n        'ADD_ACCOUNT'               : 'ADD_ACCOUNT'\r\n        'REMOVE_ACCOUNT'            : 'REMOVE_ACCOUNT'\r\n        'EDIT_ACCOUNT'              : 'EDIT_ACCOUNT'\r\n        'SELECT_ACCOUNT'            : 'SELECT_ACCOUNT'\r\n        'NEW_ACCOUNT_WAITING'       : 'NEW_ACCOUNT_WAITING'\r\n        'NEW_ACCOUNT_ERROR'         : 'NEW_ACCOUNT_ERROR'\r\n\r\n        # Mailbox\r\n        'MAILBOX_ADD'               : 'MAILBOX_ADD'\r\n        'MAILBOX_UPDATE'            : 'MAILBOX_UPDATE'\r\n        'MAILBOX_DELETE'            : 'MAILBOX_DELETE'\r\n\r\n        # Message\r\n        'RECEIVE_RAW_MESSAGE'       : 'RECEIVE_RAW_MESSAGE'\r\n        'RECEIVE_RAW_MESSAGES'      : 'RECEIVE_RAW_MESSAGES'\r\n        'MESSAGE_SEND'              : 'MESSAGE_SEND'\r\n        'MESSAGE_DELETE'            : 'MESSAGE_DELETE'\r\n        'MESSAGE_BOXES'             : 'MESSAGE_BOXES'\r\n        'MESSAGE_FLAG'              : 'MESSAGE_FLAG'\r\n\r\n        # Search\r\n        'SET_SEARCH_QUERY'          : 'SET_SEARCH_QUERY'\r\n        'RECEIVE_RAW_SEARCH_RESULTS': 'RECEIVE_RAW_SEARCH_RESULTS'\r\n        'CLEAR_SEARCH_RESULTS'      : 'CLEAR_SEARCH_RESULTS'\r\n\r\n        # Layout\r\n        'SHOW_MENU_RESPONSIVE'      : 'SHOW_MENU_RESPONSIVE'\r\n        'HIDE_MENU_RESPONSIVE'      : 'HIDE_MENU_RESPONSIVE'\r\n        'DISPLAY_ALERT'             : 'DISPLAY_ALERT'\r\n\r\n        # Mailbox\r\n        'RECEIVE_RAW_MAILBOXES'     : 'RECEIVE_RAW_MAILBOXES'\r\n\r\n        # Settings\r\n        'SETTINGS_UPDATED'          : 'SETTINGS_UPDATED'\r\n\r\n        # Tasks\r\n        'RECEIVE_TASK_UPDATE'       : 'RECEIVE_TASK_UPDATE'\r\n        'RECEIVE_TASK_DELETE'       : 'RECEIVE_TASK_DELETE'\r\n\r\n    PayloadSources:\r\n        'VIEW_ACTION'   : 'VIEW_ACTION'\r\n        'SERVER_ACTION' : 'SERVER_ACTION'\r\n\r\n    ComposeActions:\r\n        'REPLY'         : 'REPLY'\r\n        'REPLY_ALL'     : 'REPLY_ALL'\r\n        'FORWARD'       : 'FORWARD'\r\n\r\n    AlertLevel:\r\n        'SUCCESS'      : 'SUCCESS'\r\n        'INFO'         : 'INFO'\r\n        'WARNING'      : 'WARNING'\r\n        'ERROR'        : 'ERROR'\r\n\r\n    MessageFlags:\r\n        'FLAGGED'      : '\\\\Flagged'\r\n        'SEEN'         : '\\\\Seen'\r\n        'DRAFT'        : '\\\\Draft'\r\n\r\n    MailboxFlags:\r\n        'DRAFT'   :  '\\\\Drafts'\r\n        'SENT'    :  '\\\\Sent'\r\n        'TRASH'   :  '\\\\Trash'\r\n        'ALL'     :  '\\\\All'\r\n        'SPAM'    :  '\\\\Junk'\r\n        'FLAGGED' :  '\\\\Flagged'\r\n","# Waits for the DOM to be ready\r\nwindow.onload = ->\r\n\r\n    window.__DEV__ = window.location.hostname is 'localhost'\r\n    # use Cozy instance locale or navigator language or \"en\" by default\r\n    if not window.settings?\r\n        window.settings = {}\r\n    locale =\r\n        window.settings.lang or\r\n        window.locale or\r\n        window.navigator.language or\r\n        \"en\"\r\n    moment.locale locale\r\n    locales = {}\r\n    try\r\n        locales = require \"./locales/#{locale}\"\r\n    catch err\r\n        console.log err\r\n        locales = require \"./locales/en\"\r\n    polyglot = new Polyglot()\r\n    # we give polyglot the data\r\n    polyglot.extend locales\r\n    # handy shortcut\r\n    window.t = polyglot.t.bind polyglot\r\n\r\n    # init plugins\r\n    PluginUtils = require(\"./utils/plugin_utils\")\r\n    if not window.settings.plugins?\r\n        window.settings.plugins = {}\r\n    PluginUtils.merge window.settings.plugins\r\n    PluginUtils.init()\r\n\r\n    # Flux initialization (must be called at the begining)\r\n    AccountStore  = require './stores/account_store'\r\n    LayoutStore   = require './stores/layout_store'\r\n    MessageStore  = require './stores/message_store'\r\n    SettingsStore = require './stores/settings_store'\r\n    SearchStore   = require './stores/search_store'\r\n\r\n    # Routing management\r\n    Router = require './router'\r\n    @router = new Router()\r\n    window.router = @router\r\n\r\n    # Binds the router and flux to the React application\r\n    Application = require './components/application'\r\n    application = Application router: @router\r\n    React.renderComponent application, document.body\r\n\r\n    # Starts the application by initializing the router\r\n    Backbone.history.start()\r\n\r\n    # begin realtime\r\n    require './utils/socketio_utils'\r\n","###\r\n\r\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't\r\n    been successful in adding a transpiler. --\r\n\r\n    Copyright (c) 2014, Facebook, Inc.\r\n    All rights reserved.\r\n\r\n    This source code is licensed under the BSD-style license found in the\r\n    LICENSE file in the root directory of this source tree. An additional grant\r\n    of patent rights can be found in the PATENTS file in the same directory.\r\n ###\r\n\r\ninvariant = require '../invariant'\r\n\r\n_lastID = 1\r\n_prefix = 'ID_'\r\n\r\nmodule.exports = Dispatcher = class Dispatcher\r\n    constructor: ->\r\n        this._callbacks = {}\r\n        this._isPending = {}\r\n        this._isHandled = {}\r\n        this._isDispatching = false\r\n        this._pendingPayload = null\r\n\r\n    ###\r\n        Registers a callback to be invoked with every dispatched payload.\r\n        Returns a token that can be used with `waitFor()`.\r\n\r\n        @param {function} callback\r\n        @return {string}\r\n    ###\r\n    register: (callback) ->\r\n        id = _prefix + _lastID++\r\n        this._callbacks[id] = callback\r\n        return id\r\n\r\n    ###\r\n        Removes a callback based on its token.\r\n\r\n        @param {string} id\r\n    ###\r\n    unregister: (id) ->\r\n        message = 'Dispatcher.unregister(...): `%s` does not map to a ' + \\\r\n                  'registered callback.'\r\n        invariant(\r\n            this._callbacks[id],\r\n            message,\r\n            id\r\n        )\r\n        delete this._callbacks[id]\r\n\r\n    ###\r\n        Waits for the callbacks specified to be invoked before continuing\r\n        execution of the current callback. This method should only be used by a\r\n        callback in response to a dispatched payload.\r\n\r\n        @param {array<string>} ids\r\n    ###\r\n    waitFor: (ids) ->\r\n        invariant(\r\n            this._isDispatching,\r\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\r\n        )\r\n        message = 'Dispatcher.waitFor(...): Circular dependency detected ' + \\\r\n                  'while waiting for `%s`.'\r\n        message2 = 'Dispatcher.waitFor(...): `%s` does not map to a ' + \\\r\n                   'registered callback.'\r\n        for ii in [0..ids.length - 1] by 1\r\n            id = ids[ii]\r\n            if this._isPending[id]\r\n                invariant(\r\n                    this._isHandled[id],\r\n                    message,\r\n                    id\r\n                )\r\n                continue\r\n\r\n            invariant(\r\n                this._callbacks[id],\r\n                message2,\r\n                id\r\n            )\r\n            this._invokeCallback id\r\n\r\n    ###\r\n        Dispatches a payload to all registered callbacks.\r\n\r\n        @param {object} payload\r\n    ###\r\n    dispatch: (payload) ->\r\n        message = 'Dispatch.dispatch(...): Cannot dispatch in the middle ' + \\\r\n                  'of a dispatch.'\r\n        invariant(\r\n            not this._isDispatching,\r\n            message\r\n        )\r\n        this._startDispatching(payload)\r\n        try\r\n            for id of this._callbacks\r\n                if this._isPending[id]\r\n                    continue\r\n                this._invokeCallback id\r\n        finally\r\n            this._stopDispatching()\r\n\r\n    ###\r\n        Is this Dispatcher currently dispatching.\r\n\r\n        @return {boolean}\r\n    ###\r\n    isDispatching: -> return this._isDispatching\r\n\r\n    ###\r\n        Call the callback stored with the given id. Also do some internal\r\n        bookkeeping.\r\n\r\n        @param {string} id\r\n        @internal\r\n    ###\r\n    _invokeCallback: (id) ->\r\n        this._isPending[id] = true\r\n        this._callbacks[id](this._pendingPayload)\r\n        this._isHandled[id] = true\r\n\r\n    ###\r\n        Set up bookkeeping needed when dispatching.\r\n\r\n        @param {object} payload\r\n        @internal\r\n    ###\r\n    _startDispatching: (payload) ->\r\n        for id of this._callbacks\r\n            this._isPending[id] = false\r\n            this._isHandled[id] = false\r\n\r\n        this._pendingPayload = payload\r\n        this._isDispatching = true\r\n\r\n    ###\r\n        Clear bookkeeping used for dispatching.\r\n\r\n        @internal\r\n    ###\r\n    _stopDispatching: ->\r\n        this._pendingPayload = null\r\n        this._isDispatching = false\r\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (__DEV__) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","AppDispatcher = require '../../../app_dispatcher'\r\n\r\n\r\nmodule.exports = class Store extends EventEmitter\r\n\r\n    uniqID: null\r\n\r\n    # this variable will be shared with all subclasses so we store the items\r\n    # by subclass we don't use `@constructor.name` because it breaks when\r\n    # mangled\r\n    _nextUniqID = 0\r\n    _handlers = {}\r\n    _addHandlers = (type, callback) ->\r\n\r\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\r\n        _handlers[@uniqID][type] = callback\r\n\r\n    # Registers the store's callbacks to the dispatcher\r\n    _processBinding = ->\r\n        @dispatchToken = AppDispatcher.register (payload) =>\r\n            {type, value} = payload.action\r\n            if (callback = _handlers[@uniqID][type])?\r\n                callback.call @, value\r\n\r\n\r\n    constructor: ->\r\n        super()\r\n        # set a uniq ID\r\n        @uniqID = _nextUniqID++\r\n        @__bindHandlers _addHandlers.bind @\r\n        _processBinding.call @\r\n\r\n    # Must be overriden by each store\r\n    __bindHandlers: (handle) ->\r\n        if __DEV__\r\n            message = \"The store #{@constructor.name} must define a \" + \\\r\n                      \"`__bindHandlers` method\"\r\n            throw new Error message\r\n\r\n","###\r\n    Routing component. We let Backbone handling browser stuff\r\n    and we format the varying parts of the layout.\r\n\r\n    URLs are built in the following way:\r\n        - a first part that represents the first panel\r\n        - a second part that represents the second panel\r\n        - if there is just one part, it represents a full width panel\r\n\r\n    Since Backbone.Router only handles one part, routes initialization mechanism\r\n    is overriden so we can post-process the second part of the URL.\r\n\r\n    Example: a defined pattern will generates two routes.\r\n        - `mailbox/a/path/:id`\r\n        - `mailbox/a/path/:id/*secondPanel`\r\n\r\n        Each pattern is actually the pattern itself plus the pattern itself and\r\n        another pattern.\r\n###\r\n\r\nLayoutActionCreator = require '../actions/layout_action_creator'\r\n\r\nmodule.exports = class Router extends Backbone.Router\r\n\r\n    patterns: {}\r\n\r\n    # default route\r\n    routes: {}\r\n\r\n    previous: null\r\n    current: null\r\n\r\n    # we store a regexified version of each patterns\r\n    cachedPatterns: []\r\n\r\n    initialize: (options) ->\r\n\r\n        # defines the routes from the patterns\r\n        for key, route of @patterns\r\n\r\n            # caches each regex' pattern to avoid to recalculate them each time\r\n            @cachedPatterns.push\r\n                key: key\r\n                pattern: @_routeToRegExp route.pattern\r\n\r\n            # each pattern has two routes: full-width or with a second panel\r\n            @routes[route.pattern] = key\r\n            @routes[\"#{route.pattern}/*secondPanel\"] = key\r\n\r\n        # Backbone's magic\r\n        @_bindRoutes()\r\n\r\n        # Updates the LayoutStore for each matched request\r\n        @on 'route', (name, args) =>\r\n\r\n            if name is 'default'\r\n                name = LayoutActionCreator.getDefaultRoute()\r\n                args = [null]\r\n\r\n            [firstPanelInfo, secondPanelInfo] = @_processSubRouting name, args\r\n\r\n            firstAction = @fluxActionFactory firstPanelInfo\r\n            secondAction = @fluxActionFactory secondPanelInfo\r\n\r\n            @previous = @current\r\n            @current = firstPanel: firstPanelInfo, secondPanel: secondPanelInfo\r\n\r\n            if firstAction?\r\n                firstAction firstPanelInfo, 'first'\r\n\r\n            if secondAction?\r\n                secondAction secondPanelInfo, 'second'\r\n            @trigger 'fluxRoute', @current\r\n\r\n\r\n    ###\r\n        Gets the Flux action to execute given a panel info.\r\n    ###\r\n    fluxActionFactory: (panelInfo) ->\r\n\r\n        fluxAction = null\r\n        pattern = @patterns[panelInfo?.action]\r\n\r\n        if pattern?\r\n            fluxAction = LayoutActionCreator[pattern.fluxAction]\r\n\r\n            if not fluxAction?\r\n                console.warn \"`#{pattern.fluxAction}` method not found in \" + \\\r\n                             \"layout actions.\"\r\n\r\n            return fluxAction\r\n\r\n\r\n    ###\r\n        Extracts and matches the second part of the URl if it exists.\r\n    ###\r\n    _processSubRouting: (name, args) ->\r\n        # removes the last argument which is always `null`, not sure why\r\n        args.pop()\r\n\r\n        # next comes the secondPanel url if it exists\r\n        # or a firstPanel parameter if there is not secondPanel\r\n        secondPanelString = args.pop()\r\n\r\n        # if first panel number of expected params is bigger what is first\r\n        # it means there are no second panel and that what we got before was a\r\n        # parameter of the first panel\r\n        params = @patterns[name].pattern.match(/:[\\w]+/g) or []\r\n        if params.length > args.length and secondPanelString?\r\n            args.push secondPanelString\r\n            secondPanelString = null\r\n\r\n        firstPanelParameters = @_arrayToNamedParameters name, args\r\n\r\n        # checks all the routes for the second part of the URL\r\n        route = _.first _.filter @cachedPatterns, (element) ->\r\n            return element.pattern.test secondPanelString\r\n\r\n        # if a route has been found, we retrieve the params' value and format it\r\n        if route?\r\n            args = @_extractParameters route.pattern, secondPanelString\r\n            # remove the last argument which is alway `null`, not sure why\r\n            args.pop()\r\n\r\n            # normalizes the secondPanelInfo and adds default parameters if\r\n            # needed\r\n            secondPanelInfo = @_mergeDefaultParameter\r\n                action: route.key\r\n                parameters: @_arrayToNamedParameters route.key, args\r\n        else\r\n            secondPanelInfo = null\r\n\r\n        # normalizes the firstPanelInfo and adds default parameters, if needed\r\n        firstPanelInfo = @_mergeDefaultParameter\r\n            action: name\r\n            parameters: firstPanelParameters\r\n\r\n        return [firstPanelInfo, secondPanelInfo]\r\n\r\n\r\n    ###\r\n        Turns a parameters array into an object of named parameters\r\n    ###\r\n    _arrayToNamedParameters: (patternName, parametersArray) ->\r\n\r\n        namedParameters = {}\r\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\r\n        for paramName, index in parametersName\r\n            # Removes the initial \":\"\r\n            unPrefixedParamName = paramName.substr 1\r\n            namedParameters[unPrefixedParamName] = parametersArray[index]\r\n\r\n        return namedParameters\r\n\r\n\r\n    ###\r\n        Turns a parameters array into an object of named parameters\r\n    ###\r\n    _namedParametersToArray: (patternName, namedParameters) ->\r\n        parametersArray = []\r\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\r\n        for paramName, index in parametersName\r\n            # Removes the initial \":\"\r\n            unPrefixedParamName = paramName.substr 1\r\n            parametersArray.push namedParameters[paramName]\r\n\r\n        return parametersArray\r\n\r\n\r\n    ###\r\n        Builds a route from panel information.\r\n        Two modes:\r\n            - options has firstPanel and/or secondPanel attributes with the\r\n              panel(s) information.\r\n            - options has the panel information along a `direction` attribute\r\n              that can be `first` or `second`. It's the short version.\r\n    ###\r\n    buildUrl: (options) ->\r\n        # Loads the panel from the options or the current router status to keep\r\n        # track of current URLs\r\n        if options.firstPanel? or options.secondPanel?\r\n            firstPanelInfo = options.firstPanel or @current.firstPanel\r\n            secondPanelInfo = options.secondPanel or @current.secondPanel\r\n        else\r\n            # Handles short version\r\n            if options.direction?\r\n                if options.direction is 'first'\r\n                    firstPanelInfo = options\r\n                    secondPanelInfo = @current.secondPanel\r\n                else if options.direction is 'second'\r\n                    firstPanelInfo = @current.firstPanel\r\n                    secondPanelInfo = options\r\n                else\r\n                    console.warn '`direction` should be `first`, `second`.'\r\n            else\r\n                console.warn '`direction` parameter is mandatory when ' + \\\r\n                             'using short call.'\r\n\r\n        # if the `fullWidth` parameter is set, it ignores the second panel info\r\n        isFirstDirection = options.firstPanel? or options.direction is 'first'\r\n        if isFirstDirection and options.fullWidth\r\n            if options.secondPanel? and options.direction is 'second'\r\n                console.warn \"You shouldn't use the fullWidth option with \" + \\\r\n                             \"a second panel\"\r\n            secondPanelInfo = null\r\n\r\n        # Actual building\r\n        firstPart = @_getURLFromRoute firstPanelInfo\r\n        secondPart = @_getURLFromRoute secondPanelInfo\r\n\r\n        url = \"##{firstPart}\"\r\n        if secondPart? and secondPart.length > 0\r\n            url = \"#{url}/#{secondPart}\"\r\n\r\n        return url\r\n\r\n\r\n    ###\r\n        Closes a panel given a direction. If a full-width panel is closed,\r\n        the URL points to the default route.\r\n    ###\r\n    buildClosePanelUrl: (direction) ->\r\n\r\n        # If a first panel is closed, the second panel becomes full-width.\r\n        # If a full-width panel is closed, `@current.secondPanel` is null and\r\n        # the default route is loaded.\r\n        if direction is 'first' or direction is 'full'\r\n            panelInfo = _.clone @current.secondPanel\r\n        else\r\n            panelInfo = _.clone @current.firstPanel\r\n\r\n        if panelInfo?\r\n            panelInfo.direction = 'first'\r\n            panelInfo.fullWidth = true\r\n            return @buildUrl panelInfo\r\n        else\r\n            return '#' # loads the default route\r\n\r\n\r\n    # Builds the URL string from a route.\r\n    _getURLFromRoute: (panel) ->\r\n\r\n        # Clones the parameter because we are going to mutate it\r\n        panel = _.clone panel\r\n        if panel?.parameters?\r\n            # _.clone doesn't perform a deep copy\r\n            panel.parameters = _.clone panel.parameters\r\n\r\n        if panel?\r\n            pattern = @patterns[panel.action].pattern\r\n\r\n            # if the parameter is alone, we turn it into an array\r\n            if panel.parameters? and not (panel.parameters instanceof Array) \\\r\n            and not (panel.parameters instanceof Object)\r\n                panel.parameters = [panel.parameters]\r\n\r\n            # to ensures BC, if it's an array, we turn it into an object of\r\n            # named parameters\r\n            if panel.parameters? and panel.parameters instanceof Array\r\n                {action, parameters} = panel\r\n                panel.parameters = @_arrayToNamedParameters action, parameters\r\n\r\n            panel = @_mergeDefaultParameter panel\r\n\r\n            # we default to empty array if there is no parameter in the route\r\n            parametersInPattern = pattern.match(/:[\\w]+/gi) or []\r\n\r\n            # the pattern is progressively filled with values\r\n            filledPattern = pattern\r\n            if panel.parameters\r\n                for paramInPattern in parametersInPattern\r\n                    key = paramInPattern.substr 1\r\n                    paramValue = panel.parameters[key]\r\n                    filledPattern = filledPattern.replace paramInPattern, \\\r\n                                                                    paramValue\r\n\r\n            return filledPattern\r\n        else\r\n            return ''\r\n\r\n\r\n    # Merges defaut parameters into a panel info if there are missing parameters\r\n    _mergeDefaultParameter: (panelInfo) ->\r\n        panelInfo = _.clone panelInfo\r\n        parameters = _.clone panelInfo.parameters or {}\r\n        # gets default values, if there are\r\n        if (defaultParameters = @_getDefaultParameters panelInfo.action)?\r\n\r\n            # merges the parameters in the relevant place\r\n            for key, defaultParameter of defaultParameters\r\n                if not parameters[key]?\r\n                    parameters[key] = defaultParameter\r\n\r\n        panelInfo.parameters = parameters\r\n\r\n        return panelInfo\r\n","module.exports =\r\n\r\n      # Application\r\n      \"app loading\"             : \"Loading…\"\r\n      \"app back\"                : \"Back\"\r\n      \"app menu\"                : \"Menu\"\r\n      \"app search\"              : \"Search…\"\r\n      \"app alert close\"         : \"Close\"\r\n      \"app unimplemented\"       : \"Not implemented yet\"\r\n\r\n      # Compose window\r\n      \"compose\"                   : \"Compose new email\"\r\n      \"compose default\"           : 'Hello, how are you doing today ?'\r\n      \"compose from\"              : \"From\"\r\n      \"compose to\"                : \"To\"\r\n      \"compose to help\"           : \"Recipients list\"\r\n      \"compose cc\"                : \"Cc\"\r\n      \"compose cc help\"           : \"Copy list\"\r\n      \"compose bcc\"               : \"Bcc\"\r\n      \"compose bcc help\"          : \"Hidden copy list\"\r\n      \"compose subject\"           : \"Subject\"\r\n      \"compose subject help\"      : \"Message subject\"\r\n      \"compose reply prefix\"      : \"Re: \"\r\n      \"compose reply separator\"   : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\r\n      \"compose forward prefix\"    : \"Fwd: \"\r\n      \"compose forward separator\" : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\r\n      \"compose action draft\"      : \"Save draft\"\r\n      \"compose action send\"       : \"Send\"\r\n      \"compose toggle cc\"         : \"Cc\"\r\n      \"compose toggle bcc\"        : \"Bcc\"\r\n\r\n      # Menu\r\n      \"menu compose\"            : \"Compose\"\r\n      \"menu account new\"        : \"New Mailbox\"\r\n      \"menu settings\"           : \"Parameters\"\r\n\r\n      # List\r\n      \"list empty\"              : \"No email in this box.\"\r\n      \"list search empty\"       : \"No result found for the query \\\"%{query}\\\".\"\r\n      \"list count\"              : \"%{smart_count} mcolorcolumnessage in this\r\n                                  box |||| %{smart_count} messages in this box\"\r\n      \"list search count\"       : \"%{smart_count} result found. ||||\r\n                                    %{smart_count} results found.\"\r\n\r\n      # Mail\r\n      \"mail receivers\"          : \"To %{dest}\"\r\n      \"mail receivers cc\"       : \"Cc %{dest}\"\r\n      \"mail action reply\"       : \"Reply\"\r\n      \"mail action reply all\"   : \"Reply all\"\r\n      \"mail action forward\"     : \"Forward\"\r\n      \"mail action delete\"      : \"Delete\"\r\n      \"mail action mark\"        : \"Mark as…\"\r\n      \"mail action copy\"        : \"Copy…\"\r\n      \"mail action move\"        : \"Move…\"\r\n      \"mail action more\"        : \"More…\"\r\n      \"mail action headers\"     : \"Headers\"\r\n      \"mail mark spam\"          : \"Spam\"\r\n      \"mail mark nospam\"        : \"No spam\"\r\n      \"mail mark fav\"           : \"Important\"\r\n      \"mail mark nofav\"         : \"Not important\"\r\n      \"mail mark read\"          : \"Read\"\r\n      \"mail mark unread\"        : \"Not read\"\r\n      \"mail confirm delete\"     : \"Do you really want to delete this message ?\"\r\n      \"mail action conversation delete\" : \"Delete conversation\"\r\n      \"mail action conversation move\"   : \"Move conversation\"\r\n      \"mail action conversation seen\"   : \"Mark conversation as read\"\r\n      \"mail action conversation unseen\" : \"Mark conversation as not read\"\r\n\r\n      # Account\r\n      \"account new\"                 : \"New account\"\r\n      \"account edit\"                : \"Edit account\"\r\n      \"account add\"                 : \"Add\"\r\n      \"account save\"                : \"Save\"\r\n      \"account label\"               : \"Label\"\r\n      \"account name short\"          : \"A short mailbox name\"\r\n      \"account user name\"           : \"Your name\"\r\n      \"account user fullname\"       : \"Your name, as it will be displayed\"\r\n      \"account address\"             : \"Email address\"\r\n      \"account address placeholder\" : \"Your email address\"\r\n      \"account password\"            : \"Password\"\r\n      \"account sending server\"      : \"Sending server\"\r\n      \"account receiving server\"    : \"IMAP server\"\r\n      \"account port\"                : \"Port\"\r\n      \"account SSL\"                 : \"Use SSL\"\r\n      \"account TLS\"                 : \"Use STARTTLS\"\r\n      \"account remove\"              : \"Remove\"\r\n      \"account remove confirm\"      : \"Do you really want to remove this\r\n                                        account?\"\r\n      \"account draft mailbox\"       : \"Draft box\"\r\n      \"account sent mailbox\"        : \"Sent box\"\r\n      \"account trash mailbox\"       : \"Trash\"\r\n      \"account mailboxes\"           : \"Folders\"\r\n      \"account newmailbox label\"    : \"New Folder\"\r\n      \"account newmailbox placeholder\" : \"Name\"\r\n      \"account newmailbox parent\"   : \"Parent\"\r\n      \"account confirm delbox\"      : \"Do you really want to delete this box\r\n                                        and everything in it ?\"\r\n      \"account tab account\"         : \"Account\"\r\n      \"account tab mailboxes\"       : \"Folders\"\r\n      \"mailbox create ok\"           : \"Folder created\"\r\n      \"mailbox create ko\"           : \"Error creating folder\"\r\n      \"mailbox update ok\"           : \"Folder updated\"\r\n      \"mailbox update ko\"           : \"Error updating folder\"\r\n      \"mailbox delete ok\"           : \"Folder deleted\"\r\n      \"mailbox delete ko\"           : \"Error deleting folder\"\r\n      \"mailbox title edit\"          : \"Rename folder\"\r\n      \"mailbox title delete\"        : \"Delete folder\"\r\n      \"mailbox title edit save\"     : \"Save\"\r\n      \"mailbox title edit cancel\"   : \"Cancel\"\r\n      \"mailbox title add\"           : \"Add new folder\"\r\n      \"mailbox title add cancel\"    : \"Cancel\"\r\n      \"mailbox title favorite\"      : \"Folder is displayed\"\r\n      \"mailbox title not favorite\"  : \"Folder not displayed\"\r\n      \"config error auth\"           : \"Wrong connection parameters\"\r\n      \"config error imapPort\"       : \"Wrong IMAP port\"\r\n      \"config error imapServer\"     : \"Wrong IMAP server\"\r\n      \"config error imapTLS\"        : \"Wrong IMAP TLS\"\r\n      \"config error smtpPort\"       : \"Wrong SMTP Port\"\r\n      \"config error smtpServer\"     : \"Wrong SMTP Server\"\r\n\r\n      # Message Action\r\n      \"message action sent ok\"      : \"Message sent\"\r\n      \"message action sent ko\"      : \"Error sending message: \"\r\n      \"message action draft ok\"     : \"Message saved\"\r\n      \"message action draft ko\"     : \"Error saving message: \"\r\n      \"message action delete ok\"    : \"Message deleted\"\r\n      \"message action delete ko\"    : \"Error deleting message: \"\r\n      \"message action move ok\"      : \"Message moved\"\r\n      \"message action move ko\"      : \"Error moving message: \"\r\n      \"message action mark ok\"      : \"Message marked\"\r\n      \"message action mark ko\"      : \"Error marking message: \"\r\n      \"conversation move ok\"        : \"Conversation moved\"\r\n      \"conversation move ko\"        : \"Error moving conversation\"\r\n      \"conversation delete ok\"      : \"Conversation deleted\"\r\n      \"conversation delete ko\"      : \"Error deleting conversation\"\r\n      \"conversation seen ok\"        : \"Conversation marked as read\"\r\n      \"conversation seen ko\"        : \"Error\"\r\n      \"conversation unseen ok\"      : \"Conversation marked as unread\"\r\n      \"conversation unseen ko\"      : \"Error\"\r\n      \"message images warning\"      : \"Display of images inside message has\r\n                                        been blocked\"\r\n      \"message images display\"      : \"Display images\"\r\n      \"message html display\"        : \"Display HTML\"\r\n      \"message delete no trash\"     : \"Please select a Trash folder\"\r\n\r\n      # Settings\r\n      \"settings title\"             : \"Settings\"\r\n      \"settings button save\"       : \"Save\"\r\n      \"settings label mpp\"         : \"Messages per page\"\r\n      \"settings plugins\"           : \"Add ons\"\r\n      \"settings label composeInHTML\"        : \"Rich message editor\"\r\n      \"settings label messageDisplayHTML\"   : \"Display message in HTML\"\r\n      \"settings label messageDisplayImages\" : \"Display images inside messages\"\r\n      \"settings lang\"             : \"Language\"\r\n      \"settings lang en\"          : \"English\"\r\n      \"settings lang fr\"          : \"Français\"\r\n\r\n      # File picker\r\n      \"picker drop here\"           : \"Drop files here\"\r\n\r\n      # Mailbox List\r\n      \"mailbox pick one\"           : \"Pick one\"\r\n      \"mailbox pick null\"          : \"No box for this\"\r\n\r\n      # Tasks\r\n      \"task diff\"                  : 'Comparing %{box} of %{account}'\r\n      \"task apply-diff-fetch\"      : 'Fetching mails %{box} of %{account}'\r\n      \"there were errors\"          : '%{smart_count} error. |||| %{smart_count}\r\n                                        errors.'\r\n      \"modal please report\"        : \"Please transmit this information to cozy.\"\r\n      \"modal please contribute\"    : \"Please contribute\"\r\n\r\n      # Validation\r\n      \"validate must not be empty\" : \"Mandatory field\"\r\n\r\n      # Toast\r\n      \"toast hide\"      : \"Hide alerts\"\r\n      \"toast show\"      : \"Display alerts\"\r\n      \"toast close all\" : \"Close all alerts\"\r\n","module.exports =\r\n\r\n      # Application\r\n      \"app loading\"             : \"Chargement…\"\r\n      \"app back\"                : \"Retour\"\r\n      \"app menu\"                : \"Menu\"\r\n      \"app search\"              : \"Rechercher…\"\r\n      \"app alert close\"         : \"Fermer\"\r\n      \"app unimplemented\"       : \"Non implémenté\"\r\n\r\n      # Compose window\r\n      \"compose\"                   : \"Écrire un nouveau message\"\r\n      \"compose default\"           : \"Bonjour, comment ça va ?\"\r\n      \"compose from\"              : \"De\"\r\n      \"compose to\"                : \"À\"\r\n      \"compose to help\"           : \"Liste des destinataires principaux\"\r\n      \"compose cc\"                : \"Cc\"\r\n      \"compose cc help\"           : \"Liste des destinataires en copie\"\r\n      \"compose bcc\"               : \"Cci\"\r\n      \"compose bcc help\"          : \"Liste des destinataires en copie cachée\"\r\n      \"compose subject\"           : \"Objet\"\r\n      \"compose subject help\"      : \"Objet du message\"\r\n      \"compose reply prefix\"      : \"Re: \"\r\n      \"compose reply separator\"   : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\r\n      \"compose forward prefix\"    : \"Fwd: \"\r\n      \"compose forward separator\" : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\r\n      \"compose action draft\"      : \"Enregistrer en tant que brouillon\"\r\n      \"compose action send\"       : \"Envoyer\"\r\n      \"compose toggle cc\"         : \"Copie à\"\r\n      \"compose toggle bcc\"        : \"Copie cachée à\"\r\n\r\n      # Menu\r\n      \"menu compose\"            : \"Nouveau\"\r\n      \"menu account new\"        : \"Ajouter un compte\"\r\n      \"menu settings\"           : \"Paramètres\"\r\n\r\n      # List\r\n      \"list empty\"              : \"Pas d'email dans cette boîte..\"\r\n      \"list search empty\"       : \"Aucun résultat trouvé pour la requête\r\n                                    \\\"%{query}\\\".\"\r\n      \"list count\"              : \"%{smart_count} message dans cette boite ||||\r\n                                    %{smart_count} messages dans cette boite\"\r\n      \"list search count\"       : \"%{smart_count} résultat trouvé. ||||\r\n                                    %{smart_count} résultats trouvés.\"\r\n\r\n      # Mail\r\n      \"mail receivers\"          : \"À %{dest}\"\r\n      \"mail receivers cc\"       : \"Copie %{dest}\"\r\n      \"mail action reply\"       : \"Répondre\"\r\n      \"mail action reply all\"   : \"Répondre à tous\"\r\n      \"mail action forward\"     : \"Transférer\"\r\n      \"mail action delete\"      : \"Supprimer\"\r\n      \"mail action mark\"        : \"Marquer comme\"\r\n      \"mail action copy\"        : \"Copier…\"\r\n      \"mail action move\"        : \"Déplacer…\"\r\n      \"mail action more\"        : \"Plus…\"\r\n      \"mail action headers\"     : \"Entêtes\"\r\n      \"mail mark spam\"          : \"Pourriel\"\r\n      \"mail mark nospam\"        : \"Légitime\"\r\n      \"mail mark fav\"           : \"Important\"\r\n      \"mail mark nofav\"         : \"Normal\"\r\n      \"mail mark read\"          : \"Lu\"\r\n      \"mail mark unread\"        : \"Non lu\"\r\n      \"mail confirm delete\"     : \"Voulez-vous vraiment supprimer ce message ?\"\r\n      \"mail action conversation delete\" : \"Supprimer la conversation\"\r\n      \"mail action conversation move\"   : \"Déplacer la conversation\"\r\n      \"mail action conversation seen\"   : \"Marquer la conversation comme lue\"\r\n      \"mail action conversation unseen\" : \"Marquer la conversation comme\r\n                                            non lue\"\r\n\r\n      # Account\r\n      \"account new\"                 : \"Nouveau compte\"\r\n      \"account edit\"                : \"Modifier le compte\"\r\n      \"account add\"                 : \"Créer\"\r\n      \"account save\"                : \"Enregistrer\"\r\n      \"account label\"               : \"Nom\"\r\n      \"account name short\"          : \"Nom abrégé\"\r\n      \"account user name\"           : \"Votre nom\"\r\n      \"account user fullname\"       : \"Votre nom, tel qu'il sera affiché\"\r\n      \"account address\"             : \"Adresse\"\r\n      \"account address placeholder\" : \"Votre adresse électronique\"\r\n      \"account password\"            : \"Mot de passe\"\r\n      \"account sending server\"      : \"Serveur sortant\"\r\n      \"account receiving server\"    : \"Serveur IMAP\"\r\n      \"account port\"                : \"Port\"\r\n      \"account SSL\"                 : \"Utiliser SSL\"\r\n      \"account TLS\"                 : \"Utiliser STARTTLS\"\r\n      \"account remove\"              : \"Supprimer\"\r\n      \"account remove confirm\"      : \"Voulez-vous vraiment supprimer\r\n                                        ce compte ?\"\r\n      \"account draft mailbox\"       : \"Enregistrer les brouillons dans\"\r\n      \"account sent mailbox\"        : \"Enregistrer les messages envoyés dans\"\r\n      \"account trash mailbox\"       : \"Corbeille\"\r\n      \"account mailboxes\"           : \"Dossiers\"\r\n      \"account newmailbox label\"    : \"Nouveaux dossier\"\r\n      \"account newmailbox placeholder\" : \"Nom\"\r\n      \"account newmailbox parent\"   : \"Créer sous\"\r\n      \"account confirm delbox\"      : \"Voulez-vous vraiment supprimer ce\r\n                                        dossier et tout son contenu ?\"\r\n      \"account tab account\"         : \"Compte\"\r\n      \"account tab mailboxes\"       : \"Dossiers\"\r\n      \"mailbox create ok\"           : \"Dossier créé\"\r\n      \"mailbox create ko\"           : \"Erreur de création du dossier\"\r\n      \"mailbox update ok\"           : \"Dossier mis à jour\"\r\n      \"mailbox update ko\"           : \"Erreur de mise à jour\"\r\n      \"mailbox delete ok\"           : \"Dossier supprimé\"\r\n      \"mailbox delete ko\"           : \"Erreur de suppression du dossier\"\r\n      \"mailbox title edit\"          : \"Renommer le dossier\"\r\n      \"mailbox title delete\"        : \"Supprimer le dossier\"\r\n      \"mailbox title edit save\"     : \"Enregistrer\"\r\n      \"mailbox title edit cancel\"   : \"Annuler\"\r\n      \"mailbox title add\"           : \"Créer un dossier\"\r\n      \"mailbox title add cancel\"    : \"Annuler\"\r\n      \"mailbox title favorite\"      : \"Dossier affiché\"\r\n      \"mailbox title not favorite\"  : \"Dossier non affiché\"\r\n      \"config error auth\"           : \"Impossible de se connecter avec ces paramètres\"\r\n      \"config error imapPort\"       : \"Port du serveur IMAP invalide\"\r\n      \"config error imapServer\"     : \"Serveur IMAP invalide\"\r\n      \"config error imapTLS\"        : \"Erreur IMAP TLS\"\r\n      \"config error smtpPort\"       : \"Port du serveur d'envoi invalide\"\r\n      \"config error smtpServer\"     : \"Serveur d'envoi invalide\"\r\n\r\n      # Message Action\r\n      \"message action sent ok\"      : \"Message envoyé !\"\r\n      \"message action sent ko\"      : \"Une erreur est survenue : \"\r\n      \"message action draft ok\"     : \"Message sauvegardé !\"\r\n      \"message action draft ko\"     : \"Une erreur est survenue : \"\r\n      \"message action delete ok\"    : \"Message supprimé\"\r\n      \"message action delete ko\"    : \"Impossible de supprimer le message : \"\r\n      \"message action move ok\"      : \"Message déplacé\"\r\n      \"message action move ko\"      : \"Le déplacement a échoué\"\r\n      \"message action mark ok\"      : \"Ok\"\r\n      \"message action mark ko\"      : \"L'opération a échoué\"\r\n      \"conversation move ok\"        : \"Conversation déplacée\"\r\n      \"conversation move ko\"        : \"L'opération a échoué\"\r\n      \"conversation delete ok\"      : \"Conversation supprimée\"\r\n      \"conversation delete ko\"      : \"L'opération a échoué\"\r\n      \"conversation seen ok\"        : \"Ok\"\r\n      \"conversation seen ko\"        : \"L'opération a échoué\"\r\n      \"conversation unseen ok\"      : \"Ok\"\r\n      \"conversation unseen ko\"      : \"L'opération a échoué\"\r\n      \"message images warning\"      : \"L'affichage des images du message a été\r\n                                        bloqué\"\r\n      \"message images display\"      : \"Afficher les images\"\r\n      \"message html display\"        : \"Afficher en HTML\"\r\n      \"message delete no trash\"     : \"Choisissez d'abord un dossier Corbeille\"\r\n\r\n      # Settings\r\n      \"settings title\"             : \"Paramètres\"\r\n      \"settings button save\"       : \"Enregistrer\"\r\n      \"settings label mpp\"         : \"Nombre de messages par page\"\r\n      \"settings plugins\"           : \"Modules complémentaires\"\r\n      \"settings label composeInHTML\"        : \"Éditeur riche\"\r\n      \"settings label messageDisplayHTML\"   : \"Afficher les messages en HTML\"\r\n      \"settings label messageDisplayImages\" : \"Afficher les images\"\r\n      \"settings lang\"             : \"Langue\"\r\n      \"settings lang en\"          : \"English\"\r\n      \"settings lang fr\"          : \"Français\"\r\n\r\n      # File picker\r\n      \"picker drop here\"           : \"Déposer les fichiers ici\"\r\n\r\n      # Mailbox List\r\n      \"mailbox pick one\"           : \"Choisissez une boite\"\r\n      \"mailbox pick null\"          : \"Pas de boite pour ça\"\r\n\r\n      # Tasks\r\n      \"task diff\"                  : 'Comparaison %{box} de %{account}'\r\n      \"task apply-diff-fetch\"      : 'Téléchargement des messages du dossier\r\n                                        %{box} de %{account}'\r\n      \"there were errors\"          : '%{smart_count} erreur. ||||\r\n                                        %{smart_count} erreurs.'\r\n      \"modal please report\"        : \"Merci de bien vouloir transmettre ces\r\n                                        informations à cozy.\"\r\n      \"modal please contribute\"    : \"Merci de contribuer\"\r\n\r\n      # Validation\r\n      \"validate must not be empty\" : \"Ce champ doit être renseigné\"\r\n\r\n      # Toast\r\n      \"toast hide\"      : \"Masquer les alertes\"\r\n      \"toast show\"      : \"Afficher les alertes\"\r\n      \"toast close all\" : \"Fermer toutes les alertes\"\r\n","###\r\n    Router mixin.\r\n    Aliases `buildUrl` and `buildClosePanelUrl`\r\n###\r\n\r\nrouter = window.router\r\n\r\nmodule.exports =\r\n\r\n    buildUrl: (options) ->\r\n        router.buildUrl.call router, options\r\n\r\n    buildClosePanelUrl: (direction) ->\r\n        router.buildClosePanelUrl.call router, direction\r\n\r\n    # Builds the URL (based on options) and redirect to it.\r\n    # If `options` is a string, it will be considered as the target URL.\r\n    redirect: (options) ->\r\n        url = if typeof options is \"string\" then options else @buildUrl options\r\n        router.navigate url, true\r\n\r\n\r\n","module.exports = StoreWatchMixin = (stores) ->\r\n\r\n    return {\r\n        componentDidMount: ->\r\n            stores.forEach (store) => store.on 'change', @_setStateFromStores\r\n\r\n        componentWillUnmount: ->\r\n            stores.forEach (store) =>\r\n                store.removeListener 'change', @_setStateFromStores\r\n\r\n        getInitialState: -> return @getStateFromStores()\r\n\r\n        _setStateFromStores: -> @setState @getStateFromStores()\r\n    }","PanelRouter = require './libs/panel_router'\r\n\r\nAccountStore = require './stores/account_store'\r\n\r\nmodule.exports = class Router extends PanelRouter\r\n\r\n    patterns:\r\n        'account.config':\r\n            pattern: 'account/:accountID/config'\r\n            fluxAction: 'showConfigAccount'\r\n        'account.new':\r\n            pattern: 'account/new'\r\n            fluxAction: 'showCreateAccount'\r\n        'account.mailbox.messages':\r\n            pattern: 'account/:accountID/mailbox/:mailboxID/page/:page'\r\n            fluxAction: 'showMessageList'\r\n\r\n        'search':\r\n            pattern: 'search/:query/page/:page'\r\n            fluxAction: 'showSearch'\r\n\r\n        'message':\r\n            pattern: 'message/:messageID'\r\n            fluxAction: 'showConversation'\r\n        'compose':\r\n            pattern: 'compose'\r\n            fluxAction: 'showComposeNewMessage'\r\n\r\n        'settings':\r\n            pattern: 'settings'\r\n            fluxAction: 'showSettings'\r\n\r\n        'default':\r\n            pattern: ''\r\n            fluxAction: ''\r\n\r\n    # default route\r\n    routes: '': 'default'\r\n\r\n    # Determines and gets the default parameters regarding a specific action\r\n    _getDefaultParameters: (action) ->\r\n        switch action\r\n            when 'account.mailbox.messages'\r\n                defaultAccountID = AccountStore.getDefault()?.get 'id'\r\n                defaultMailbox = AccountStore.getDefaultMailbox defaultAccountID\r\n                defaultParameters =\r\n                    accountID: defaultAccountID\r\n                    mailboxID: defaultMailbox?.get 'id'\r\n                    page: 1\r\n            when 'account.config'\r\n                defaultAccount = AccountStore.getDefault()?.get 'id'\r\n                defaultParameters = accountID: defaultAccount\r\n            when 'search'\r\n                defaultParameters =\r\n                    query: \"\"\r\n                    page: 1\r\n            else\r\n                defaultParameters = null\r\n        return defaultParameters\r\n","Store = require '../libs/flux/store/store'\r\n\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nAccountTranslator = require '../utils/translators/account_translator'\r\n\r\nclass AccountStore extends Store\r\n\r\n    ###\r\n        Initialization.\r\n        Defines private variables here.\r\n    ###\r\n\r\n    # Creates an OrderedMap of accounts\r\n    _accounts = Immutable.Sequence window.accounts\r\n\r\n        # sort first\r\n        .sort (mb1, mb2) ->\r\n            if mb1.label > mb2.label then return 1\r\n            else if mb1.label < mb2.label then return -1\r\n            else return 0\r\n\r\n        # sets account ID as index\r\n        .mapKeys (_, account) -> return account.id\r\n\r\n        # makes account object an immutable Map\r\n        .map (account) -> AccountTranslator.toImmutable account\r\n\r\n        .toOrderedMap()\r\n\r\n    _selectedAccount = null\r\n    _newAccountWaiting = false\r\n    _newAccountError = null\r\n\r\n\r\n    ###\r\n        Defines here the action handlers.\r\n    ###\r\n    __bindHandlers: (handle) ->\r\n\r\n        onUpdate = (rawAccount) =>\r\n            account = AccountTranslator.toImmutable rawAccount\r\n            _accounts = _accounts.set account.get('id'), account\r\n            _selectedAccount = _accounts.get account.get 'id'\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.ADD_ACCOUNT, (account) ->\r\n            account = AccountTranslator.toImmutable account\r\n            _accounts = _accounts.set account.get('id'), account\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.SELECT_ACCOUNT, (accountID) ->\r\n            _selectedAccount = _accounts.get(accountID) or null\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.NEW_ACCOUNT_WAITING, (payload) ->\r\n            _newAccountWaiting = payload\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.NEW_ACCOUNT_ERROR, (error) ->\r\n            _newAccountError = error\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.EDIT_ACCOUNT, (rawAccount) ->\r\n            onUpdate rawAccount\r\n\r\n        handle ActionTypes.MAILBOX_CREATE, (rawAccount) ->\r\n            onUpdate rawAccount\r\n\r\n        handle ActionTypes.MAILBOX_UPDATE, (rawAccount) ->\r\n            onUpdate rawAccount\r\n\r\n        handle ActionTypes.MAILBOX_DELETE, (rawAccount) ->\r\n            onUpdate rawAccount\r\n\r\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\r\n            _accounts = _accounts.delete accountID\r\n            _selectedAccount = @getDefault()\r\n            @emit 'change'\r\n\r\n    ###\r\n        Public API\r\n    ###\r\n    getAll: -> return _accounts\r\n\r\n    getByID: (accountID) -> return _accounts.get accountID\r\n\r\n    getDefault: -> return _accounts.first() or null\r\n\r\n    getDefaultMailbox: (accountID) ->\r\n\r\n        account = _accounts.get(accountID) or @getDefault()\r\n        mailboxes = account.get('mailboxes')\r\n        favorites = account.get('favorites')\r\n        defaultID = if favorites? then favorites[0]\r\n\r\n        return if defaultID then mailboxes.get defaultID\r\n        else mailboxes.first()\r\n\r\n    getSelected: -> return _selectedAccount\r\n\r\n    getSelectedMailboxes: (flatten = false) ->\r\n\r\n        return Immutable.OrderedMap.empty() unless _selectedAccount?\r\n\r\n        if flatten\r\n            rawMailboxesTree = _selectedAccount.get('mailboxes').toJS()\r\n            # @FIXME Should be done with iterator when they are fixed\r\n            getFlattenMailboxes = (childrenMailboxes, depth = 0) ->\r\n                result = Immutable.OrderedMap()\r\n                for id, rawMailbox of childrenMailboxes\r\n                    children = rawMailbox.children\r\n                    delete rawMailbox.children\r\n                    mailbox = Immutable.Map rawMailbox\r\n                    # we add a depth indicator for display\r\n                    mailbox = mailbox.set 'depth', depth\r\n                    result = result.set mailbox.get('id'), mailbox\r\n                    result = result.merge getFlattenMailboxes children, \\\r\n                                                                    (depth + 1)\r\n                return result.toOrderedMap()\r\n\r\n            return getFlattenMailboxes(rawMailboxesTree).toOrderedMap()\r\n        else\r\n            emptyMap = Immutable.OrderedMap.empty()\r\n            return _selectedAccount?.get('mailboxes') or emptyMap\r\n\r\n    getSelectedMailbox: (selectedID) ->\r\n        mailboxes = @getSelectedMailboxes()\r\n        if selectedID?\r\n            return mailboxes.get selectedID\r\n        else\r\n            return mailboxes.first()\r\n\r\n    # Takes the 3 first mailboxes to show as \"favorite\".\r\n    # Skip the first 1, assumed to be the inbox\r\n    # Should be made configurable.\r\n    getSelectedFavorites: ->\r\n\r\n\r\n        mailboxes = @getSelectedMailboxes true\r\n        ids = _selectedAccount?.get 'favorites'\r\n\r\n        if ids?\r\n            return mailboxes\r\n                .filter (box, key) -> key in ids[1..]\r\n                .toOrderedMap()\r\n        else\r\n            return mailboxes\r\n                .toOrderedMap()\r\n\r\n    getError: -> return _newAccountError\r\n\r\n    isWaiting: -> return _newAccountWaiting\r\n\r\nmodule.exports = new AccountStore()\r\n","Store = require '../libs/flux/store/store'\r\n\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nclass LayoutStore extends Store\r\n\r\n    ###\r\n        Initialization.\r\n        Defines private variables here.\r\n    ###\r\n    _responsiveMenuShown = false\r\n    _alert =\r\n        level: null\r\n        message: null\r\n\r\n\r\n    ###\r\n        Defines here the action handlers.\r\n    ###\r\n    __bindHandlers: (handle) ->\r\n\r\n        handle ActionTypes.SHOW_MENU_RESPONSIVE, ->\r\n            _responsiveMenuShown = true\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.HIDE_MENU_RESPONSIVE, ->\r\n            _responsiveMenuShown = false\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.DISPLAY_ALERT, (value) ->\r\n            _alert.level   = value.level\r\n            _alert.message = value.message\r\n            @emit 'change'\r\n\r\n\r\n    ###\r\n        Public API\r\n    ###\r\n    isMenuShown: -> return _responsiveMenuShown\r\n\r\n    getAlert: -> return _alert\r\n\r\nmodule.exports = new LayoutStore()\r\n","Store = require '../libs/flux/store/store'\r\nAppDispatcher = require '../app_dispatcher'\r\n\r\nAccountStore = require './account_store'\r\n\r\n{ActionTypes}       = require '../constants/app_constants'\r\n\r\nLayoutActionCreator = require '../actions/layout_action_creator'\r\n\r\nclass MessageStore extends Store\r\n\r\n    ###\r\n        Initialization.\r\n        Defines private variables here.\r\n    ###\r\n\r\n    # Creates an OrderedMap of messages\r\n    _messages = Immutable.Sequence()\r\n\r\n        # sets message ID as index\r\n        .mapKeys (_, message) -> message.id\r\n\r\n        # makes message object an immutable Map\r\n        .map (message) -> Immutable.fromJS message\r\n        .toOrderedMap()\r\n\r\n    _counts = Immutable.Map()\r\n    _unreadCounts = Immutable.Map()\r\n\r\n\r\n    ###\r\n        Defines here the action handlers.\r\n    ###\r\n    __bindHandlers: (handle) ->\r\n\r\n        handle ActionTypes.RECEIVE_RAW_MESSAGE, onReceiveRawMessage = \\\r\n        (message, silent = false) ->\r\n            # create or update\r\n            message.hasAttachments = Array.isArray(message.attachments) and \\\r\n                                     message.attachments.length > 0\r\n            if not message.createdAt?\r\n                message.createdAt = message.date\r\n            if not message.attachments?\r\n                message.attachments = []\r\n            # Add messageId to every attachment\r\n            message.attachments = message.attachments.map (file) ->\r\n                file.messageId = message.id\r\n                return file\r\n\r\n            if not message.flags?\r\n                message.flags = []\r\n            # message loaded from fixtures for test purpose have a docType\r\n            # that may cause some troubles\r\n            delete message.docType\r\n            message = Immutable.Map message\r\n            _messages = _messages.set message.get('id'), message\r\n\r\n            @emit 'change' unless silent\r\n\r\n        handle ActionTypes.RECEIVE_RAW_MESSAGES, (messages) ->\r\n\r\n            if messages.count? and messages.mailboxID?\r\n                _counts = _counts.set messages.mailboxID, messages.count\r\n                _unreadCounts = _unreadCounts.set messages.mailboxID, messages.unread\r\n                messages = messages.messages\r\n\r\n            onReceiveRawMessage message, true for message in messages\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\r\n            AppDispatcher.waitFor [AccountStore.dispatchToken]\r\n            messages = @getMessagesByAccount accountID\r\n            _messages = _messages.withMutations (map) ->\r\n                messages.forEach (message) -> map.remove message.get 'id'\r\n\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.MESSAGE_SEND, (message) ->\r\n            # message should have been copied to Sent mailbox,\r\n            # so it seems reasonable to emit change\r\n            onReceiveRawMessage message, true\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.MESSAGE_DELETE, (message) ->\r\n            # message should have been deleted from current mailbox\r\n            # and copied to trash\r\n            # so it seems reasonable to emit change\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.MESSAGE_BOXES, (message) ->\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.MESSAGE_FLAG, (message) ->\r\n            @emit 'change'\r\n\r\n\r\n    ###\r\n        Public API\r\n    ###\r\n    getAll: -> return _messages\r\n\r\n    getByID: (messageID) -> _messages.get(messageID) or null\r\n\r\n    ###*\r\n    * Get messages from account, with optional pagination\r\n    *\r\n    * @param {String} accountID\r\n    * @param {Number} first     index of first message\r\n    * @param {Number} last      index of last message\r\n    *\r\n    * @return {Array}\r\n    ###\r\n    getMessagesByAccount: (accountID, first = null, last = null) ->\r\n        sequence = _messages.filter (message) ->\r\n            return message.get('account') is accountID\r\n        if first? and last?\r\n            sequence = sequence.slice first, last\r\n\r\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\r\n        return sequence.toOrderedMap()\r\n\r\n\r\n    getMessagesCountByAccount: (accountID) ->\r\n        return @getMessagesByAccount(accountID).count()\r\n\r\n    ###*\r\n    * Get messages from mailbox, with optional pagination\r\n    *\r\n    * @param {String} mailboxID\r\n    * @param {Number} first     index of first message\r\n    * @param {Number} last      index of last message\r\n    *\r\n    * @return {Array}\r\n    ###\r\n    getMessagesByMailbox: (mailboxID, first = null, last = null) ->\r\n        sequence = _messages.filter (message) ->\r\n            return mailboxID in Object.keys message.get 'mailboxIDs'\r\n\r\n        if first? and last?\r\n            sequence = sequence.slice first, last\r\n\r\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\r\n        return sequence.toOrderedMap()\r\n\r\n    getMessagesCounts: ->\r\n        return _counts\r\n\r\n    getUnreadMessagesCounts:  ->\r\n        return _unreadCounts\r\n\r\n    getMessagesByConversation: (messageID) ->\r\n        idsToLook = [messageID]\r\n        conversation = []\r\n        while idToLook = idsToLook.pop()\r\n            conversation.push @getByID idToLook\r\n            temp = _messages.filter (message) ->\r\n                return message.get('inReplyTo') is idToLook\r\n            newIdsToLook = temp.map((item) -> item.get('id')).toArray()\r\n            idsToLook = idsToLook.concat newIdsToLook\r\n\r\n        return conversation\r\n\r\nmodule.exports = new MessageStore()\r\n","Store = require '../libs/flux/store/store'\r\n\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nclass SearchStore extends Store\r\n\r\n    ###\r\n        Initialization.\r\n        Defines private variables here.\r\n    ###\r\n\r\n    _query = \"\"\r\n\r\n    # search results are a list of message\r\n    _results = Immutable.OrderedMap.empty()\r\n\r\n    ###\r\n        Defines here the action handlers.\r\n    ###\r\n    __bindHandlers: (handle) ->\r\n\r\n        handle ActionTypes.RECEIVE_RAW_SEARCH_RESULTS, (rawResults) ->\r\n            if rawResult?\r\n                _results = _results.withMutations (map) ->\r\n                    rawResults.forEach (rawResult) ->\r\n                        message = Immutable.Map rawResult\r\n                        map.set message.get('id'), message\r\n            else\r\n                _results = Immutable.OrderedMap.empty()\r\n\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.CLEAR_SEARCH_RESULTS, ->\r\n            _results = Immutable.OrderedMap.empty()\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.SET_SEARCH_QUERY, (query) ->\r\n            _query = query\r\n            @emit 'change'\r\n\r\n\r\n    ###\r\n        Public API\r\n    ###\r\n    getResults: -> return _results\r\n\r\n    getQuery: -> return _query\r\n\r\nmodule.exports = new SearchStore()\r\n","Store = require '../libs/flux/store/store'\r\n\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nclass SettingsStore extends Store\r\n\r\n    ###\r\n        Initialization.\r\n        Defines private variables here.\r\n    ###\r\n    _settings = Immutable.Map window.settings\r\n\r\n    ###\r\n        Defines here the action handlers.\r\n    ###\r\n    __bindHandlers: (handle) ->\r\n\r\n        handle ActionTypes.SETTINGS_UPDATED, (settings) ->\r\n            _settings = Immutable.Map settings\r\n            @emit 'change'\r\n\r\n\r\n    ###\r\n        Public API\r\n    ###\r\n    get: (settingName = null) ->\r\n        if settingName?\r\n            return _settings.get settingName\r\n        else\r\n            return _settings\r\n\r\nmodule.exports = new SettingsStore()\r\n","Store = require '../libs/flux/store/store'\r\n\r\n{ActionTypes} = require '../constants/app_constants'\r\n\r\nclass TasksStore extends Store\r\n\r\n    ###\r\n        Initialization.\r\n        Defines private variables here.\r\n    ###\r\n    _tasks = Immutable.Sequence window.tasks\r\n    # sets task ID as index\r\n    .mapKeys (_, task) -> return task.id\r\n    .map (message) -> Immutable.fromJS message\r\n    .toOrderedMap()\r\n\r\n    \r\n    ###\r\n        Defines here the action handlers.\r\n    ###\r\n    __bindHandlers: (handle) ->\r\n\r\n        handle ActionTypes.RECEIVE_TASK_UPDATE, (task) ->\r\n            task = Immutable.Map task\r\n            _tasks = _tasks.set task.get('id'), task\r\n            @emit 'change'\r\n\r\n        handle ActionTypes.RECEIVE_TASK_DELETE, (taskid) ->\r\n            _tasks = _tasks.remove taskid\r\n            @emit 'change'\r\n\r\n\r\n    getTasks: -> _tasks.toOrderedMap() \r\n\r\n\r\nmodule.exports = new TasksStore()\r\n","{ComposeActions} = require '../constants/app_constants'\r\n\r\nmodule.exports = MessageUtils = \r\n\r\n    displayAddresses: (addresses, full = false) ->\r\n        if not addresses?\r\n            return \"\"\r\n\r\n        res = []\r\n        for item in addresses\r\n            if not item?\r\n                break\r\n            if full\r\n                if item.name? and item.name isnt \"\"\r\n                    res.push \"\\\"#{item.name}\\\" <#{item.address}>\"\r\n                else\r\n                    res.push \"#{item.address}\"\r\n            else\r\n                if item.name? and item.name isnt \"\"\r\n                    res.push item.name\r\n                else\r\n                    res.push item.address.split('@')[0]\r\n        return res.join \", \"\r\n\r\n\r\n    getReplyToAddress: (message) ->\r\n        reply = message.get 'replyTo'\r\n        from = message.get 'from'\r\n        return if reply?.length isnt 0 then reply else from\r\n        \r\n\r\n\r\n    makeReplyMessage: (inReplyTo, action) ->\r\n        message = {}\r\n        \r\n        if inReplyTo\r\n            message.accountID = inReplyTo.get 'accountID'\r\n            dateHuman = @formatDate inReplyTo.get 'createdAt'\r\n            sender = @displayAddresses inReplyTo.get 'from'\r\n\r\n            text = inReplyTo.get 'text'\r\n            html = inReplyTo.get 'html'\r\n\r\n            if text and not html and state.composeInHTML\r\n                html = markdown.toHTML text\r\n\r\n            if html and not text and not state.composeInHTML\r\n                text = toMarkdown html\r\n        \r\n            message.inReplyTo = inReplyTo.get 'id'\r\n            message.references = inReplyTo.get('references') or []\r\n            message.references = message.references.concat message.inReplyTo\r\n\r\n        switch action\r\n            when ComposeActions.REPLY\r\n                message.to = @getReplyToAddress inReplyTo\r\n                message.cc = []\r\n                message.bcc = []\r\n                message.subject = \"#{t 'compose reply prefix'}#{inReplyTo.get 'subject'}\"\r\n                message.body = t('compose reply separator', {date: dateHuman, sender: sender}) +\r\n                    @generateReplyText(text) + \"\\n\"\r\n                message.html = \"\"\"\r\n                    <p><br /></p>\r\n                    <p>#{t('compose reply separator', {date: dateHuman, sender: sender})}</p>\r\n                    <blockquote>#{html}</blockquote>\r\n                    \"\"\"\r\n            when ComposeActions.REPLY_ALL\r\n                message.to = @getReplyToAddress inReplyTo\r\n                message.cc = [].concat inReplyTo.get('to'), inReplyTo.get('cc')\r\n                message.bcc = []\r\n                message.subject = \"#{t 'compose reply prefix'}#{inReplyTo.get 'subject'}\"\r\n                message.body = t('compose reply separator', {date: dateHuman, sender: sender}) +\r\n                    @generateReplyText(text) + \"\\n\"\r\n                message.html = \"\"\"\r\n                    <p><br /></p>\r\n                    <p>#{t('compose reply separator', {date: dateHuman, sender: sender})}</p>\r\n                    <blockquote>#{html}</blockquote>\r\n                    \"\"\"\r\n            when ComposeActions.FORWARD\r\n                message.to = []\r\n                message.cc = []\r\n                message.bcc = []\r\n                message.subject = \"#{t 'compose forward prefix'}#{inReplyTo.get 'subject'}\"\r\n                message.body = t('compose forward separator', {date: dateHuman, sender: sender}) + text\r\n                message.html = \"<p>#{t('compose forward separator', {date: dateHuman, sender: sender})}</p>\" + html\r\n\r\n                # Add original message attachments\r\n                attachments = inReplyTo.get 'attachments' or []\r\n                message.attachments = attachments.map @convertAttachments\r\n\r\n            when null\r\n                message.to      = []\r\n                message.cc      = []\r\n                message.bcc     = []\r\n                message.subject = ''\r\n                message.body    = t 'compose default'\r\n\r\n        return message\r\n\r\n    generateReplyText: (text) ->\r\n        text = text.split '\\n'\r\n        res  = []\r\n        text.forEach (line) ->\r\n            res.push \"> #{line}\"\r\n        return res.join \"\\n\"\r\n\r\n    getAttachmentType: (type) ->\r\n        sub = type.split '/'\r\n        switch sub[0]\r\n            when 'audio', 'image', 'text', 'video'\r\n                return sub[0]\r\n            when \"application\"\r\n                switch sub[1]\r\n                    when \"vnd.ms-excel\",\\\r\n                         \"vnd.oasis.opendocument.spreadsheet\",\\\r\n                         \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                        return \"spreadsheet\"\r\n                    when \"msword\",\\\r\n                         \"vnd.ms-word\",\\\r\n                         \"vnd.oasis.opendocument.text\",\\\r\n                         \"vnd.openxmlformats-officedocument.wordprocessingm\" + \\\r\n                         \"l.document\"\r\n                        return \"word\"\r\n                    when \"vns.ms-powerpoint\",\\\r\n                         \"vnd.oasis.opendocument.presentation\",\\\r\n                         \"vnd.openxmlformats-officedocument.presentationml.\" + \\\r\n                         \"presentation\"\r\n                        return \"presentation\"\r\n\r\n                    when \"pdf\" then return sub[1]\r\n                    when \"gzip\", \"zip\" then return 'archive'\r\n\r\n    # convert attachment to the format needed by the file picker\r\n    convertAttachments: (file) ->\r\n        name = file.generatedFileName\r\n        return {\r\n            name:               name\r\n            size:               file.length\r\n            type:               file.contentType\r\n            originalName:       file.fileName\r\n            contentDisposition: file.contentDisposition\r\n            contentId:          file.contentId\r\n            transferEncoding:   file.transferEncoding\r\n            url: \"/message/#{file.messageId}/attachments/#{name}\"\r\n        }\r\n\r\n    formatDate: (date) ->\r\n        if not date?\r\n            return\r\n        today = moment()\r\n        date  = moment date\r\n        if date.isBefore today, 'year'\r\n            formatter = 'DD/MM/YYYY'\r\n        else if date.isBefore today, 'day'\r\n            formatter = 'DD MMMM'\r\n        else\r\n            formatter = 'hh:mm'\r\n        return date.format formatter\r\n","module.exports =\r\n\r\n    init: ->\r\n        if not window.plugins?\r\n            window.plugins = {}\r\n\r\n        for own pluginName, pluginConf of window.plugins\r\n            if pluginConf.active\r\n                @activate pluginName\r\n\r\n        if MutationObserver?\r\n\r\n            config =\r\n                attributes: false\r\n                childList: true\r\n                characterData: false\r\n                subtree: true\r\n\r\n            onMutation = (mutations) ->\r\n                checkNode = (node, action) ->\r\n                    if node.nodeType isnt Node.ELEMENT_NODE\r\n                        return\r\n\r\n                    for own pluginName, pluginConf of window.plugins\r\n                        if pluginConf.active\r\n                            listener = pluginConf.onAdd if action is 'add'\r\n                            listener = pluginConf.onDelete if action is 'delete'\r\n                            if listener? and\r\n                            listener.condition.bind(pluginConf)(node)\r\n                                listener.action.bind(pluginConf)(node)\r\n\r\n                check = (mutation) ->\r\n\r\n                    nodes = Array.prototype.slice.call mutation.addedNodes\r\n                    checkNode node, 'add' for node in nodes\r\n\r\n                    nodes = Array.prototype.slice.call mutation.removedNodes\r\n                    checkNode node, 'del' for node in nodes\r\n\r\n                check mutation for mutation in mutations\r\n\r\n            # Observes DOM mutation to see if a plugin should be called\r\n            observer = new MutationObserver onMutation\r\n            observer.observe document, config\r\n\r\n        else\r\n            # Dirty fallback for IE\r\n            # @TODO use polyfill ???\r\n            setInterval ->\r\n                for own pluginName, pluginConf of window.plugins\r\n                    if pluginConf.active\r\n                        if pluginConf.onAdd?\r\n                            if pluginConf.onAdd.condition document.body\r\n                                pluginConf.onAdd.action document.body\r\n\r\n            , 200\r\n\r\n    activate: (key) ->\r\n        plugin = window.plugins[key]\r\n        type   = plugin.type\r\n        plugin.active = true\r\n\r\n        # Add custom events listeners\r\n        if plugin.listeners?\r\n            for own event, listener of plugin.listeners\r\n                window.addEventListener event, listener.bind(plugin)\r\n\r\n        if plugin.onActivate\r\n            plugin.onActivate()\r\n\r\n        if type?\r\n            for own pluginName, pluginConf of window.plugins\r\n                if pluginName is key\r\n                    continue\r\n                if pluginConf.type is type and pluginConf.active\r\n                    @deactivate pluginName\r\n\r\n    deactivate: (key) ->\r\n        plugin = window.plugins[key]\r\n        plugin.active = false\r\n\r\n        # remove custom events listeners\r\n        if plugin.listeners?\r\n            for own event, listener of plugin.listeners\r\n                window.removeEventListener event, listener\r\n\r\n        if plugin.onDeactivate\r\n            plugin.onDeactivate()\r\n\r\n    merge: (remote) ->\r\n        for own pluginName, pluginConf of remote\r\n            local = window.plugins[pluginName]\r\n            if local?\r\n                local.active = pluginConf.active\r\n            else\r\n                delete remote[pluginName]\r\n\r\n        for own pluginName, pluginConf of window.plugins\r\n            if not remote[pluginName]?\r\n                remote[pluginName] =\r\n                    name: pluginConf.name\r\n                    active: pluginConf.active\r\n\r\n","TaskStore = require '../stores/tasks_store'\r\nAppDispatcher = require '../app_dispatcher'\r\n{ActionTypes} = require '../constants/app_constants'\r\nurl = window.location.origin\r\npathToSocketIO = \"#{window.location.pathname}socket.io\"\r\nsocket = io.connect url, path: pathToSocketIO\r\n\r\ndispatchTaskUpdate = (task) ->\r\n    AppDispatcher.handleServerAction\r\n        type: ActionTypes.RECEIVE_TASK_UPDATE\r\n        value: task\r\n\r\ndispatchTaskDelete = (taskid) ->\r\n    AppDispatcher.handleServerAction\r\n        type: ActionTypes.RECEIVE_TASK_DELETE\r\n        value: taskid\r\n\r\nsocket.on 'task.create', dispatchTaskUpdate\r\nsocket.on 'task.update', dispatchTaskUpdate\r\nsocket.on 'task.delete', dispatchTaskDelete\r\n\r\nmodule.exports =\r\n\r\n    acknowledgeTask: (taskid) ->\r\n        socket.emit 'mark_ack', taskid\r\n","module.exports =\r\n\r\n    # Creates an immutable account from a raw account object\r\n    toImmutable: (rawAccount) ->\r\n\r\n        # Recursively creates Immutable OrderedMap of mailboxes\r\n        _createImmutableMailboxes = (children) ->\r\n            Immutable.Sequence children\r\n                .mapKeys (_, mailbox) -> mailbox.id\r\n                .map (mailbox) ->\r\n                    children = mailbox.children\r\n                    mailbox.children = _createImmutableMailboxes children\r\n                    return Immutable.Map mailbox\r\n                .toOrderedMap()\r\n\r\n        rawAccount.mailboxes = _createImmutableMailboxes rawAccount.mailboxes\r\n        return Immutable.Map rawAccount\r\n\r\n\r\n    toRawObject: toRawObject = (account) ->\r\n\r\n        _createRawObjectMailboxes = (children) ->\r\n            children?.map (child) ->\r\n                children = child.get 'children'\r\n                return child.set 'children', _createRawObjectMailboxes children\r\n            .toVector()\r\n\r\n        mailboxes = account.get 'mailboxes'\r\n        account = account.set 'mailboxes', _createRawObjectMailboxes mailboxes\r\n\r\n        return account.toJS()","request = superagent\r\n\r\nAccountTranslator = require './translators/account_translator'\r\n\r\nSettingsStore = require '../stores/settings_store'\r\n\r\nmodule.exports =\r\n\r\n\r\n    changeSettings: (settings, callback) ->\r\n        request.put \"settings\"\r\n        .set 'Accept', 'application/json'\r\n        .send settings\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n\r\n    fetchConversation: (emailID, callback) ->\r\n        request.get \"message/#{emailID}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n\r\n    fetchMessagesByFolder: (mailboxID, numPage, callback) ->\r\n        numByPage = SettingsStore.get 'messagesPerPage'\r\n        request.get \"mailbox/#{mailboxID}/page/#{numPage}/limit/#{numByPage}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    mailboxCreate: (mailbox, callback) ->\r\n        request.post \"/mailbox\"\r\n        .send mailbox\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    mailboxUpdate: (data, callback) ->\r\n        request.put \"/mailbox/#{data.mailboxID}\"\r\n        .send data\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    mailboxDelete: (data, callback) ->\r\n        request.del \"/mailbox/#{data.mailboxID}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    messageSend: (message, callback) ->\r\n        request.post \"/message\"\r\n        .send message\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    messageDelete: (messageId, callback) ->\r\n        request.del \"/message/#{messageId}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    messagePatch: (messageId, patch, callback) ->\r\n        request.patch \"/message/#{messageId}\", patch\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    conversationDelete: (conversationId, callback) ->\r\n        request.del \"/conversation/#{conversationId}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    conversationPatch: (conversationId, patch, callback) ->\r\n        request.patch \"/conversation/#{conversationId}\", patch\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback \"Something went wrong -- #{res.body}\"\r\n\r\n    createAccount: (account, callback) ->\r\n\r\n        # TODO: validation & sanitization\r\n\r\n        request.post 'account'\r\n        .send account\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback res.body, null\r\n\r\n    editAccount: (account, callback) ->\r\n\r\n        # TODO: validation & sanitization\r\n        rawAccount = AccountTranslator.toRawObject account\r\n\r\n        request.put \"account/#{rawAccount.id}\"\r\n        .send rawAccount\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback res.body, null\r\n\r\n    removeAccount: (accountID) ->\r\n\r\n        request.del \"account/#{accountID}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) -> # nothing\r\n\r\n    accountDiscover: (domain, callback) ->\r\n\r\n        request.get \"provider/#{domain}\"\r\n        .set 'Accept', 'application/json'\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback res.body, null\r\n\r\n    search: (query, numPage, callback) ->\r\n        encodedQuery = encodeURIComponent query\r\n        numByPage = SettingsStore.get 'messagesPerPage'\r\n        request.get \"search/#{encodedQuery}/page/#{numPage}/limit/#{numByPage}\"\r\n        .end (res) ->\r\n            if res.ok\r\n                callback null, res.body\r\n            else\r\n                callback res.body, null\r\n"]}