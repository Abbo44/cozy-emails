{"version":3,"file":"public/js/app.js","sources":["app/actions/layout_actions.coffee","app/components/application.coffee","app/components/compose.coffee","app/components/email-list.coffee","app/components/email-thread.coffee","app/components/menu.coffee","app/components/new-mailbox.coffee","app/initialize.coffee","app/mixins/router.coffee","app/router.coffee","app/stores/emails.coffee","app/stores/layout.coffee","app/stores/mailboxes.coffee"],"names":[],"mappings":"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","sourcesContent":["module.exports =\n\n    showRoute: (name, leftPanelInfo, rightPanelInfo) ->\n        @dispatch 'SHOW_ROUTE', {name, leftPanelInfo, rightPanelInfo}\n","# React components\n{body, div, p, form, i, input, span} = React.DOM\nMenu = require './menu'\nEmailList = require './email-list'\nEmailThread = require './email-thread'\nCompose = require './compose'\n\n# Fluxxor requirements\nFluxMixin = Fluxxor.FluxMixin React\nStoreWatchMixin = Fluxxor.StoreWatchMixin\n\n###\n    This component is the root of the React tree.\n\n    It has two functions:\n        - building the layout based on the router\n        - listening for changes in  the model (Flux stores)\n          and re-render accordingly\n\n    About routing: it uses Backbone.Router as a source of truth for the layout.\n    (based on: https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\n\n    Fluxxor reference:\n     - FluxMixin: http://fluxxor.com/documentation/flux-mixin.html\n     - StoreWatchMixin: http://fluxxor.com/documentation/store-watch-mixin.html\n###\nmodule.exports = Application = React.createClass\n    displayName: 'Application'\n\n    mixins: [\n        FluxMixin\n        StoreWatchMixin(\"MailboxStore\", \"EmailStore\", \"LayoutStore\")\n    ]\n\n    render: ->\n        # Shortcut\n        layout = @state.layout\n\n        # is the layout a full-width panel or two panels sharing the width\n        isFullWidth = @state.isLayoutFullWidth\n\n        leftPanelLayoutMode = if isFullWidth then 'full' else 'left'\n\n        # css classes are a bit long so we use a subfunction to get them\n        panelClasses = @getPanelClasses isFullWidth\n        # Actual layout\n        div className: 'container-fluid',\n            div className: 'row',\n\n                # Menu is self-managed because this part of the layout\n                # is always the same.\n                Menu mailboxes: @state.mailboxes\n\n                div id: 'page-content', className: 'col-xs-12 col-md-11',\n\n                    # The quick actions bar shoud be moved in its own component\n                    # when its feature is implemented.\n                    div id: 'quick-actions', className: 'row',\n                        i className: 'fa fa-bars hidden-md hidden-lg pull-left'\n                        form className: 'form-inline col-md-6 hidden-xs hidden-sm pull-left',\n                            div className: 'form-group',\n                                div className: 'input-group',\n                                    input className: 'form-control', type: 'text', placeholder: 'Search...'\n                                    div className: 'input-group-addon btn btn-cozy',\n                                        span className: 'fa fa-search'\n\n                    # Two layout modes: one full-width panel or two panels\n                    div id: 'panels', className: 'row',\n                        div className: panelClasses.leftPanel,\n                            @getPanelComponent layout.leftPanel, leftPanelLayoutMode\n                        if not isFullWidth\n                            div className: panelClasses.rightPanel,\n                                @getPanelComponent layout.rightPanel, 'right'\n\n\n    # Panels CSS classes are a bit long so we get them from a this subfunction\n    getPanelClasses: (isFullWidth) ->\n        if isFullWidth\n            classes = leftPanel: 'panel col-xs-12 col-md-12'\n        else\n            classes =\n                leftPanel: 'panel col-xs-12 col-md-6'\n                rightPanel: 'panel col-xs-12 col-md-6 hidden-xs hidden-sm'\n\n        return classes\n\n\n    # Factory of React components for panels\n    getPanelComponent: (panelInfo, layout) ->\n\n        # -- Generates a list of emails for a given mailbox\n        if panelInfo.action is 'mailbox.emails'\n            firstMailbox = @getFlux().store('MailboxStore').getDefault()\n\n            # display emails of the selected mailbox\n            if panelInfo.parameter?\n                emailStore = @getFlux().store 'EmailStore'\n                mailboxID = parseInt panelInfo.parameter\n                return EmailList\n                    emails: emailStore.getEmailsByMailbox mailboxID\n                    layout: layout\n\n            # default: display emails of the first mailbox\n            else if not panelInfo.parameter? and firstMailbox?\n                emailStore = @getFlux().store 'EmailStore'\n                mailboxID = firstMailbox.id\n                return EmailList\n                    emails: emailStore.getEmailsByMailbox mailboxID\n                    layout: layout\n\n            # there is no mailbox and mailbox not found case\n            else\n                return div null, 'Handle empty mailbox case'\n\n        # -- Generates a configuration window for a given mailbox\n        # or the mailbox creation form.\n        else if panelInfo.action is 'mailbox.config'\n            return div null, 'Mailbox configuration/creation'\n\n        # -- Generates an email thread\n        else if panelInfo.action is 'email'\n            email = @getFlux().store('EmailStore').getByID panelInfo.parameter\n            return EmailThread\n                email: email\n                layout: layout\n\n        # -- Generates the new email composition form\n        else if panelInfo.action is 'compose'\n            return Compose {layout}\n\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\n        else return div null, 'Unknown component'\n\n\n    # Result will be merged with `getInitialState` result.\n    getStateFromFlux: ->\n        flux = @getFlux()\n        return {\n            mailboxes: flux.store('MailboxStore').getAll()\n            emails: flux.store('EmailStore').getAll()\n            layout: flux.store('LayoutStore').getState()\n            isLayoutFullWidth: flux.store('LayoutStore').isFullWidth()\n        }\n\n\n    # Listens to router changes. Renders the component on changes.\n    componentWillMount: ->\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\n        # to rebind its scope on the fly\n        @onRoute = (route, params) =>\n            #@forceUpdate()\n\n        @props.router.on 'route', @onRoute\n\n\n    # Stops listening to router changes\n    componentWillUnmount: ->\n        @props.router.off 'route', @onRoute\n","{div, h3, a, i, textarea} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = Compose = React.createClass\n    displayName: 'Compose'\n\n    mixins: [RouterMixin]\n\n    render: ->\n\n        expandUrl = @buildUrl\n            direction: 'left'\n            action: 'compose'\n            parameter: null\n            fullWidth: true\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        div id: 'email-compose',\n            h3 null,\n                a href: expandUrl, className: 'expand',\n                    i className: 'fa fa-angle-left'\n                'Compose new email'\n                a href: closeUrl, className: 'close-email',\n                    i className:'fa fa-times'\n            textarea defaultValue: 'Hello, how are you doing today?'\n","{div, ul, li, a, span, i, p} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = EmailList = React.createClass\n    displayName: 'EmailList'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        div id: 'email-list',\n            ul className: 'list-unstyled',\n                for email, key in @props.emails\n                    @getEmailRender email, key\n\n    getEmailRender: (email, key) ->\n\n        classes = classer read: email.isRead\n\n        url = @buildUrl\n            direction: 'right'\n            action: 'email'\n            parameter: email.id\n\n        li className: 'email ' + classes, key: key,\n            a href: url,\n                i className: 'fa fa-user'\n                span className: 'email-participants', @getParticipants email\n                div className: 'email-preview',\n                    span className: 'email-title', email.title\n                    p null, email.content\n                span className: 'email-hour', email.date\n\n\n\n    getParticipants: (email) ->\n        list = [email.sender].concat email.receivers\n        return list.join ', '\n","{div, ul, li, span, i, p, h3, a} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = EmailThread = React.createClass\n    displayName: 'EmailThread'\n\n    mixins: [RouterMixin]\n\n    render: ->\n\n        expandUrl = @buildUrl\n            direction: 'left'\n            action: 'email'\n            parameter: @props.email.id\n            fullWidth: true\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        div id: 'email-thread',\n\n            #ul className: 'nav nav-tabs nav-justified',\n            #    li className: 'active',\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', '&times;'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', '&times;'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', '&times;'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', '&times;'\n            #    li null,\n            #        a href: '#', 'Responsive Cozy Emails'\n            #        span className: 'close', '&times;'\n\n            h3 null,\n                a href: expandUrl, className: 'expand',\n                    i className: 'fa fa-angle-left'\n                @props.email.title\n                a href: closeUrl, className: 'close-email',\n                    i className:'fa fa-times'\n            ul className: 'email-thread list-unstyled',\n                li className: 'email unread',\n                    div className: 'email-header',\n                        i className: 'fa fa-user'\n                        div className: 'email-participants',\n                            span  className: 'sender', 'Joseph'\n                            span className: 'receivers', 'À Frank Rousseau'\n                        span className: 'email-hour', @props.email.date\n                    div className: 'email-preview',\n                        p null, @props.email.content\n                    div className: 'email-content', @props.email.content\n                    div className: 'clearfix'\n","{div, ul, li, a, span, i} = React.DOM\n\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router'\n\nmodule.exports = Menu = React.createClass\n    displayName: 'Menu'\n\n    mixins: [RouterMixin]\n\n\n    getInitialState: ->\n        # which mailbox is currently browsed\n        return activeMailbox: null\n\n\n    render: ->\n\n        composeUrl = @buildUrl\n            direction: 'right'\n            action: 'compose'\n            parameter: null\n            fullWidth: false\n\n        div id: 'menu', className: 'col-xs-12 col-md-1 hidden-xs hidden-sm',\n            a href: composeUrl, className: 'menu-item compose-action',\n                i className: 'fa fa-edit'\n                span className: 'mailbox-label', 'Compose'\n\n            ul id: 'mailbox-list', className: 'list-unstyled',\n                for mailbox, key in @props.mailboxes\n                    @getMailboxRender mailbox, key\n\n            a href: '#', className: 'menu-item new-mailbox-action',\n                i className: 'fa fa-inbox'\n                span className: 'mailbox-label', 'New mailbox'\n\n\n    # renders a single mailbox and its submenu\n    getMailboxRender: (mailbox, key) ->\n        isActive = (not @state.activeMailbox and key is 0) \\\n                    or @state.activeMailbox is mailbox.id\n\n        mailboxClasses = classer active: isActive\n        url = @buildUrl\n            direction: 'left'\n            action: 'mailbox.emails'\n            parameter: mailbox.id\n            fullWidth: false\n\n        li className: mailboxClasses, key: key,\n            a href: url, className: 'menu-item ' + mailboxClasses,\n                i className: 'fa fa-inbox'\n                span className: 'badge', mailbox.unreadCount\n                span className: 'mailbox-label', mailbox.label\n\n            ul className: 'list-unstyled submenu',\n                a href: '#', className: 'menu-item',\n                    i className: 'fa fa-star'\n                    span className: 'badge', 3\n                    span className: 'mailbox-label', 'Favorite'\n                a href: '#', className: 'menu-item',\n                    i className: 'fa fa-send'\n                    span className: 'badge', ''\n                    span className: 'mailbox-label', 'Sent'\n                a href: '#', className: 'menu-item',\n                    i className: 'fa fa-trash-o'\n                    span className: 'badge', ''\n                    span className: 'mailbox-label', 'Trash'\n","{div, h3, form, ul, li, a, span, i, p} = React.DOM\nclasser = React.addons.classSet\n\n\nmodule.exports = React.createClass\n    displayName: 'NewMailbox'\n\n    render: ->\n\n        div id: 'mailbox-new',\n            h3 null, 'New mailbox'\n\n            #form\n","# Waits for the DOM to be ready\n$ ->\n\n    # Fluxxor initialization (model)\n    MailboxStore = require './stores/mailboxes'\n    EmailStore = require './stores/emails'\n    LayoutStore = require './stores/layout'\n\n    stores =\n        MailboxStore: new MailboxStore()\n        EmailStore: new EmailStore()\n        LayoutStore: new LayoutStore()\n\n    actions =\n        layout: require './actions/layout_actions'\n\n    flux = new Fluxxor.Flux stores, actions\n\n\n    # Routing management\n    Router = require 'router'\n    @router = new Router flux: flux\n    window.router = @router\n\n    # Starts the application by initializing the router\n    Backbone.history.start()\n\n\n    # Binds the router and flux to the React application\n    Application = require './components/application'\n    application = Application router: @router, flux: flux\n    React.renderComponent application, document.body\n\n\n    # Makes this object immuable.\n    Object.freeze this if typeof Object.freeze is 'function'","###\n    Router mixin.\n    Aliases `buildUrl` and `buildClosePanelUrl`\n###\n\nrouter = window.router\n\nmodule.exports =\n\n    buildUrl: (options) ->\n        router.buildUrl.call router, options\n\n    buildClosePanelUrl: (direction) ->\n        router.buildClosePanelUrl.call router, direction\n\n\n","###\n    Routing component. We let Backbone handling browser stuff\n    and we format the varying parts of the layout.\n\n    URLs are built in the following way:\n        - a first part that represents the left panel\n        - a second part that represents the right panel\n        - if there is just one part, it represents a full width panel\n\n    Since Backbone.Router only handles one part, routes initialization mechanism\n    is overriden so we can post-process the second part of the URL.\n\n    Example: a defined pattern will generates two routes.\n        - `mailbox/a/path/:id`\n        - `mailbox/a/path/:id/*rightPanel`\n\n        Each pattern is actually the pattern itself plus the pattern and\n        another pattern.\n\n    Currently, only one parameter is supported per pattern.\n###\n\nmodule.exports = class Router extends Backbone.Router\n\n    patterns:\n        'mailbox.config':\n            pattern: 'mailbox/:id/config'\n            callback: 'mailbox.config'\n        'mailbox.new':\n            pattern: 'mailbox/new'\n            callback: 'mailbox.new'\n        'mailbox.emails':\n            pattern: 'mailbox/:id'\n            callback: 'mailbox.emails'\n        'email':\n            pattern: 'email/:id'\n            callback: 'email'\n        'compose':\n            pattern: 'compose'\n            callback: 'compose'\n\n    # default route\n    routes: '': 'mailbox.emails'\n\n    # we store a regexified version of each patterns\n    cachedPatterns: []\n\n    initialize: (options) ->\n\n        # defines the routes from the patterns\n        for key, route of @patterns\n\n            # caches each regex' pattern to avoid to recalculate them each time\n            @cachedPatterns.push\n                key: key\n                pattern: @_routeToRegExp route.pattern\n\n            # each pattern has two routes: full-width or with a right panel\n            @routes[route.pattern] = route.callback\n            @routes[\"#{route.pattern}/*rightPanel\"] = route.callback\n\n        # Backbone's magic\n        @_bindRoutes()\n\n        # Updates the LayoutStore for each matched request\n        @flux = options.flux\n        @on 'route', (name, args) =>\n            [leftPanelInfo, rightPanelInfo] = @_processSubRouting args\n            @flux.actions.layout.showRoute name, leftPanelInfo, rightPanelInfo\n\n\n    ###\n        Extracts and matches the second part of the URl if it exists.\n    ###\n    _processSubRouting: (args) ->\n        [leftPanelInfo, rightPanelInfo] = args\n\n        # if the first panel route doesn't have a parameter or if it,\n        # the rightPanelInfo is its first parameter\n        isNumber = /[0-9]+/.test leftPanelInfo\n        if not rightPanelInfo? and leftPanelInfo? and \\\n           leftPanelInfo.indexOf(':') is -1\n            rightPanelInfo = leftPanelInfo\n\n        # check all the routes for the second part of the URL\n        route = _.first _.filter @cachedPatterns, (element) ->\n            return element.pattern.test rightPanelInfo\n\n        # if a route has been found, we format it\n        if route?\n            args = @_extractParameters route.pattern, rightPanelInfo\n            rightPanelInfo = action: route.key, parameter: args[0]\n        else\n            rightPanelInfo = null\n\n        return [leftPanelInfo, rightPanelInfo]\n\n\n    ###\n        Builds a route from panel information.\n        Two modes:\n            - options has leftPanel and/or rightPanel attributes with the\n              panel(s) information.\n            - options has the panel information along a `direction` attribute\n              that can be `left` or `right`. It's the short version.\n    ###\n    buildUrl: (options) ->\n\n        @current = @flux.store('LayoutStore').getState()\n\n        # Loads the panel from the options or the current router status to keep\n        # track of current URLs\n        if options.leftPanel? or options.rightPanel?\n            leftPanelInfo = options.leftPanel or @current.leftPanel\n            rightPanelInfo = options.rightPanel or @current.rightPanel\n        else\n            # Handles short version\n            if options.direction?\n                if options.direction is 'left'\n                    leftPanelInfo = options\n                    rightPanelInfo = @current.rightPanel\n                else if options.direction is 'right'\n                    leftPanelInfo = @current.leftPanel\n                    rightPanelInfo = options\n                else\n                    console.warn '`direction` should be `left`, `right`.'\n            else\n                console.warn '`direction` parameter is mandatory when using short call.'\n\n        # if the `fullWidth` parameter is set, it ignores the right panel info\n        if (options.leftPanel? or options.direction is 'left') and options.fullWidth\n            if options.leftPanel? or options.direction is 'right'\n                console.warn \"You shouldn't use the fullWidth option with a right panel\"\n            rightPanelInfo = null\n\n        # Actual building\n        leftPart = @_getURLFromCurrentRoute leftPanelInfo\n        rightPart = @_getURLFromCurrentRoute rightPanelInfo\n\n        url = \"##{leftPart}\"\n        if rightPart? and rightPart.length > 0\n            url = \"#{url}/#{rightPart}\"\n\n        return url\n\n\n    ###\n        Closes a panel given a direction. If a full-width panel is closed,\n        the URL points to the default route.\n    ###\n    buildClosePanelUrl: (direction) ->\n\n        # If a left panel is closed, the right panel becomes full-width.\n        # If a full-width panel is closed, `@current.rightPanel` is null and\n        # the default route is loaded.\n        if direction is 'left' or direction is 'full'\n            panelInfo = @current.rightPanel\n        else\n            panelInfo = @current.leftPanel\n\n        if panelInfo?\n            panelInfo.direction = 'left'\n            panelInfo.fullWidth = true\n            return @buildUrl panelInfo\n        else\n            return '#' # loads the default route\n\n\n    # Builds the URL string from a route. Only handles routes with\n    # the `:id` named parameter or no parameter.\n    _getURLFromCurrentRoute: (panel) ->\n        if panel?\n            pattern = @patterns[panel.action].pattern\n\n            if panel.action is 'mailbox.emails' and not panel.parameter?\n                panel.parameter = @flux.store('MailboxStore').getDefault().id\n\n            partURL = pattern.replace ':id', panel.parameter\n\n            return partURL\n        else\n            return ''\n","module.exports = EmailStore = Fluxxor.createStore\n    initialize: ->\n        @emails = [\n\n            {\n                id: 1\n                title: 'Question application Email'\n                sender: 'joseph.silvestre@cozycloud.cc'\n                receivers: ['frank.rousseau@cozycloud.cc']\n                content: '''\n                Salut Frank,\n\n                J'ai une question concernant l'application Email : jusqu'à quel niveau doit-on gérer le responsive ?\n\n                J'ai commencé à vouloir le faire très proprement mais je me suis dit la chose suivante : personne n'utilise un navigateur sur mobile pour regarder ses emails. Où je me trompe ?\n                '''\n                date: '12:38'\n                isRead: true\n                mailbox: 1\n            },\n            {\n                id: 2\n                title: 'Question application Email'\n                sender: 'frank.rousseau@cozycloud.cc'\n                receivers: ['joseph.silvestre@cozycloud.cc']\n                content: '''\n                Je pense que ce n'est utile que pour la démo mais bon c'est ce que les gens regardent en premier. Notre expérience mobile est assez mauvaise aujourd'hui (j'ai testé ça ce week-end, il n'y que contacts de bien). Du coup pour emails ce serait pas mal d'avoir quelque chose qui passe aussi (mais vas-y bourrin, quand ça ne rentre pas enlève des éléments/features).\n\n                Pour le responsive on a en gros quatre tailles :\n\n                - 1900px de large pour les grands écrans\n                - 1200px de large pour les portables (En général ce qui passe bien sur 1200px passe bien sur 1900px)\n                - 960px de large pour les tablettes (en fait ici on fait pour 720px mais on actionne à partir de 960px les modifs).\n                - 480px de large pour les téléphones\n                '''\n                date: '12:38'\n                isRead: true\n                mailbox: 1\n            }\n        ]\n\n    getAll: ->\n        return @emails\n\n    getByID: (emailID) -> _.findWhere @emails, id: parseInt emailID\n\n    getEmailsByMailbox: (mailboxID) ->\n        _.filter @emails, (email) -> return email.mailbox is mailboxID\n","module.exports = LayoutStore = Fluxxor.createStore\n\n    actions:\n        'SHOW_ROUTE': 'onRoute'\n\n    initialize: ->\n        @layout =\n            leftPanel:\n                action: 'mailbox.emails'\n                parameter: null\n            rightPanel: null\n\n    onRoute: (args) ->\n\n        {name, leftPanelInfo, rightPanelInfo} = args\n\n        @layout =\n            leftPanel:\n                action: name\n                parameter: leftPanelInfo # holds the parameter value\n            rightPanel: rightPanelInfo\n\n        @emit 'change'\n\n    getState: -> return @layout\n\n    isFullWidth: -> return not @layout.rightPanel?\n","module.exports = MailboxStore = Fluxxor.createStore\n    initialize: ->\n        @mailboxes = [\n\n            {\n                id: 1\n                label: 'joseph.silvestre38@gmail.com'\n                unreadCount: 1275\n            },\n            {\n                id: 2\n                label: 'joseph.silvestre@cozycloud.cc'\n                unreadCount: 369\n            }\n\n        ]\n\n    getAll: -> return @mailboxes\n\n    getDefault: -> return @mailboxes[0]"]}