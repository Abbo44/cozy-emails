// Generated by CoffeeScript 1.8.0
var Account, americano;

americano = require('americano-cozy');

module.exports = Account = americano.getModel('Account', {
  label: String,
  login: String,
  password: String,
  smtpServer: String,
  smtpPort: Number,
  imapServer: String,
  imapPort: Number,
  mailboxes: function(x) {
    return x;
  }
});

Account.getAll = function(callback) {
  return Account.request('all', callback);
};

Account.pathOfId = function(id, callback) {
  return Account.rawRequest('pathById', {
    key: id
  }, function(err, results) {
    var _ref;
    return callback(err, results != null ? (_ref = results.rows[0]) != null ? _ref.value : void 0 : void 0);
  });
};

Account.prototype.mailboxIds = function(callback) {
  var getIDs, ids;
  ids = [];
  (getIDs = function(children) {
    var child, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = children.length; _i < _len; _i++) {
      child = children[_i];
      ids.push(child.id);
      _results.push(getIDs(child.children));
    }
    return _results;
  })(this.mailboxes);
  return ids;
};

Account.clientVersion = function(account) {
  var cleanUp;
  cleanUp = function(children) {
    return children.map(function(child) {
      return {
        id: child.id,
        label: child.label,
        children: cleanUp(child.children)
      };
    });
  };
  account.mailboxes = cleanUp(account.mailboxes);
  return account;
};

require('bluebird').promisifyAll(Account, {
  suffix: 'Promised'
});

require('bluebird').promisifyAll(Account.prototype, {
  suffix: 'Promised'
});
