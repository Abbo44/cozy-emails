// Generated by CoffeeScript 1.8.0
var Account, HttpError, Imap, async;

async = require('async');

Account = require('../models/account');

Imap = require('../processes/imap');

HttpError = require('../utils/errors').HttpError;

module.exports.create = function(req, res, next) {
  var account;
  account = req.body;
  return Imap.getMailboxes(account).then(function(mailboxes) {
    return account.mailboxes = mailboxes;
  }).then(function(mailboxes) {
    return Account.createPromised(account);
  }).then(function(account) {
    return res.send(201, Account.clientVersion(account));
  })["catch"](next);
};

module.exports.list = function(req, res, next) {
  return Account.getAllPromised().then(function(accounts) {
    return res.send(200, accounts.map(Account.clientVersion));
  })["catch"](next);
};

module.exports.fetch = function(req, res, next) {
  return Account.findPromised(req.params.accountID).then(function(account) {
    if (account) {
      return req.account = account;
    } else {
      throw new HttpError(404, 'Not Found');
    }
  }).nodeify(next);
};

module.exports.details = function(req, res, next) {
  return res.send(200, Account.clientVersion(req.account));
};

module.exports.edit = function(req, res, next) {
  var changes;
  changes = {
    label: req.body.label,
    login: req.body.login,
    password: req.body.password,
    smtpServer: req.body.smtpServer,
    smtpPort: req.body.smtpPort,
    imapServer: req.body.imapServer,
    imapPort: req.body.imapPort
  };
  return req.account.updateAttributesPromised(changes).then(function(account) {
    return res.send(200, Account.clientVersion(account));
  })["catch"](next);
};

module.exports.remove = function(req, res, next) {
  var ids;
  ids = req.account.mailboxIds();
  return req.account.destroyPromised().then(function() {
    return res.send(204);
  })["catch"](next);
};
